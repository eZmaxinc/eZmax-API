{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support-api@ezmax.ca",
      "name": "API Support department",
      "url": "https://www.ezmax.ca/en/contact"
    },
    "description": "This API expose all the functionnalities for the eZmax and eZsign applications.",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "https://www.ezmax.ca/TODO",
    "title": "eZmax API Definition (PowerAutomate)",
    "version": "1.2.0"
  },
  "host": "prod.api.appcluster01.ca-central-1.ezmax.com",
  "basePath": "/rest",
  "schemes": [
    "https"
  ],
  "paths": {
    "/1/object/activesession/getCurrent": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/activesession-getCurrent-v1-Response"
            }
          },
          "350": {
            "description": "The user must authenticate before he can continue with this request"
          },
          "351": {
            "description": "The user is configured with 2FA and needs to validate its phone number before he can continue with this request"
          },
          "352": {
            "description": "The user is configured with 2FA and needs to answer a Secretquestion before he can continue with this request",
            "schema": {
              "$ref": "#/definitions/Common-Response-Redirect-sSecretquestionTextX"
            }
          },
          "353": {
            "description": "The user must accept clauses before he can continue with this request"
          },
          "354": {
            "description": "The user's computer must be validated before he can continue with this request"
          },
          "355": {
            "description": "The user must change its password before he can continue with this request"
          },
          "356": {
            "description": "The user is not running the latest version of the native application. He must valide or update its version before he can continue with this request"
          }
        },
        "description": "Retrieve the details about the current activesession",
        "operationId": "Activesession_GetCurrent_V1",
        "summary": "Get Current Activesession",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": [
          "EzsignSigner"
        ]
      }
    },
    "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique ID of the Ezsigndocument",
            "in": "path",
            "minimum": 0,
            "name": "pkiEzsigndocumentID",
            "required": true,
            "type": "integer"
          },
          {
            "description": "The type of document to retrieve.\n\n1. **Initial** Is the initial document before any signature were applied.\n2. **SignatureReady** Is the version containing the annotations/form to show the signer.\n3. **Signed** Is the final document once all signatures were applied.\n4. **Proofdocument** Is the evidence report.\n5. **Proof** Is the complete evidence archive including all of the above and more.\n",
            "enum": [
              "Initial",
              "SignatureReady",
              "Signed",
              "Proof",
              "Proofdocument"
            ],
            "in": "path",
            "name": "eDocumentType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigndocument-getDownloadUrl-v1-Response"
            }
          },
          "404": {
            "description": "The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          },
          "422": {
            "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "This endpoint returns URLs to different files that can be downloaded during the signing process.\n\nThese links will expire after 5 minutes so the download of the file should be made soon after retrieving the link.",
        "operationId": "Ezsigndocument_GetDownloadUrl_V1",
        "summary": "Retrieve a URL to download documents.",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": [
          "EzsignSigner"
        ]
      }
    },
    "/1/object/ezsignfolder/{pkiEzsignfolderID}/dispose": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique ID of the Ezsignfolder",
            "in": "path",
            "minimum": 0,
            "name": "pkiEzsignfolderID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsignfolder-dispose-v1-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfolder-dispose-v1-Response"
            }
          },
          "404": {
            "description": "The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          },
          "422": {
            "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "",
        "operationId": "Ezsignfolder_Dispose_V1",
        "summary": "Dispose the Ezsignfolder",
        "x-permissions": [
          "ElectronicSignature_DisposalofeZsignfolders"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsigndocument": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsigndocument-createObject-v2-Request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigndocument-createObject-v2-Response"
            }
          },
          "422": {
            "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body. If the error is recoverable sTemporaryFileUrl will be set and you can use this url to try a new request without sending the file over again",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error-sTemporaryFileUrl"
            }
          }
        },
        "description": "The endpoint allows to create one or many elements at once.",
        "operationId": "Ezsigndocument_CreateObject_V2",
        "summary": "Create a new Ezsigndocument",
        "x-ms-visibility": "important",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsigndocument/{pkiEzsigndocumentID}/applyEzsigntemplate": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique ID of the Ezsigndocument",
            "in": "path",
            "minimum": 0,
            "name": "pkiEzsigndocumentID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsigndocument-applyEzsigntemplate-v2-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigndocument-applyEzsigntemplate-v2-Response"
            }
          },
          "404": {
            "description": "The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          },
          "422": {
            "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "This endpoint applies a predefined template to the ezsign document.\nThis allows to automatically apply all the form and signature fields on a document in a single step.\n\nThe document must not already have fields otherwise an error will be returned.",
        "operationId": "Ezsigndocument_ApplyEzsigntemplate_V2",
        "summary": "Apply an Ezsigntemplate to the Ezsigndocument.",
        "x-ms-visibility": "important",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsignfolder": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsignfolder-createObject-v2-Request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfolder-createObject-v2-Response"
            }
          }
        },
        "description": "The endpoint allows to create one or many elements at once.",
        "operationId": "Ezsignfolder_CreateObject_V2",
        "summary": "Create a new Ezsignfolder",
        "x-ms-visibility": "important",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsignfoldersignerassociation": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsignfoldersignerassociation-createObject-v2-Request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfoldersignerassociation-createObject-v2-Response"
            }
          }
        },
        "description": "The endpoint allows to create one or many elements at once.",
        "operationId": "Ezsignfoldersignerassociation_CreateObject_V2",
        "summary": "Create a new Ezsignfoldersignerassociation",
        "x-ms-visibility": "important",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsignfoldertype/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Ezsignfoldertypes to return",
            "enum": [
              "Active",
              "All"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfoldertype-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Ezsignfoldertype to be used in a dropdown or autocomplete control.",
        "operationId": "Ezsignfoldertype_GetAutocomplete_V2",
        "summary": "Retrieve Ezsignfoldertypes and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsigntemplate/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Ezsigntemplates to return",
            "enum": [
              "All"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigntemplate-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Ezsigntemplate to be used in a dropdown or autocomplete control.",
        "operationId": "Ezsigntemplate_GetAutocomplete_V2",
        "summary": "Retrieve Ezsigntemplates and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsigntemplatepackage/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Ezsigntemplatepackages to return",
            "enum": [
              "All",
              "AllMultipleCopiesDisabled"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigntemplatepackage-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Ezsigntemplatepackage to be used in a dropdown or autocomplete control.",
        "operationId": "Ezsigntemplatepackage_GetAutocomplete_V2",
        "summary": "Retrieve Ezsigntemplatepackages and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/ezsigntsarequirement/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Ezsigntsarequirements to return",
            "enum": [
              "All",
              "User",
              "Usergroup"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "description": "The unique ID of the Ezsignfoldertype.",
            "in": "query",
            "minimum": 0,
            "name": "fkiEzsignfoldertypeID",
            "required": false,
            "type": "integer",
            "x-ms-dynamic-values": {
              "parameters": {
                "sSelector": "Active"
              },
              "operationId": "Ezsignfoldertype_GetAutocomplete_V2",
              "value-collection": "mPayload/a_objEzsignfoldertype",
              "value-path": "pkiEzsignfoldertypeID",
              "value-title": "sEzsignfoldertypeNameX"
            }
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsigntsarequirement-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Ezsigntsarequirement to be used in a dropdown or autocomplete control.",
        "operationId": "Ezsigntsarequirement_GetAutocomplete_V2",
        "summary": "Retrieve Ezsigntsarequirements and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/language/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Languages to return",
            "enum": [
              "All"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/language-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Language to be used in a dropdown or autocomplete control.",
        "operationId": "Language_GetAutocomplete_V2",
        "summary": "Retrieve Languages and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/secretquestion/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Secretquestions to return",
            "enum": [
              "All"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/secretquestion-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Secretquestion to be used in a dropdown or autocomplete control.",
        "operationId": "Secretquestion_GetAutocomplete_V2",
        "summary": "Retrieve Secretquestions and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/taxassignment/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Taxassignments to return",
            "enum": [
              "All",
              "AllButNonrecoverable"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/taxassignment-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Taxassignment to be used in a dropdown or autocomplete control.",
        "operationId": "Taxassignment_GetAutocomplete_V2",
        "summary": "Retrieve Taxassignments and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/user/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Users to return",
            "enum": [
              "AgentBrokerEmployeeEzsignUserNormal",
              "AgentBrokerEmployeeNormalBuiltIn",
              "AgentBrokerEzsignuserNormal",
              "ClonableUsers",
              "EzsignuserBuiltIn",
              "Normal",
              "UsergroupDelegated"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/user-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of User to be used in a dropdown or autocomplete control.",
        "operationId": "User_GetAutocomplete_V2",
        "summary": "Retrieve Users and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/2/object/userlogintype/getAutocomplete/{sSelector}": {
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The type of Userlogintypes to return",
            "enum": [
              "All"
            ],
            "in": "path",
            "name": "sSelector",
            "required": true,
            "type": "string"
          },
          {
            "default": "Active",
            "description": "Specify which results we want to display.",
            "enum": [
              "All",
              "Active",
              "Inactive"
            ],
            "in": "query",
            "name": "eFilterActive",
            "required": false,
            "type": "string"
          },
          {
            "description": "Allow to filter the returned results",
            "in": "query",
            "name": "sQuery",
            "required": false,
            "type": "string"
          },
          {
            "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
            "enum": [
              "*",
              "en",
              "fr"
            ],
            "in": "header",
            "name": "Accept-Language",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/userlogintype-getAutocomplete-v2-Response"
            }
          }
        },
        "description": "Get the list of Userlogintype to be used in a dropdown or autocomplete control.",
        "operationId": "Userlogintype_GetAutocomplete_V2",
        "summary": "Retrieve Userlogintypes and IDs",
        "x-ms-visibility": "advanced",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    },
    "/3/object/ezsignfolder/{pkiEzsignfolderID}/send": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "The unique ID of the Ezsignfolder",
            "in": "path",
            "minimum": 0,
            "name": "pkiEzsignfolderID",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsignfolder-send-v3-Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfolder-send-v3-Response"
            }
          },
          "404": {
            "description": "The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          },
          "422": {
            "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body",
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "",
        "operationId": "Ezsignfolder_Send_V3",
        "summary": "Send the Ezsignfolder to the signatories for signature",
        "x-ms-visibility": "important",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-usertypeextra": []
      }
    }
  },
  "definitions": {
    "Common-Format-ExternalID": {
      "description": "This field can be used to store an External ID from the client's system.\n\nAnything can be stored in this field, it will never be evaluated by the eZmax system and will be returned\nAS-IS.\n\nTo store multiple values, consider using a JSON formatted structure, a URL encoded string, a CSV or any other custom format.\n",
      "example": "{\"ID\": 1234, \"TAGS\": [\"tag1\", \"tag2\", \"tag3\"]}",
      "pattern": "^.{0,64}$",
      "type": "string",
      "x-ms-visibility": "advanced"
    },
    "Common-Response-Error": {
      "description": "Generic Error Message",
      "properties": {
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        }
      },
      "required": [
        "sErrorMessage",
        "eErrorCode"
      ],
      "type": "object"
    },
    "Common-Response-Error-EzsignformValidation": {
      "description": "Generic Error Message",
      "properties": {
        "a_objEzsignformfielderror": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Custom-Ezsignformfielderror-Response"
          },
          "type": "array"
        },
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        }
      },
      "required": [
        "a_objEzsignformfielderror",
        "sErrorMessage",
        "eErrorCode"
      ],
      "type": "object"
    },
    "Common-Response-Error-TooManyRequests": {
      "description": "Generic Error Message",
      "properties": {
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        }
      },
      "required": [
        "sErrorMessage",
        "eErrorCode"
      ],
      "type": "object"
    },
    "Common-Response-Error-sTemporaryFileUrl": {
      "description": "Generic Error Message",
      "properties": {
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        },
        "sTemporaryFileUrl": {
          "description": "The Temporary File Url of the document that was uploaded. That url can be reused instead of uploading the file again.",
          "example": "http://www.example.com/document.pdf",
          "type": "string"
        }
      },
      "required": [
        "sErrorMessage",
        "eErrorCode"
      ],
      "type": "object"
    },
    "Common-Response-Redirect-sSecretquestionTextX": {
      "description": "352 Redirect Message containing secret question",
      "properties": {
        "sSecretquestionTextX": {
          "$ref": "#/definitions/Field-sSecretquestionTextX"
        }
      },
      "required": [
        "sSecretquestionTextX"
      ],
      "type": "object"
    },
    "Common-Response-objDebug": {
      "description": "This is a generic debug object that is returned by all API requests",
      "example": {
        "a_objSQLQuery": [
          {
            "fDuration": 0.0001,
            "sQuery": "SELECT * FROM table"
          },
          {
            "fDuration": 0.0001,
            "sQuery": "SELECT * FROM table"
          }
        ],
        "iSQLQueries": 6,
        "iSQLSelects": 3,
        "sMemoryUsage": "11,923MB",
        "sRunTime": "0.6084s"
      },
      "properties": {
        "a_objSQLQuery": {
          "description": "An array of the SQL Queries that were executed during the API request execution",
          "items": {
            "$ref": "#/definitions/Common-Response-objSQLQuery"
          },
          "type": "array"
        },
        "iSQLQueries": {
          "description": "The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution",
          "type": "integer"
        },
        "iSQLSelects": {
          "description": "The number of SQL SELECT queries that were sent to the database server during the API request execution",
          "type": "integer"
        },
        "sMemoryUsage": {
          "description": "The peak memory allocated during the API request execution. Formatted as a human readable string",
          "type": "string"
        },
        "sRunTime": {
          "description": "The total server execution time of the API request execution. Formatted as a human readable string",
          "type": "string"
        }
      },
      "required": [
        "a_objSQLQuery",
        "iSQLQueries",
        "iSQLSelects",
        "sMemoryUsage",
        "sRunTime"
      ],
      "type": "object"
    },
    "Common-Response-objDebugPayload": {
      "description": "This is a debug object containing debugging information on the actual function",
      "properties": {
        "a_RequiredPermission": {
          "description": "An array of permissions required to access this function.\n\nIf the value \"0\" is present in the array, anyone can call this function.\n\nYou must have one of the permission to access the function. You don't need to have all of them.",
          "items": {
            "example": 117,
            "type": "integer"
          },
          "type": "array"
        },
        "bVersionDeprecated": {
          "description": "Wheter the current route is deprecated or not",
          "example": false,
          "type": "boolean"
        },
        "iVersionMax": {
          "description": "The maximum version of the function that can be called",
          "example": 2,
          "type": "integer"
        },
        "iVersionMin": {
          "description": "The minimum version of the function that can be called",
          "example": 1,
          "type": "integer"
        }
      },
      "required": [
        "a_RequiredPermission",
        "iVersionMax",
        "iVersionMin",
        "bVersionDeprecated"
      ],
      "type": "object"
    },
    "Common-Response-objSQLQuery": {
      "description": "Definition of objSQLQuery Object",
      "example": {
        "fDuration": 0.0001,
        "sQuery": "SELECT * FROM table"
      },
      "properties": {
        "fDuration": {
          "description": "Execution time of the SQL Query in seconds",
          "format": "float",
          "type": "number"
        },
        "sQuery": {
          "description": "The SQL Query",
          "type": "string"
        }
      },
      "required": [
        "fDuration",
        "sQuery"
      ],
      "type": "object"
    },
    "Computed-sAvatarUrl": {
      "description": "The url of the picture used as avatar",
      "example": "http://www.website.com/avatar.jpg",
      "type": "string"
    },
    "Computed-sUserName": {
      "description": "The description of the User in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Custom-Ezsignformfielderror-Response": {
      "description": "A Custom Ezsignformfield Object to contain an error list",
      "properties": {
        "a_objEzsignformfielderrortest": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Custom-Ezsignformfielderrortest-Response"
          },
          "type": "array"
        },
        "sEzsignformfieldLabel": {
          "$ref": "#/definitions/Field-sEzsignformfieldLabel"
        }
      },
      "required": [
        "sEzsignformfieldLabel",
        "a_objEzsignformfielderrortest"
      ],
      "type": "object"
    },
    "Custom-Ezsignformfielderrortest-Response": {
      "description": "A Custom Ezsignformfielderrortest Object to contain the detail of the test error",
      "properties": {
        "sEzsignformfielderrortestDetail": {
          "description": "The detail why the test failed",
          "pattern": "^.{0,255}$",
          "type": "string"
        },
        "sEzsignformfielderrortestName": {
          "description": "The name of the test",
          "pattern": "^.{0,50}$",
          "type": "string"
        }
      },
      "required": [
        "sEzsignformfielderrortestName",
        "sEzsignformfielderrortestDetail"
      ],
      "type": "object"
    },
    "Field-bActivesessionDebug": {
      "description": "Whether the active session is in debug or not",
      "example": false,
      "type": "boolean"
    },
    "Field-bActivesessionIssuperadmin": {
      "description": "Whether the active session is superadmin or not",
      "example": false,
      "type": "boolean"
    },
    "Field-bEzsignfoldersignerassociationReceivecopy": {
      "description": "If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain't required to sign the document.",
      "type": "boolean"
    },
    "Field-bEzsignfoldertypeIsactive": {
      "description": "Whether the Ezsignfoldertype is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsigntemplateIsactive": {
      "description": "Whether the Ezsigntemplate is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsigntemplatepackageIsactive": {
      "description": "Whether the Ezsigntemplatepackage is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsigntsarequirementIsactive": {
      "description": "Whether the Ezsigntsarequirement is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bLanguageIsactive": {
      "description": "Whether the Language is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bSecretquestionIsactive": {
      "description": "Whether the Secretquestion is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bTaxassignmentIsactive": {
      "description": "Whether the Taxassignment is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserInterfacedark": {
      "description": "Whether to use a dark mode interface",
      "example": false,
      "type": "boolean"
    },
    "Field-bUserIsactive": {
      "description": "Whether the User is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserlogintypeIsactive": {
      "description": "Whether the Userlogintype is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-dtEzsigndocumentDuedate": {
      "description": "The maximum date and time at which the Ezsigndocument can be signed.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtEzsignfolderDelayedsenddate": {
      "description": "The date and time at which the Ezsignfolder will be sent in the future.",
      "example": "2020-12-31T23:59:59.000Z",
      "type": "string"
    },
    "Field-eActivesessionOrigin": {
      "description": "The Origin of User for the Activesession",
      "enum": [
        "BuiltIn",
        "External"
      ],
      "example": "BuiltIn",
      "type": "string"
    },
    "Field-eActivesessionUsertype": {
      "description": "The Type of User for the Activesession",
      "enum": [
        "AgentBroker",
        "Assistant",
        "EzsignSigner",
        "EzsignUser",
        "Normal"
      ],
      "example": "Normal",
      "type": "string"
    },
    "Field-eActivesessionWeekdaystart": {
      "description": "The weekday start of the User.",
      "enum": [
        "Sunday",
        "Monday",
        "Tuesday",
        "Wednesday",
        "Thursday",
        "Friday",
        "Saturday"
      ],
      "example": "Sunday",
      "type": "string"
    },
    "Field-eErrorCode": {
      "description": "The error code. See documentation for valid values",
      "enum": [
        "BADREQUEST",
        "BADREQUEST_CLOCKSKEW",
        "UNAUTHORIZED_BADAUTH",
        "UNAUTHORIZED_BADMFA",
        "UNAUTHORIZED_EXPIRED",
        "UNAUTHORIZED_REQUEST",
        "FORBIDDEN",
        "FORBIDDEN_CONFIGURATION",
        "FORBIDDEN_MODULE",
        "FORBIDDEN_NOACCESS",
        "FORBIDDEN_PERMISSION",
        "FORBIDDEN_SUBSCRIPTION",
        "FORBIDDEN_USERTYPE",
        "FORBIDDEN_USER_ORIGIN_EXTERNAL",
        "NOTFOUND",
        "NOTFOUND_OBJECT",
        "NOTFOUND_ROUTE",
        "METHODNOTALLOWED",
        "NOTACCEPTABLE_CONTENT",
        "NOTACCEPTABLE_LANGUAGE",
        "UNPROCESSABLEENTITY_ACTIVESESSION_ALREADY_CLONING",
        "UNPROCESSABLEENTITY_CANNOTDELETE",
        "UNPROCESSABLEENTITY_CANNOTMODIFY",
        "UNPROCESSABLEENTITY_CHANGEPASSWORD_INVALID_CURRENT",
        "UNPROCESSABLEENTITY_CHANGEPASSWORD_SAME",
        "UNPROCESSABLEENTITY_DATA_MISSING",
        "UNPROCESSABLEENTITY_DATA_UNIQUE",
        "UNPROCESSABLEENTITY_DATA_VALIDATION",
        "UNPROCESSABLEENTITY_DATA_OUTOFBOUND",
        "UNPROCESSABLEENTITY_DOWNLOAD_ERROR",
        "UNPROCESSABLEENTITY_EZSIGNFORM_VALIDATION",
        "UNPROCESSABLEENTITY_EZSIGNSIGNERCONNECTED",
        "UNPROCESSABLEENTITY_NOTHINGTODO",
        "UNPROCESSABLEENTITY_NOTREADY",
        "UNPROCESSABLEENTITY_PDF_FORM",
        "UNPROCESSABLEENTITY_PDF_SIGNATURE",
        "UNPROCESSABLEENTITY_PDF_FORM_AND_SIGNATURE",
        "UNPROCESSABLEENTITY_PDF_INCOMPATIBLE",
        "UNPROCESSABLEENTITY_PDF_PASSWORD",
        "UNPROCESSABLEENTITY_PDF_WRONG_PASSWORD",
        "UNPROCESSABLEENTITY_PDF_REPAIRABLE",
        "UNPROCESSABLEENTITY_PDF_XFA",
        "UNPROCESSABLEENTITY_TEMPLATE_MISMATCH",
        "UNPROCESSABLEENTITY_UNMODIFIABLE_FIELD",
        "UNPROCESSABLEENTITY_USER_STAGED",
        "TOOMANYREQUESTS",
        "TOOMANYREQUESTS_THIRDPARTY",
        "ERROR_INTERNAL",
        "ERROR_CONFIGURATION",
        "ERROR_NOTIMPLEMENTED"
      ],
      "example": "BADREQUEST",
      "type": "string"
    },
    "Field-eEzsignfolderSendreminderfrequency": {
      "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
      "enum": [
        "None",
        "Daily",
        "Weekly"
      ],
      "example": "None",
      "type": "string"
    },
    "Field-eEzsignfoldertypePrivacylevel": {
      "description": "The Privacy level of the Ezsignfolder type.\n\n* **User** is for personal folders use and cannot be shared\n* **Usergroup** is for shared folders and complex permission can be configured to control access",
      "enum": [
        "User",
        "Usergroup"
      ],
      "type": "string"
    },
    "Field-eModuleInternalname": {
      "description": "The Internal name of the Module.\n\nThis is theoretically an enum field but there are so many possibles values we decided not to list them all.",
      "example": "Purchases",
      "type": "string"
    },
    "Field-eUserEzsignsendreminderfrequency": {
      "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
      "enum": [
        "None",
        "Daily",
        "Weekly"
      ],
      "example": "None",
      "type": "string"
    },
    "Field-eUserType": {
      "description": "The user type of the User.",
      "enum": [
        "AgentBroker",
        "Assistant",
        "Employee",
        "EzsignUser",
        "Normal"
      ],
      "example": "EzsignUser",
      "type": "string"
    },
    "Field-iUserInterfacecolor": {
      "description": "The int32 representation of the interface color. For example, RGB color #39435B would be 3752795",
      "example": 3752795,
      "format": "int32",
      "minimum": 0,
      "type": "integer"
    },
    "Field-iUserListresult": {
      "description": "The number of rows to return by default in lists",
      "example": 25,
      "maximum": 500,
      "minimum": 5,
      "type": "integer"
    },
    "Field-pkiApikeyID": {
      "description": "The unique ID of the Apikey",
      "example": 99,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsigndocumentID": {
      "description": "The unique ID of the Ezsigndocument",
      "example": 97,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfolderID": {
      "description": "The unique ID of the Ezsignfolder",
      "example": 33,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfoldersignerassociationID": {
      "description": "The unique ID of the Ezsignfoldersignerassociation",
      "example": 20,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfoldertypeID": {
      "description": "The unique ID of the Ezsignfoldertype.",
      "example": 5,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "Active"
        },
        "operationId": "Ezsignfoldertype_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objEzsignfoldertype",
        "value-path": "pkiEzsignfoldertypeID",
        "value-title": "sEzsignfoldertypeNameX"
      }
    },
    "Field-pkiEzsignsignergroupID": {
      "description": "The unique ID of the Ezsignsignergroup",
      "example": 27,
      "maximum": 65535,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsigntemplateID": {
      "description": "The unique ID of the Ezsigntemplate",
      "example": 36,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Ezsigntemplate_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objEzsigntemplate",
        "value-path": "pkiEzsigntemplateID",
        "value-title": "sEzsigntemplateDescription"
      }
    },
    "Field-pkiEzsigntemplatepackageID": {
      "description": "The unique ID of the Ezsigntemplatepackage",
      "example": 99,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Ezsigntemplatepackage_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objEzsigntemplatepackage",
        "value-path": "pkiEzsigntemplatepackageID",
        "value-title": "sEzsigntemplatepackageDescription"
      }
    },
    "Field-pkiEzsigntsarequirementID": {
      "description": "The unique ID of the Ezsigntsarequirement.\n\nDetermine if a Time Stamping Authority should add a timestamp on each of the signature.\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|\n|2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|\n|3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|",
      "example": 1,
      "maximum": 3,
      "minimum": 1,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Ezsigntsarequirement_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objEzsigntsarequirement",
        "value-path": "pkiEzsigntsarequirementID",
        "value-title": "sEzsigntsarequirementDescriptionX"
      }
    },
    "Field-pkiLanguageID": {
      "description": "The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|",
      "example": 2,
      "maximum": 2,
      "minimum": 1,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Language_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objLanguage",
        "value-path": "pkiLanguageID",
        "value-title": "sLanguageNameX"
      }
    },
    "Field-pkiModulesectionID": {
      "description": "The unique ID of the Modulesection",
      "example": 53,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiSecretquestionID": {
      "description": "The unique ID of the Secretquestion.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|The name of the hospital in which you were born|\n|2|The name of your grade school|\n|3|The last name of your favorite teacher|\n|4|Your favorite sports team|\n|5|Your favorite TV show|\n|6|Your favorite movie|\n|7|The name of the street on which you grew up|\n|8|The name of your first employer|\n|9|Your first car|\n|10|Your favorite food|\n|11|The name of your first pet|\n|12|Favorite musician/band|\n|13|What instrument you play|\n|14|Your father's middle name|\n|15|Your mother's maiden name|\n|16|Name of your eldest child|\n|17|Your spouse's middle name|\n|18|Favorite restaurant|\n|19|Childhood nickname|\n|20|Favorite vacation destination|\n|21|Your boat's name|\n|22|Date of Birth (YYYY-MM-DD)|\n|22|Secret Code|\n|22|Your reference code|",
      "example": 7,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Secretquestion_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objSecretquestion",
        "value-path": "pkiSecretquestionID",
        "value-title": "sSecretquestionTextX"
      }
    },
    "Field-pkiSignatureID": {
      "description": "The unique ID of the Signature",
      "example": 12,
      "maximum": 16777215,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiSystemconfigurationtypeID": {
      "description": "The unique ID of the Systemconfigurationtype",
      "example": 28,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiTaxassignmentID": {
      "description": "The unique ID of the Taxassignment.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No tax|\n|2|GST|\n|3|HST (ON)|\n|4|HST (NB)|\n|5|HST (NS)|\n|6|HST (NL)|\n|7|HST (PE)|\n|8|GST + QST (QC)|\n|9|GST + QST (QC) Non-Recoverable|\n|10|GST + PST (BC)|\n|11|GST + PST (SK)|\n|12|GST + RST (MB)|\n|13|GST + PST (BC) Non-Recoverable|\n|14|GST + PST (SK) Non-Recoverable|\n|15|GST + RST (MB) Non-Recoverable|",
      "example": 1,
      "maximum": 15,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Taxassignment_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objTaxassignment",
        "value-path": "pkiTaxassignmentID",
        "value-title": "sTaxassignmentDescriptionX"
      }
    },
    "Field-pkiTimezoneID": {
      "description": "The unique ID of the Timezone",
      "example": 247,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiUserID": {
      "description": "The unique ID of the User",
      "example": 70,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "AgentBrokerEzsignuserNormal"
        },
        "operationId": "User_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objUser",
        "value-path": "pkiUserID",
        "value-title": "sUserName"
      }
    },
    "Field-pkiUserlogintypeID": {
      "description": "The unique ID of the Userlogintype\n\nValid values:\n\n|Value|Description|Detail|\n|-|-|-|\n|1|**Email Only**|The Ezsignsigner will receive a secure link by email|\n|2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**|\n|3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer|\n|4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type|\n|5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|",
      "example": 2,
      "minimum": 0,
      "type": "integer",
      "x-ms-dynamic-values": {
        "parameters": {
          "sSelector": "All"
        },
        "operationId": "Userlogintype_GetAutocomplete_V2",
        "value-collection": "mPayload/a_objUserlogintype",
        "value-path": "pkiUserlogintypeID",
        "value-title": "sUserlogintypeDescriptionX"
      }
    },
    "Field-pksCustomerCode": {
      "description": "The customer code assigned to your account",
      "example": "demo",
      "maxLength": 6,
      "minLength": 2,
      "type": "string"
    },
    "Field-sApikeyDescriptionX": {
      "description": "The description of the Apikey in the language of the requester",
      "example": "Project X",
      "type": "string"
    },
    "Field-sCompanyNameX": {
      "description": "The Name of the Company in the language of the requester",
      "example": "Acme inc.",
      "type": "string"
    },
    "Field-sContactFirstname": {
      "description": "The First name of the contact",
      "example": "John",
      "type": "string"
    },
    "Field-sContactLastname": {
      "description": "The Last name of the contact",
      "example": "Doe",
      "type": "string"
    },
    "Field-sDepartmentNameX": {
      "description": "The Name of the Department in the language of the requester",
      "example": "Head Office",
      "type": "string"
    },
    "Field-sEmailAddress": {
      "description": "The email address.",
      "example": "email@example.com",
      "type": "string"
    },
    "Field-sErrorMessage": {
      "description": "The message giving details about the error",
      "example": "Invalid Signature Headers",
      "pattern": "^.{0,500}$",
      "type": "string"
    },
    "Field-sEzsigndocumentName": {
      "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
      "example": "Contract #123",
      "type": "string"
    },
    "Field-sEzsignfolderDescription": {
      "description": "The description of the Ezsignfolder",
      "example": "Test eZsign Folder",
      "type": "string"
    },
    "Field-sEzsignfoldertypeNameX": {
      "description": "The name of the Ezsignfoldertype in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Field-sEzsignformfieldLabel": {
      "description": "The Label for the Ezsignformfield",
      "example": "Peanuts",
      "type": "string"
    },
    "Field-sEzsigntemplateDescription": {
      "description": "The description of the Ezsigntemplate",
      "example": "Standard Contract",
      "type": "string"
    },
    "Field-sEzsigntemplatepackageDescription": {
      "description": "The description of the Ezsigntemplatepackage",
      "example": "Package for new clients",
      "type": "string"
    },
    "Field-sEzsigntemplatesigner": {
      "description": "The First name of the user",
      "example": "John",
      "type": "string"
    },
    "Field-sEzsigntsarequirementDescriptionX": {
      "description": "The description of the Ezsigntsarequirement in the language of the requester",
      "example": "No",
      "type": "string"
    },
    "Field-sLanguageNameX": {
      "description": "The Name of the Language in the language of the requester",
      "example": "English",
      "type": "string"
    },
    "Field-sPhoneE164": {
      "description": "A phone number in E.164 Format",
      "example": "+15149901516",
      "pattern": "^\\+[1-9]\\d{1,14}$",
      "type": "string"
    },
    "Field-sPhoneExtension": {
      "description": "The extension of the phone number.\n\nThe extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.\n\nIt can also be used with international phone numbers",
      "example": "123",
      "type": "string"
    },
    "Field-sSecretquestionTextX": {
      "description": "The text of the Secretquestion in the language of the requester",
      "example": "The name of the hospital in which you were born",
      "type": "string"
    },
    "Field-sTaxassignmentDescriptionX": {
      "description": "The description of the Taxassignment  in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Field-sUserFirstname": {
      "description": "The first name of the user",
      "example": "John",
      "type": "string"
    },
    "Field-sUserLastname": {
      "description": "The last name of the user",
      "example": "Doe",
      "type": "string"
    },
    "Field-sUserlogintypeDescriptionX": {
      "description": "The description of the Userlogintype in the language of the requester",
      "example": "Email and phone or SMS",
      "type": "string"
    },
    "Field-tEzsignfolderMessage": {
      "description": "A custom text message that will be added to the email sent.",
      "example": "Hi everyone,\n\nThis is the document I need you to review.\n\nCould you sign it before Monday please.\n\nBest Regards.\n\nMary",
      "type": "string"
    },
    "Field-tEzsignfolderNote": {
      "description": "Note about the Ezsignfolder",
      "example": "This is a note",
      "type": "string"
    },
    "Field-tEzsignfoldersignerassociationMessage": {
      "description": "A custom text message that will be added to the email sent.",
      "example": "Hi John,\n\nThis is the document I need you to review.\n\nCould you sign it before Monday please.\n\nBest Regards.\n\nMary",
      "type": "string"
    },
    "Header-Accept-Language": {
      "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
      "enum": [
        "*",
        "en",
        "fr"
      ],
      "example": "en",
      "type": "string"
    },
    "activesession-ResponseCompound-Apikey": {
      "description": "An Activesession->Apikey object and children to create a complete structure",
      "properties": {
        "pkiApikeyID": {
          "$ref": "#/definitions/Field-pkiApikeyID"
        },
        "sApikeyDescriptionX": {
          "$ref": "#/definitions/Field-sApikeyDescriptionX"
        }
      },
      "required": [
        "pkiApikeyID",
        "sApikeyDescriptionX"
      ],
      "type": "object"
    },
    "activesession-ResponseCompound-User": {
      "description": "An Activesession->User Object and children to create a complete structure",
      "properties": {
        "bUserInterfacedark": {
          "$ref": "#/definitions/Field-bUserInterfacedark"
        },
        "eUserEzsignsendreminderfrequency": {
          "$ref": "#/definitions/Field-eUserEzsignsendreminderfrequency"
        },
        "fkiTimezoneID": {
          "$ref": "#/definitions/Field-pkiTimezoneID"
        },
        "iUserInterfacecolor": {
          "$ref": "#/definitions/Field-iUserInterfacecolor"
        },
        "iUserListresult": {
          "$ref": "#/definitions/Field-iUserListresult"
        },
        "pkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "sAvatarUrl": {
          "$ref": "#/definitions/Computed-sAvatarUrl"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        },
        "sUserFirstname": {
          "$ref": "#/definitions/Field-sUserFirstname"
        },
        "sUserLastname": {
          "$ref": "#/definitions/Field-sUserLastname"
        }
      },
      "required": [
        "pkiUserID",
        "fkiTimezoneID",
        "sUserFirstname",
        "sUserLastname",
        "sEmailAddress",
        "sAvatarUrl",
        "eUserEzsignsendreminderfrequency",
        "iUserInterfacecolor",
        "bUserInterfacedark",
        "iUserListresult"
      ],
      "type": "object"
    },
    "activesession-getCurrent-v1-Response": {
      "description": "Response for GET /1/object/activesession/getCurrent",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/activesession-getCurrent-v1-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "activesession-getCurrent-v1-Response-mPayload": {
      "description": "Payload for GET /1/object/activesession/getCurrent",
      "properties": {
        "a_eModuleInternalname": {
          "description": "An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.",
          "items": {
            "$ref": "#/definitions/Field-eModuleInternalname"
          },
          "type": "array"
        },
        "a_pkiPermissionID": {
          "description": "An array of permissions granted to the user or api key",
          "items": {
            "$ref": "#/definitions/Field-pkiModulesectionID"
          },
          "type": "array"
        },
        "bActivesessionDebug": {
          "$ref": "#/definitions/Field-bActivesessionDebug"
        },
        "bActivesessionIssuperadmin": {
          "$ref": "#/definitions/Field-bActivesessionIssuperadmin"
        },
        "eActivesessionOrigin": {
          "$ref": "#/definitions/Field-eActivesessionOrigin"
        },
        "eActivesessionUsertype": {
          "$ref": "#/definitions/Field-eActivesessionUsertype"
        },
        "eActivesessionWeekdaystart": {
          "$ref": "#/definitions/Field-eActivesessionWeekdaystart"
        },
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "fkiSignatureID": {
          "$ref": "#/definitions/Field-pkiSignatureID"
        },
        "fkiSystemconfigurationtypeID": {
          "$ref": "#/definitions/Field-pkiSystemconfigurationtypeID"
        },
        "objApikey": {
          "$ref": "#/definitions/activesession-ResponseCompound-Apikey"
        },
        "objUserCloned": {
          "$ref": "#/definitions/activesession-ResponseCompound-User"
        },
        "objUserReal": {
          "$ref": "#/definitions/activesession-ResponseCompound-User"
        },
        "pksCustomerCode": {
          "$ref": "#/definitions/Field-pksCustomerCode"
        },
        "sCompanyNameX": {
          "$ref": "#/definitions/Field-sCompanyNameX"
        },
        "sDepartmentNameX": {
          "$ref": "#/definitions/Field-sDepartmentNameX"
        }
      },
      "required": [
        "eActivesessionUsertype",
        "eActivesessionOrigin",
        "eActivesessionWeekdaystart",
        "bActivesessionDebug",
        "bActivesessionIssuperadmin",
        "fkiLanguageID",
        "sCompanyNameX",
        "pksCustomerCode",
        "sDepartmentNameX",
        "fkiSystemconfigurationtypeID",
        "a_eModuleInternalname",
        "objUserReal",
        "a_pkiPermissionID"
      ],
      "type": "object"
    },
    "ezsigndocument-RequestCompound": {
      "description": "An Ezsigndocument Object and children to create a complete structure",
      "properties": {
        "bEzsigndocumentForcerepair": {
          "default": true,
          "description": "Try to repair the document or flatten it if it cannot be used for electronic signature. ",
          "type": "boolean",
          "x-ms-visibility": "advanced"
        },
        "dtEzsigndocumentDuedate": {
          "$ref": "#/definitions/Field-dtEzsigndocumentDuedate"
        },
        "eEzsigndocumentForm": {
          "description": "If the document contains an existing PDF form this property must be set.\r\n**Keep** leaves the form as-is in the document.\r\n**Convert** removes the form and convert all the existing fields to Ezsignformfieldgroups and assign them to the specified **fkiEzsignfoldersignerassociationID**",
          "enum": [
            "Keep",
            "Convert"
          ],
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "eEzsigndocumentFormat": {
          "description": "Indicates the format of the document.",
          "enum": [
            "Pdf",
            "Doc",
            "Docx",
            "Xls",
            "Xlsx",
            "Ppt",
            "Pptx"
          ],
          "type": "string"
        },
        "eEzsigndocumentSource": {
          "description": "Indicates where to look for the document binary content.",
          "enum": [
            "Base64",
            "Ezsigntemplate",
            "Url"
          ],
          "type": "string"
        },
        "fkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "fkiEzsignfoldersignerassociationID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
        },
        "fkiEzsigntemplateID": {
          "$ref": "#/definitions/Field-pkiEzsigntemplateID"
        },
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "pkiEzsigndocumentID": {
          "$ref": "#/definitions/Field-pkiEzsigndocumentID"
        },
        "sEzsigndocumentBase64": {
          "description": "The Base64 encoded binary content of the document.\n\nThis field is Required when eEzsigndocumentSource = Base64.",
          "format": "byte",
          "type": "string"
        },
        "sEzsigndocumentExternalid": {
          "$ref": "#/definitions/Common-Format-ExternalID"
        },
        "sEzsigndocumentName": {
          "$ref": "#/definitions/Field-sEzsigndocumentName"
        },
        "sEzsigndocumentPassword": {
          "description": "If the source document is password protected, the password to open/modify it.",
          "example": "SecretPassword123",
          "type": "string",
          "x-ms-visibility": "advanced"
        },
        "sEzsigndocumentUrl": {
          "description": "The url where the document content resides.\n\nThis field is Required when eEzsigndocumentSource = Url.",
          "example": "http://www.example.com/document.pdf",
          "type": "string"
        }
      },
      "required": [
        "fkiEzsignfolderID",
        "fkiLanguageID",
        "sEzsigndocumentName",
        "eEzsigndocumentSource",
        "dtEzsigndocumentDuedate"
      ],
      "type": "object"
    },
    "ezsigndocument-applyEzsigntemplate-v2-Request": {
      "description": "Request for POST /2/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate",
      "properties": {
        "a_pkiEzsignfoldersignerassociationID": {
          "items": {
            "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
          },
          "minItems": 1,
          "type": "array"
        },
        "a_sEzsigntemplatesigner": {
          "items": {
            "$ref": "#/definitions/Field-sEzsigntemplatesigner"
          },
          "minItems": 1,
          "type": "array"
        },
        "fkiEzsigntemplateID": {
          "$ref": "#/definitions/Field-pkiEzsigntemplateID"
        }
      },
      "required": [
        "a_sEzsigntemplatesigner",
        "a_pkiEzsignfoldersignerassociationID",
        "fkiEzsigntemplateID"
      ],
      "type": "object"
    },
    "ezsigndocument-applyEzsigntemplate-v2-Response": {
      "description": "Response for POST /2/object/ezsigndocument/{pkiEzsigndocument}/applyEzsigntemplate",
      "properties": {
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigndocument-createObject-v2-Request": {
      "description": "Request for POST /2/object/ezsigndocument",
      "properties": {
        "a_objEzsigndocument": {
          "items": {
            "$ref": "#/definitions/ezsigndocument-RequestCompound"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_objEzsigndocument"
      ],
      "type": "object"
    },
    "ezsigndocument-createObject-v2-Response": {
      "description": "Response for POST /2/object/ezsigndocument",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsigndocument-createObject-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigndocument-createObject-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsigndocument",
      "properties": {
        "a_pkiEzsigndocumentID": {
          "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
          "items": {
            "$ref": "#/definitions/Field-pkiEzsigndocumentID"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_pkiEzsigndocumentID"
      ],
      "type": "object"
    },
    "ezsigndocument-getDownloadUrl-v1-Response": {
      "description": "Response for GET /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsigndocument-getDownloadUrl-v1-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigndocument-getDownloadUrl-v1-Response-mPayload": {
      "description": "Payload for GET /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl",
      "example": {
        "sDownloadUrl": "http://www.example.com/document.pdf"
      },
      "properties": {
        "sDownloadUrl": {
          "description": "The Url to the requested document.\n\nUrl will expire after 5 minutes.",
          "example": "http://www.example.com/document.pdf",
          "type": "string"
        }
      },
      "required": [
        "sDownloadUrl"
      ],
      "type": "object"
    },
    "ezsignfolder-RequestCompound": {
      "description": "An Ezsignfolder Object and children to create a complete structure",
      "properties": {
        "eEzsignfolderSendreminderfrequency": {
          "$ref": "#/definitions/Field-eEzsignfolderSendreminderfrequency"
        },
        "fkiEzsignfoldertypeID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
        },
        "fkiEzsigntsarequirementID": {
          "$ref": "#/definitions/Field-pkiEzsigntsarequirementID"
        },
        "pkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "sEzsignfolderDescription": {
          "$ref": "#/definitions/Field-sEzsignfolderDescription"
        },
        "sEzsignfolderExternalid": {
          "$ref": "#/definitions/Common-Format-ExternalID"
        },
        "tEzsignfolderNote": {
          "$ref": "#/definitions/Field-tEzsignfolderNote"
        }
      },
      "required": [
        "fkiEzsignfoldertypeID",
        "sEzsignfolderDescription",
        "eEzsignfolderSendreminderfrequency"
      ],
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Request": {
      "description": "Request for POST /2/object/ezsignfolder",
      "properties": {
        "a_objEzsignfolder": {
          "items": {
            "$ref": "#/definitions/ezsignfolder-RequestCompound"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_objEzsignfolder"
      ],
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Response": {
      "description": "Response for POST /2/object/ezsignfolder",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsignfolder-createObject-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsignfolder",
      "properties": {
        "a_pkiEzsignfolderID": {
          "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
          "items": {
            "$ref": "#/definitions/Field-pkiEzsignfolderID"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_pkiEzsignfolderID"
      ],
      "type": "object"
    },
    "ezsignfolder-dispose-v1-Request": {
      "description": "Request for POST /1/object/ezsignfolder/{pkiEzsignfolderID}/dispose\n\nIntentionally empty for future-proofing",
      "type": "object"
    },
    "ezsignfolder-dispose-v1-Response": {
      "description": "Response for POST /1/object/ezsignfolder/{pkiEzsignfolderID}/dispose",
      "properties": {
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsignfolder-send-v3-Request": {
      "description": "Request for POST /3/object/ezsignfolder/{pkiEzsignfolderID}/send",
      "properties": {
        "a_fkiEzsignfoldersignerassociationID": {
          "items": {
            "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
          },
          "type": "array"
        },
        "dtEzsignfolderDelayedsenddate": {
          "$ref": "#/definitions/Field-dtEzsignfolderDelayedsenddate"
        },
        "tEzsignfolderMessage": {
          "$ref": "#/definitions/Field-tEzsignfolderMessage"
        }
      },
      "required": [
        "a_fkiEzsignfoldersignerassociationID"
      ],
      "type": "object"
    },
    "ezsignfolder-send-v3-Response": {
      "description": "Response for POST /3/object/ezsignfolder/{pkiEzsignfolderID}/send",
      "properties": {
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-RequestCompound": {
      "description": "An Ezsignfoldersignerassociation Object and children to create a complete structure",
      "properties": {
        "bEzsignfoldersignerassociationReceivecopy": {
          "$ref": "#/definitions/Field-bEzsignfoldersignerassociationReceivecopy"
        },
        "fkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "fkiEzsignsignergroupID": {
          "$ref": "#/definitions/Field-pkiEzsignsignergroupID"
        },
        "fkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "objEzsignsigner": {
          "$ref": "#/definitions/ezsignsigner-RequestCompound"
        },
        "pkiEzsignfoldersignerassociationID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
        },
        "tEzsignfoldersignerassociationMessage": {
          "$ref": "#/definitions/Field-tEzsignfoldersignerassociationMessage"
        }
      },
      "required": [
        "fkiEzsignfolderID"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-createObject-v2-Request": {
      "description": "Request for POST /2/object/ezsignfoldersignerassociation",
      "properties": {
        "a_objEzsignfoldersignerassociation": {
          "items": {
            "$ref": "#/definitions/ezsignfoldersignerassociation-RequestCompound"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_objEzsignfoldersignerassociation"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-createObject-v2-Response": {
      "description": "Response for POST /2/object/ezsignfoldersignerassociation",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsignfoldersignerassociation-createObject-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-createObject-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsignfoldersignerassociation",
      "properties": {
        "a_pkiEzsignfoldersignerassociationID": {
          "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
          "items": {
            "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_pkiEzsignfoldersignerassociationID"
      ],
      "type": "object"
    },
    "ezsignfoldertype-AutocompleteElement-Response": {
      "description": "A Ezsignfoldertype AutocompleteElement Response",
      "properties": {
        "bEzsignfoldertypeIsactive": {
          "$ref": "#/definitions/Field-bEzsignfoldertypeIsactive"
        },
        "eEzsignfoldertypePrivacylevel": {
          "$ref": "#/definitions/Field-eEzsignfoldertypePrivacylevel"
        },
        "pkiEzsignfoldertypeID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
        },
        "sEzsignfoldertypeNameX": {
          "$ref": "#/definitions/Field-sEzsignfoldertypeNameX"
        }
      },
      "required": [
        "eEzsignfoldertypePrivacylevel",
        "sEzsignfoldertypeNameX",
        "pkiEzsignfoldertypeID",
        "bEzsignfoldertypeIsactive"
      ],
      "type": "object"
    },
    "ezsignfoldertype-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/ezsignfoldertype/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsignfoldertype-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsignfoldertype-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsignfoldertype/getAutocomplete",
      "properties": {
        "a_objEzsignfoldertype": {
          "description": "An array of Ezsignfoldertype autocomplete element response.",
          "items": {
            "$ref": "#/definitions/ezsignfoldertype-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objEzsignfoldertype"
      ],
      "type": "object"
    },
    "ezsignsigner-RequestCompound": {
      "description": "An Ezsignsigner Object and children to create a complete structure",
      "properties": {
        "eEzsignsignerLogintype": {
          "description": "The method the Ezsignsigner will authenticate to the signing platform.\n\n1. **Password** means the Ezsignsigner will receive a secure link by email.\n2. **PasswordPhone** means the Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**.\n3. **PasswordQuestion** means the Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer.\n4. **InPersonPhone** means the Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**.\n5. **InPerson** means the Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type.",
          "enum": [
            "Password",
            "PasswordPhone",
            "PasswordQuestion",
            "InPersonPhone",
            "InPerson"
          ],
          "type": "string",
          "x-deprecated": true
        },
        "fkiSecretquestionID": {
          "$ref": "#/definitions/Field-pkiSecretquestionID"
        },
        "fkiTaxassignmentID": {
          "$ref": "#/definitions/Field-pkiTaxassignmentID",
          "x-ms-visibility": "advanced"
        },
        "fkiUserlogintypeID": {
          "$ref": "#/definitions/Field-pkiUserlogintypeID"
        },
        "objContact": {
          "$ref": "#/definitions/ezsignsigner-RequestCompound-Contact"
        },
        "sEzsignsignerSecretanswer": {
          "description": "The predefined answer to the secret question the Ezsignsigner will need to provide to successfully authenticate.",
          "type": "string"
        }
      },
      "required": [
        "fkiTaxassignmentID",
        "objContact"
      ],
      "type": "object"
    },
    "ezsignsigner-RequestCompound-Contact": {
      "description": "A Ezsignsigner->Contact Object and children to create a complete structure",
      "properties": {
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "sContactFirstname": {
          "$ref": "#/definitions/Field-sContactFirstname"
        },
        "sContactLastname": {
          "$ref": "#/definitions/Field-sContactLastname"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        },
        "sPhoneE164": {
          "$ref": "#/definitions/Field-sPhoneE164"
        },
        "sPhoneE164Cell": {
          "$ref": "#/definitions/Field-sPhoneE164"
        },
        "sPhoneExtension": {
          "$ref": "#/definitions/Field-sPhoneExtension"
        },
        "sPhoneNumber": {
          "type": "string",
          "x-deprecated": true
        },
        "sPhoneNumberCell": {
          "type": "string",
          "x-deprecated": true
        }
      },
      "required": [
        "sContactFirstname",
        "sContactLastname",
        "fkiLanguageID"
      ],
      "type": "object"
    },
    "ezsigntemplate-AutocompleteElement-Response": {
      "description": "A Ezsigntemplate AutocompleteElement Response",
      "properties": {
        "bEzsigntemplateIsactive": {
          "$ref": "#/definitions/Field-bEzsigntemplateIsactive"
        },
        "eEzsignfoldertypePrivacylevel": {
          "$ref": "#/definitions/Field-eEzsignfoldertypePrivacylevel"
        },
        "pkiEzsigntemplateID": {
          "$ref": "#/definitions/Field-pkiEzsigntemplateID"
        },
        "sEzsigntemplateDescription": {
          "$ref": "#/definitions/Field-sEzsigntemplateDescription"
        }
      },
      "required": [
        "eEzsignfoldertypePrivacylevel",
        "sEzsigntemplateDescription",
        "pkiEzsigntemplateID",
        "bEzsigntemplateIsactive"
      ],
      "type": "object"
    },
    "ezsigntemplate-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/ezsigntemplate/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsigntemplate-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigntemplate-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsigntemplate/getAutocomplete",
      "properties": {
        "a_objEzsigntemplate": {
          "description": "An array of Ezsigntemplate autocomplete element response.",
          "items": {
            "$ref": "#/definitions/ezsigntemplate-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objEzsigntemplate"
      ],
      "type": "object"
    },
    "ezsigntemplatepackage-AutocompleteElement-Response": {
      "description": "A Ezsigntemplatepackage AutocompleteElement Response",
      "properties": {
        "bDisabled": {
          "description": "Indicates if the element is disabled in the context",
          "type": "boolean"
        },
        "bEzsigntemplatepackageIsactive": {
          "$ref": "#/definitions/Field-bEzsigntemplatepackageIsactive"
        },
        "eEzsignfoldertypePrivacylevel": {
          "$ref": "#/definitions/Field-eEzsignfoldertypePrivacylevel"
        },
        "pkiEzsigntemplatepackageID": {
          "$ref": "#/definitions/Field-pkiEzsigntemplatepackageID"
        },
        "sEzsigntemplatepackageDescription": {
          "$ref": "#/definitions/Field-sEzsigntemplatepackageDescription"
        }
      },
      "required": [
        "eEzsignfoldertypePrivacylevel",
        "sEzsigntemplatepackageDescription",
        "pkiEzsigntemplatepackageID",
        "bEzsigntemplatepackageIsactive",
        "bDisabled"
      ],
      "type": "object"
    },
    "ezsigntemplatepackage-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/ezsigntemplatepackage/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsigntemplatepackage-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigntemplatepackage-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsigntemplatepackage/getAutocomplete",
      "properties": {
        "a_objEzsigntemplatepackage": {
          "description": "An array of Ezsigntemplatepackage autocomplete element response.",
          "items": {
            "$ref": "#/definitions/ezsigntemplatepackage-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objEzsigntemplatepackage"
      ],
      "type": "object"
    },
    "ezsigntsarequirement-AutocompleteElement-Response": {
      "description": "A Ezsigntsarequirement AutocompleteElement Response",
      "properties": {
        "bDisabled": {
          "description": "Indicates if the element is disabled in the context",
          "type": "boolean"
        },
        "bEzsigntsarequirementIsactive": {
          "$ref": "#/definitions/Field-bEzsigntsarequirementIsactive"
        },
        "pkiEzsigntsarequirementID": {
          "$ref": "#/definitions/Field-pkiEzsigntsarequirementID"
        },
        "sEzsigntsarequirementDescriptionX": {
          "$ref": "#/definitions/Field-sEzsigntsarequirementDescriptionX"
        }
      },
      "required": [
        "sEzsigntsarequirementDescriptionX",
        "pkiEzsigntsarequirementID",
        "bEzsigntsarequirementIsactive",
        "bDisabled"
      ],
      "type": "object"
    },
    "ezsigntsarequirement-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/ezsigntsarequirement/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/ezsigntsarequirement-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "ezsigntsarequirement-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsigntsarequirement/getAutocomplete",
      "properties": {
        "a_objEzsigntsarequirement": {
          "description": "An array of Ezsigntsarequirement autocomplete element response.",
          "items": {
            "$ref": "#/definitions/ezsigntsarequirement-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objEzsigntsarequirement"
      ],
      "type": "object"
    },
    "language-AutocompleteElement-Response": {
      "description": "A Language AutocompleteElement Response",
      "properties": {
        "bLanguageIsactive": {
          "$ref": "#/definitions/Field-bLanguageIsactive"
        },
        "pkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "sLanguageNameX": {
          "$ref": "#/definitions/Field-sLanguageNameX"
        }
      },
      "required": [
        "pkiLanguageID",
        "sLanguageNameX",
        "bLanguageIsactive"
      ],
      "type": "object"
    },
    "language-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/language/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/language-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "language-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/language/getAutocomplete",
      "properties": {
        "a_objLanguage": {
          "description": "An array of Language autocomplete element response.",
          "items": {
            "$ref": "#/definitions/language-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objLanguage"
      ],
      "type": "object"
    },
    "secretquestion-AutocompleteElement-Response": {
      "description": "A Secretquestion AutocompleteElement Response",
      "properties": {
        "bSecretquestionIsactive": {
          "$ref": "#/definitions/Field-bSecretquestionIsactive"
        },
        "pkiSecretquestionID": {
          "$ref": "#/definitions/Field-pkiSecretquestionID"
        },
        "sSecretquestionTextX": {
          "$ref": "#/definitions/Field-sSecretquestionTextX"
        }
      },
      "required": [
        "sSecretquestionTextX",
        "pkiSecretquestionID",
        "bSecretquestionIsactive"
      ],
      "type": "object"
    },
    "secretquestion-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/secretquestion/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/secretquestion-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "secretquestion-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/secretquestion/getAutocomplete",
      "properties": {
        "a_objSecretquestion": {
          "description": "An array of Secretquestion autocomplete element response.",
          "items": {
            "$ref": "#/definitions/secretquestion-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objSecretquestion"
      ],
      "type": "object"
    },
    "taxassignment-AutocompleteElement-Response": {
      "description": "A Taxassignment AutocompleteElement Response",
      "properties": {
        "bTaxassignmentIsactive": {
          "$ref": "#/definitions/Field-bTaxassignmentIsactive"
        },
        "pkiTaxassignmentID": {
          "$ref": "#/definitions/Field-pkiTaxassignmentID"
        },
        "sTaxassignmentDescriptionX": {
          "$ref": "#/definitions/Field-sTaxassignmentDescriptionX"
        }
      },
      "required": [
        "sTaxassignmentDescriptionX",
        "pkiTaxassignmentID",
        "bTaxassignmentIsactive"
      ],
      "type": "object"
    },
    "taxassignment-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/taxassignment/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/taxassignment-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "taxassignment-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/taxassignment/getAutocomplete",
      "properties": {
        "a_objTaxassignment": {
          "description": "An array of Taxassignment autocomplete element response.",
          "items": {
            "$ref": "#/definitions/taxassignment-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objTaxassignment"
      ],
      "type": "object"
    },
    "user-AutocompleteElement-Response": {
      "description": "A User AutocompleteElement Response",
      "properties": {
        "bUserIsactive": {
          "$ref": "#/definitions/Field-bUserIsactive"
        },
        "eUserType": {
          "$ref": "#/definitions/Field-eUserType"
        },
        "pkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "sUserName": {
          "$ref": "#/definitions/Computed-sUserName"
        }
      },
      "required": [
        "eUserType",
        "sUserName",
        "pkiUserID",
        "bUserIsactive"
      ],
      "type": "object"
    },
    "user-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/user/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/user-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "user-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/user/getAutocomplete",
      "properties": {
        "a_objUser": {
          "description": "An array of User autocomplete element response.",
          "items": {
            "$ref": "#/definitions/user-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objUser"
      ],
      "type": "object"
    },
    "userlogintype-AutocompleteElement-Response": {
      "description": "A Userlogintype AutocompleteElement Response",
      "properties": {
        "bUserlogintypeIsactive": {
          "$ref": "#/definitions/Field-bUserlogintypeIsactive"
        },
        "pkiUserlogintypeID": {
          "$ref": "#/definitions/Field-pkiUserlogintypeID"
        },
        "sUserlogintypeDescriptionX": {
          "$ref": "#/definitions/Field-sUserlogintypeDescriptionX"
        }
      },
      "required": [
        "pkiUserlogintypeID",
        "sUserlogintypeDescriptionX",
        "bUserlogintypeIsactive"
      ],
      "type": "object"
    },
    "userlogintype-getAutocomplete-v2-Response": {
      "description": "Response for GET /2/object/userlogintype/getAutocomplete",
      "properties": {
        "mPayload": {
          "$ref": "#/definitions/userlogintype-getAutocomplete-v2-Response-mPayload"
        },
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "mPayload",
        "objDebugPayload"
      ],
      "type": "object"
    },
    "userlogintype-getAutocomplete-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/userlogintype/getAutocomplete",
      "properties": {
        "a_objUserlogintype": {
          "description": "An array of Userlogintype autocomplete element response.",
          "items": {
            "$ref": "#/definitions/userlogintype-AutocompleteElement-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objUserlogintype"
      ],
      "type": "object"
    }
  },
  "securityDefinitions": {
    "API Key": {
      "description": "This is the normal Authorization scheme where the apiKey is sent in the Authorization http header",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "API Key": []
    }
  ],
  "x-components": {
    "parameters": {
      "AcceptLanguage": {
        "description": "The language of the returned content.\n\n1. **\\*** (or header not defined) Default language\n2. **en** English\n2. **fr** French\n\n",
        "enum": [
          "*",
          "en",
          "fr"
        ],
        "in": "header",
        "name": "Accept-Language",
        "required": false,
        "type": "string"
      },
      "sQuery": {
        "description": "Allow to filter the returned results",
        "in": "query",
        "name": "sQuery",
        "required": false,
        "type": "string"
      }
    },
    "responses": {
      "Response-Error-404": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body"
      },
      "Response-Error-422": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Common-Response-Error"
            }
          }
        },
        "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body"
      },
      "Response-Error-422-sTemporaryFileUrl": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Common-Response-Error-sTemporaryFileUrl"
            }
          }
        },
        "description": "The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body. If the error is recoverable sTemporaryFileUrl will be set and you can use this url to try a new request without sending the file over again"
      },
      "Response-Redirect-350": {
        "description": "The user must authenticate before he can continue with this request"
      },
      "Response-Redirect-351": {
        "description": "The user is configured with 2FA and needs to validate its phone number before he can continue with this request"
      },
      "Response-Redirect-352": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/definitions/Common-Response-Redirect-sSecretquestionTextX"
            }
          }
        },
        "description": "The user is configured with 2FA and needs to answer a Secretquestion before he can continue with this request"
      },
      "Response-Redirect-353": {
        "description": "The user must accept clauses before he can continue with this request"
      },
      "Response-Redirect-354": {
        "description": "The user's computer must be validated before he can continue with this request"
      },
      "Response-Redirect-355": {
        "description": "The user must change its password before he can continue with this request"
      },
      "Response-Redirect-356": {
        "description": "The user is not running the latest version of the native application. He must valide or update its version before he can continue with this request"
      }
    }
  }
}
