{
    "openapi": "3.0.3",
    "info": {
        "title": "eZmax API Definition",
        "version": "1.0.18",
        "description": "This API expose all the functionnalities for the eZmax and eZsign application.\n\nWe provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.\n\nYou can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.\n\nIf you need helping understanding how to use this API, don't waste too much time looking for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.",
        "termsOfService": "https://www.ezmax.ca/TODO",
        "contact": {
            "name": "API Support department",
            "url": "https://www.ezmax.ca/en/contact",
            "email": "support-api@ezmax.ca"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "x-logo": {
            "url": "https://github.com/eZmaxinc/eZmax-API/raw/master/docs/resources/images/logo.png",
            "backgroundColor": "#fafafa",
            "altText": "eZmax Logo"
        },
        "x-restgeninfo": {

        }
    },
    "servers": [
        {
            "url": "https://{sInfrastructureenvironmenttypeDescription}.api.appcluster01.{sInfrastructureregionCode}.ezmax.com/rest",
            "description": "The server endpoint where to send your API requests.",
            "variables": {
                "sInfrastructureenvironmenttypeDescription": {
                    "enum": [
                        "prod",
                        "stg",
                        "qa",
                        "dev"
                    ],
                    "default": "prod",
                    "description": "The environment on on which to call the API. Should always be \"prod\" unless instructed otherwise by support."
                },
                "sInfrastructureregionCode": {
                    "enum": [
                        "ca-central-1",
                        "local"
                    ],
                    "default": "ca-central-1",
                    "description": "The region where your services are hosted."
                }
            }
        }
    ],
    "paths": {
        "/1/object/activesession/getCurrent": {
            "description": "",
            "get": {
                "tags": [
                    "Activesession"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/activesession-getCurrent-v1-Response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Activesession_GetCurrent_V1",
                "summary": "Get Current Activesession",
                "description": "Retrieve the details about the current activesession"
            }
        },
        "/1/object/ezsigndocument": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_CreateObject_V1",
                "summary": "Create a new Ezsigndocument",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetObject_V1",
                "summary": "Retrieve an existing Ezsigndocument",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsigndocument-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_EditObject_V1",
                "summary": "Modify an existing Ezsigndocument"
            },
            "delete": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_DeleteObject_V1",
                "summary": "Delete an existing Ezsigndocument"
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsigndocument's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_CreateObject_V1",
                "summary": "Create a new Ezsignfolder",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetObject_V1",
                "summary": "Retrieve an existing Ezsignfolder",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignfolder-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_EditObject_V1",
                "summary": "Modify an existing Ezsignfolder"
            },
            "delete": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_DeleteObject_V1",
                "summary": "Delete an existing Ezsignfolder"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignfolder's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_CreateObject_V1",
                "summary": "Create a new Ezsignfoldersignerassociation",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetObject_V1",
                "summary": "Retrieve an existing Ezsignfoldersignerassociation",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignfoldersignerassociation-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_EditObject_V1",
                "summary": "Modify an existing Ezsignfoldersignerassociation"
            },
            "delete": {
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_DeleteObject_V1",
                "summary": "Delete an existing Ezsignfoldersignerassociation"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignfoldersignerassociation's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}/send": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignfolder-send-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-send-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_Send_V1",
                "summary": "Send the Ezsignfolder to the signatories for signature"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignsignature": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignsignature"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_CreateObject_V1",
                "summary": "Create a new Ezsignsignature",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignsignature/{pkiEzsignsignatureID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsignsignature"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_GetObject_V1",
                "summary": "Retrieve an existing Ezsignsignature",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignsignature-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignsignature"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_EditObject_V1",
                "summary": "Modify an existing Ezsignsignature"
            },
            "delete": {
                "tags": [
                    "Ezsignsignature"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_DeleteObject_V1",
                "summary": "Delete an existing Ezsignsignature"
            },
            "parameters": [
                {
                    "name": "pkiEzsignsignatureID",
                    "description": "The unique ID of the Ezsignsignature",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignsignature/{pkiEzsignsignatureID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsignsignature"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignsignature's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignsignatureID",
                    "description": "The unique ID of the Ezsignsignature",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}": {
            "get": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetDownloadUrl_V1",
                "summary": "Retrieve a URL to download documents.",
                "description": "This endpoint returns URLs to different files that can be downloaded during the signing process.\n\nThese links will expire after 5 minutes so the download of the file should be made soon after retrieving the link."
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "eDocumentType",
                    "description": "The type of document to retrieve.\n\n1. **Initial** Is the initial document before any signature were applied.\n2. **Signed** Is the final document once all signatures were applied.\n3. **Proofdocument** Is the evidence report.\n4. **Proof** Is the complete evidence archive including all of the above and more.\n",
                    "schema": {
                        "enum": [
                            "Initial",
                            "Signed",
                            "Proof",
                            "Proofdocument"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getInPersonLoginUrl": {
            "get": {
                "tags": [
                    "Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetInPersonLoginUrl_V1",
                "summary": "Retrieve a Login Url to allow In-Person signing",
                "description": "This endpoint returns a Login Url that can be used in a browser or embedded in an I-Frame to allow in person signing.\n\nThe signer Login type must be configured as In-Person."
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/franchisereferalincome": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Franchisereferalincome"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Franchisereferalincome_CreateObject_V1",
                "summary": "Create a new Franchisereferalincome",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/franchisebroker/getAutocomplete/{sSelector}": {
            "description": "",
            "get": {
                "tags": [
                    "Franchisebroker"
                ],
                "parameters": [
                    {
                        "name": "sQuery",
                        "description": "Allow to filter on the option value",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Franchisebroker_GetAutocomplete_V1",
                "summary": "Retrieve Franchisebrokers and IDs",
                "description": "Get the list of Franchisebrokers to be used in a dropdown or autocomplete control."
            },
            "parameters": [
                {
                    "name": "sSelector",
                    "description": "The type of Franchisebrokers to return",
                    "schema": {
                        "enum": [
                            "Active",
                            "All"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/period/getAutocomplete/{sSelector}": {
            "description": "",
            "get": {
                "tags": [
                    "Period"
                ],
                "parameters": [
                    {
                        "name": "sQuery",
                        "description": "Allow to filter on the option value",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Period_GetAutocomplete_V1",
                "summary": "Retrieve Periods and IDs",
                "description": "Get the list of Periods to be used in a dropdown or autocomplete control."
            },
            "parameters": [
                {
                    "name": "sSelector",
                    "description": "The types of Periods to return",
                    "schema": {
                        "enum": [
                            "ActiveNormal",
                            "ActiveNormalAndEndOfYear",
                            "AllNormal",
                            "AllNormalAndEndOfYear"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "activesession-getCurrent-v1-Response-mPayload": {
                "description": "Payload for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "a_Permissions",
                    "a_RegisteredModules",
                    "eActivesessionSessiontype",
                    "fkiLanguageID",
                    "sCompanyNameX",
                    "sCustomerCode",
                    "sDepartmentNameX"
                ],
                "type": "object",
                "properties": {
                    "sCustomerCode": {
                        "description": "The customer code specific to the client in which the API request is being made",
                        "type": "string"
                    },
                    "eActivesessionSessiontype": {
                        "description": "The type of session used for the API request call",
                        "enum": [
                            "Normal"
                        ],
                        "type": "string"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID"
                    },
                    "sCompanyNameX": {
                        "description": "The name of the active Company in the current language",
                        "type": "string"
                    },
                    "sDepartmentNameX": {
                        "description": "The name of the active Department in the current language",
                        "type": "string"
                    },
                    "a_RegisteredModules": {
                        "description": "An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "a_Permissions": {
                        "description": "An array of permissions granted to the user or api key",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "ezsigndocument-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/editObject API Request",
                "required": [
                    "a_pkiEzsigndocumentID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsigndocumentID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsigndocumentID": [
                        95,
                        96
                    ]
                }
            },
            "ezsigndocument-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsigndocument-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsigndocument-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/getDownloadUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsigndocument-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    },
                    "objEzsigndocumentCompound": {
                        "$ref": "#/components/schemas/ezsigndocument-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/editObject API Request",
                "required": [
                    "a_pkiEzsignfolderID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignfolderID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignfolderID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignfolder-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    }
                }
            },
            "activesession-getCurrent-v1-Response": {
                "description": "Response for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/activesession-getCurrent-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfolder-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/editObject API Request",
                "required": [
                    "a_pkiEzsignfoldersignerassociationID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignfoldersignerassociationID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignfoldersignerassociationID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignfoldersignerassociation-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfoldersignerassociation/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfoldersignerassociation": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request",
                        "description": ""
                    }
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignfoldersignerassociation-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfoldersignerassociation-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfoldersignerassociation-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response-mPayload"
                    }
                }
            },
            "Common-Response": {
                "description": "All API response will inherit this based Response",
                "type": "object",
                "properties": {
                    "objDebugPayload": {
                        "$ref": "#/components/schemas/Common-Response-objDebugPayload"
                    },
                    "objDebug": {
                        "$ref": "#/components/schemas/Common-Response-objDebug"
                    }
                }
            },
            "Common-Response-Error": {
                "description": "Generic Error Message",
                "required": [
                    "sErrorMessage"
                ],
                "type": "object",
                "properties": {
                    "sErrorMessage": {
                        "description": "More detail about the error",
                        "type": "string"
                    }
                }
            },
            "Common-Response-objDebug": {
                "description": "This is a generic debug object that is returned by all API requests",
                "required": [
                    "a_objSQLQuery",
                    "iSQLQueries",
                    "iSQLSelects",
                    "sMemoryUsage",
                    "sRunTime"
                ],
                "type": "object",
                "properties": {
                    "sMemoryUsage": {
                        "description": "The peak memory allocated during the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "sRunTime": {
                        "description": "The total server execution time of the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "iSQLSelects": {
                        "description": "The number of SQL SELECT queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "iSQLQueries": {
                        "description": "The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "a_objSQLQuery": {
                        "description": "An array of the SQL Queries that were executed during the API request execution",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Common-Response-objSQLQuery"
                        }
                    }
                },
                "example": {
                    "sMemoryUsage": "11,923MB",
                    "sRunTime": "0.6084s",
                    "iSQLSelects": 3,
                    "iSQLQueries": 6,
                    "a_objQuery": [
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        },
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        }
                    ]
                }
            },
            "Common-Response-objDebugPayload": {
                "description": "This is a debug object containing debugging information on the actual function",
                "required": [
                    "a_RequiredPermissions",
                    "iVersionMax",
                    "iVersionMin"
                ],
                "type": "object",
                "properties": {
                    "iVersionMin": {
                        "description": "The minimum version of the function that can be called",
                        "type": "integer"
                    },
                    "iVersionMax": {
                        "description": "The maximum version of the function that can be called",
                        "type": "integer"
                    },
                    "a_RequiredPermissions": {
                        "description": "An array of permissions required to access this function.\n\nIf the value \"0\" is present in the array, anyone can call this function.\n\nYou must have one of the permission to access the function. You don't need to have all of them.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "iVersionMin": 1,
                    "iVersionMax": 2,
                    "a_RequiredPermissions": [
                        45,
                        61
                    ]
                }
            },
            "Common-Response-objSQLQuery": {
                "description": "Definition of objSQLQuery Object",
                "required": [
                    "fDuration",
                    "sQuery"
                ],
                "type": "object",
                "properties": {
                    "sQuery": {
                        "description": "The SQL Query",
                        "type": "string"
                    },
                    "fDuration": {
                        "format": "float",
                        "description": "Execution time of the SQL Query in seconds",
                        "type": "number"
                    }
                },
                "example": {
                    "sQuery": "SELECT * FROM table",
                    "fDuration": 1.0E-4
                }
            },
            "ezsignfolder-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    },
                    "objEzsignfolderCompound": {
                        "$ref": "#/components/schemas/ezsignfolder-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-Request": {
                "description": "An Ezsignfolder Object",
                "required": [
                    "fkiEzsignfoldertypeID",
                    "sEzsignfolderDescription",
                    "fkiEzsigntsarequirementID",
                    "tEzsignfolderNote",
                    "eEzsignfolderSendreminderfrequency"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsignfoldertypeID": {
                        "$ref": "#/components/schemas/Field-pkiEzsignfoldertypeID",
                        "description": "",
                        "minimum": 1
                    },
                    "fkiEzsigntsarequirementID": {
                        "$ref": "#/components/schemas/Field-pkiEzsigntsarequirementID",
                        "description": ""
                    },
                    "sEzsignfolderDescription": {
                        "description": "The description of the Ezsign Folder",
                        "maxLength": 75,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tEzsignfolderNote": {
                        "description": "Somes extra notes about the eZsign Folder",
                        "type": "string"
                    },
                    "eEzsignfolderSendreminderfrequency": {
                        "$ref": "#/components/schemas/Field-eEzsignfolderSendreminderfrequency",
                        "description": ""
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfoldersignerassociation/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfoldersignerassociation": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request",
                        "description": ""
                    },
                    "objEzsignfoldersignerassociationCompound": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-RequestCompound",
                        "description": ""
                    }
                }
            },
            "Common-Format-DateTime": {
                "description": "Represent a Date Time.\nThe timezone is the one configured in the User's profile.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "ezsigndocument-Request": {
                "description": "An Ezsigndocument Object",
                "required": [
                    "sEzsigndocumentName",
                    "sEzsigndocumentFilename",
                    "eEzsigndocumentSource",
                    "eEzsigndocumentFormat",
                    "fkiEzsignfolderID",
                    "dtEzsigndocumentDuedate",
                    "fkiLanguageID"
                ],
                "type": "object",
                "properties": {
                    "eEzsigndocumentSource": {
                        "description": "Indicates where to look for the document binary content.",
                        "enum": [
                            "Base64"
                        ],
                        "type": "string"
                    },
                    "eEzsigndocumentFormat": {
                        "description": "Indicates the format of the document.",
                        "enum": [
                            "Pdf"
                        ],
                        "type": "string"
                    },
                    "sEzsigndocumentBase64": {
                        "format": "byte",
                        "description": "The Base64 encoded binary content of the document.\n\nThis field is Required when eEzsigndocumentSource = Base64.",
                        "type": "string"
                    },
                    "fkiEzsignfolderID": {
                        "description": "A reference to a valid Ezsignfolder.\n\nThat value is returned after a successful Ezsignfolder Creation.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "dtEzsigndocumentDuedate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sEzsigndocumentFilename": {
                        "description": "The actual file name that will be used when downloading or attaching to an email.",
                        "type": "string"
                    },
                    "sEzsigndocumentName": {
                        "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
                        "type": "string"
                    }
                },
                "example": {
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiLanguageID": 2,
                    "eEzsigndocumentSource": "Base64",
                    "eEzsigndocumentFormat": "Pdf",
                    "sEzsigndocumentBase64": "JVBERi0xLjENCiXCpcKxw6sNCg0KMSAwIG9iag0KICA8PCAvVHlwZSAvQ2F0YWxvZw0KICAgICAvUGFnZXMgMiAwIFINCiAgPj4NCmVuZG9iag0KDQoyIDAgb2JqDQogIDw8IC9UeXBlIC9QYWdlcw0KICAgICAvS2lkcyBbMyAwIFJdDQogICAgIC9Db3VudCAxDQogICAgIC9NZWRpYUJveCBbMCAwIDMwMCAxNDRdDQogID4+DQplbmRvYmoNCg0KMyAwIG9iag0KICA8PCAgL1R5cGUgL1BhZ2UNCiAgICAgIC9QYXJlbnQgMiAwIFINCiAgICAgIC9SZXNvdXJjZXMNCiAgICAgICA8PCAvRm9udA0KICAgICAgICAgICA8PCAvRjENCiAgICAgICAgICAgICAgIDw8IC9UeXBlIC9Gb250DQogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTENCiAgICAgICAgICAgICAgICAgIC9CYXNlRm9udCAvVGltZXMtUm9tYW4NCiAgICAgICAgICAgICAgID4+DQogICAgICAgICAgID4+DQogICAgICAgPj4NCiAgICAgIC9Db250ZW50cyA0IDAgUg0KICA+Pg0KZW5kb2JqDQoNCjQgMCBvYmoNCiAgPDwgL0xlbmd0aCA1NSA+Pg0Kc3RyZWFtDQogIEJUDQogICAgL0YxIDE4IFRmDQogICAgMCAwIFRkDQogICAgKEhlbGxvIFdvcmxkKSBUag0KICBFVA0KZW5kc3RyZWFtDQplbmRvYmoNCg0KeHJlZg0KMCA1DQowMDAwMDAwMDAwIDY1NTM1IGYgDQowMDAwMDAwMDE4IDAwMDAwIG4gDQowMDAwMDAwMDc3IDAwMDAwIG4gDQowMDAwMDAwMTc4IDAwMDAwIG4gDQowMDAwMDAwNDU3IDAwMDAwIG4gDQp0cmFpbGVyDQogIDw8ICAvUm9vdCAxIDAgUg0KICAgICAgL1NpemUgNQ0KICA+Pg0Kc3RhcnR4cmVmDQo1NjUNCiUlRU9G",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59"
                }
            },
            "ezsignfoldersignerassociation-Request": {
                "description": "An Ezsignfoldersignerassociation Object",
                "required": [
                    "fkiEzsignfolderID"
                ],
                "type": "object",
                "properties": {
                    "fkiUserID": {
                        "description": "A reference to a valid User.\n\nThis is only used if the signatory will be a user from the system.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "fkiEzsignfolderID": {
                        "description": "A reference to a valid Ezsignfolder.\n\nThat value is returned after a successful Ezsignfolder Creation.",
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "example": {
                    "fkiUserID": 48,
                    "fkiEzsignfolderID": 85
                }
            },
            "ezsignsigner-Request": {
                "description": "An Ezsignsigner Object",
                "required": [
                    "eEzsignsignerLogintype",
                    "fkiTaxassignmentID"
                ],
                "type": "object",
                "properties": {
                    "fkiTaxassignmentID": {
                        "$ref": "#/components/schemas/Field-pkiTaxassignmentID",
                        "description": ""
                    },
                    "fkiSecretquestionID": {
                        "$ref": "#/components/schemas/Field-pkiSecretquestionID",
                        "description": ""
                    },
                    "eEzsignsignerLogintype": {
                        "description": "The method the Ezsignsigner will authenticate to the signing platform.\n\n1. **Password** means the Ezsignsigner will receive a secure link by email.\n2. **PasswordPhone** means the Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**.\n3. **PasswordQuestion** means the Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer.\n4. **InPersonPhone** means the Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**.\n5. **InPerson** means the Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type.",
                        "enum": [
                            "Password",
                            "PasswordPhone",
                            "PasswordQuestion",
                            "InPersonPhone",
                            "InPerson"
                        ],
                        "type": "string"
                    },
                    "sEzsignsignerSecretanswer": {
                        "description": "The predefined answer to the secret question the Ezsignsigner will need to provide to successfully authenticate.",
                        "type": "string"
                    }
                },
                "example": {
                    "fkiTaxassignmentID": 1,
                    "fkiSecretquestionID": 5,
                    "eEzsignsignerLogintype": "PasswordQuestion",
                    "sEzsignsignerSecretanswer": "This Is My Secret Answer"
                }
            },
            "ezsignfolder-RequestCompound": {
                "description": "An Ezsignfolder Object and children to create a complete structure",
                "required": [
                    "a_Ezsignfoldersignerassociation"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Request"
                    }
                ],
                "properties": {
                    "a_Ezsignfoldersignerassociation": {
                        "description": "An array of signers that will be invited to sign the Ezsigndocuments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request"
                        }
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsignsigner-RequestCompound-Contact": {
                "description": "A Ezsignsigner->Contact Object and children to create a complete structure",
                "required": [
                    "sContactFirstname",
                    "sContactLastname",
                    "fkiLanguageID"
                ],
                "type": "object",
                "properties": {
                    "sContactFirstname": {
                        "description": "The first name of the Contact",
                        "type": "string"
                    },
                    "sContactLastname": {
                        "description": "The last name of the Contact",
                        "type": "string"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "description": "The email address of the contact. Must be filled if email authentification was requested",
                        "type": "string"
                    },
                    "sPhoneNumber": {
                        "description": "The Phone number of the contact.\nUse format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516.\nUse format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.",
                        "type": "string"
                    },
                    "sPhoneNumberCell": {
                        "description": "The Cell Phone number of the contact.\nUse format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516.\nUse format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.",
                        "type": "string"
                    }
                },
                "example": {
                    "sContactFirstname": "John",
                    "sContactLastname": "Doe",
                    "fkiLanguageID": 1,
                    "sEmailAddress": "johh.doe@domain.com",
                    "sPhoneNumber": "5149901516",
                    "sPhoneNumberCell": "5149901516"
                }
            },
            "ezsignsigner-RequestCompound": {
                "description": "An Ezsignsigner Object and children to create a complete structure",
                "required": [
                    "objContact"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignsigner-Request"
                    }
                ],
                "properties": {
                    "objContact": {
                        "$ref": "#/components/schemas/ezsignsigner-RequestCompound-Contact",
                        "description": ""
                    }
                }
            },
            "ezsignfoldersignerassociation-RequestCompound": {
                "description": "An Ezsignfoldersignerassociation Object and children to create a complete structure",
                "required": [
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request"
                    }
                ],
                "properties": {
                    "objEzsignsigner": {
                        "$ref": "#/components/schemas/ezsignsigner-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-RequestCompound": {
                "description": "An Ezsigndocument Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Request"
                    }
                ],
                "example": {
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59",
                    "fkiLanguageID": 2
                }
            },
            "ezsignfolder-send-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-send-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send API Request",
                "required": [
                    "tExtraMessage"
                ],
                "type": "object",
                "properties": {
                    "tExtraMessage": {
                        "description": "A custom text message that will be added to the email sent to signatories inviting them to sign.\n\nYou can send an empty string and only the generic message will be sent.",
                        "type": "string"
                    }
                },
                "example": "Hi John,\n\nThis is the document I need you to sign.\n\nCould you sign it before monday please.\n\nBest Regards.\n\nMary"
            },
            "ezsignsignature-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignsignature/editObject API Request",
                "required": [
                    "a_pkiEzsignsignatureID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignsignatureID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignsignatureID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignsignature-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignsignature/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignsignature": {
                        "$ref": "#/components/schemas/ezsignsignature-Request",
                        "description": ""
                    }
                }
            },
            "ezsignsignature-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignsignature/getObject API Request",
                "type": "object"
            },
            "ezsignsignature-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignsignature-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignsignature-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignsignature-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignsignature-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsignsignature-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignsignature/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignsignature": {
                        "$ref": "#/components/schemas/ezsignsignature-Request",
                        "description": ""
                    },
                    "objEzsignsignatureCompound": {
                        "$ref": "#/components/schemas/ezsignsignature-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsignsignature-Request": {
                "description": "An Ezsignsignature Object",
                "required": [
                    "fkiEzsignfoldersignerassociationID",
                    "iEzsignpagePagenumber",
                    "iEzsignsignatureX",
                    "iEzsignsignatureY",
                    "iEzsignsignatureStep",
                    "eEzsignsignatureType",
                    "fkiEzsigndocumentID"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsignfoldersignerassociationID": {
                        "description": "A reference to a valid Ezsignfoldersignerassociation.\n\nThat value is returned after a successful Ezsignfoldersignerassociation Creation.\n",
                        "type": "integer"
                    },
                    "iEzsignpagePagenumber": {
                        "description": "The page number in the document where to apply the signature",
                        "type": "integer"
                    },
                    "iEzsignsignatureX": {
                        "description": "The X coordinate (Horizontal) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 2 inches from the left border of the page, you would use \"200\" for the X coordinate.",
                        "type": "integer"
                    },
                    "iEzsignsignatureY": {
                        "description": "The Y coordinate (Vertical) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.",
                        "type": "integer"
                    },
                    "iEzsignsignatureStep": {
                        "description": "The step when the Ezsignsigner will be invited to sign.\n\nFor example, if you say iEzsignsignatureStep=2, that block of signature will be available for signature only after ALL the signatures in step 1 are completed.",
                        "type": "integer"
                    },
                    "eEzsignsignatureType": {
                        "description": "The type of signature required.\n\n1. **Acknowledgement** is for an acknowledgment of receipt.\n2. **Handwritten** is for a handwritten kind of signature where users needs to \"draw\" their signature on screen.\n3. **Initials** is a simple \"click to add initials\" block.\n4. **Name** is a simple \"Click to sign\" block. This is the most common block of signature.",
                        "enum": [
                            "Acknowledgement",
                            "Handwritten",
                            "Initials",
                            "Name"
                        ],
                        "type": "string"
                    },
                    "fkiEzsigndocumentID": {
                        "description": "A reference to a valid Ezsigndocument.\n\nThat value is returned after a successful Ezsigndocumentation Creation.",
                        "type": "integer"
                    }
                },
                "example": {
                    "fkiEzsigndocumentID": 48,
                    "fkiEzsignfoldersignerassociationID": 77,
                    "iEzsignpagePagenumber": 3,
                    "iEzsignsignatureX": 200,
                    "iEzsignsignatureY": 300,
                    "iEzsignsignatureStep": 1,
                    "eEzsignsignatureType": "Name"
                }
            },
            "ezsignsignature-RequestCompound": {
                "description": "An Ezsignsignature Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignsignature-Request"
                    }
                ],
                "example": {
                    "fkiEzsigndocumentID": 48,
                    "fkiEzsignfoldersignerassociationID": 77,
                    "iEzsignpagePagenumber": 3,
                    "iEzsignsignatureX": 200,
                    "iEzsignsignatureY": 300,
                    "iEzsignsignatureStep": 1,
                    "eEzsignsignatureType": "Name"
                }
            },
            "Common-Webhook": {
                "description": "This is the base Webhook object",
                "required": [
                    "objWebhook",
                    "a_objAttempt"
                ],
                "type": "object",
                "properties": {
                    "objWebhook": {
                        "$ref": "#/components/schemas/webhook-Response",
                        "description": "The details about the webhook being Called"
                    },
                    "a_objAttempt": {
                        "description": "An array containing details of previous attempts that were made to deliver the message.\nThe array is empty if it's the first attempt.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attempt-Response"
                        }
                    }
                },
                "example": {
                    "objWebhook": {
                        "pkiWebhookID": 23,
                        "eWebhookModule": "Ezsign",
                        "eWebhookEzsignevent": "DocumentCompleted",
                        "pksCustomerCode": "ezmax",
                        "sWebhookUrl": "https://www.yourdomain.com/yourpath",
                        "sWebhookEmailfailed": "hostmaster@yourdomain.com"
                    },
                    "a_objAttempt": [
                        {
                            "dtAttemptStart": "2020-12-31 23:58:58",
                            "sAttemptResult": "Error: Server returned HTTP status code 500",
                            "iAttemptDuration": 5
                        },
                        {
                            "dtAttemptStart": "2020-12-31 23:59:59",
                            "sAttemptResult": "Success",
                            "iAttemptDuration": 0
                        }
                    ]
                }
            },
            "Webhook-Ezsign-DocumentCompleted": {
                "description": "This is the base Webhook object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objEzsigndocument"
                        ],
                        "type": "object",
                        "properties": {
                            "objEzsigndocument": {
                                "$ref": "#/components/schemas/ezsigndocument-Response",
                                "description": "The Ezsign document on which the final signature was made."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Webhook"
                    }
                ]
            },
            "Webhook-Ezsign-FolderCompleted": {
                "description": "This is the base Webhook object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objEzsignfolder"
                        ],
                        "type": "object",
                        "properties": {
                            "objEzsignfolder": {
                                "$ref": "#/components/schemas/ezsignfolder-Response",
                                "description": "The Ezsign folder on which the final signature was made."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Webhook"
                    }
                ]
            },
            "webhook-Response": {
                "description": "A webhook object",
                "required": [
                    "pkiWebhookID",
                    "eWebhookModule",
                    "pksCustomerCode",
                    "sWebhookUrl",
                    "sWebhookEmailfailed"
                ],
                "type": "object",
                "properties": {
                    "pkiWebhookID": {
                        "description": "The Webhook ID. This value is visible in the admin interface.",
                        "type": "integer"
                    },
                    "eWebhookModule": {
                        "description": "The Module generating the Event.",
                        "enum": [
                            "Ezsign"
                        ],
                        "type": "string"
                    },
                    "eWebhookEzsignevent": {
                        "description": "This Ezsign Event. This property will be set only if the Module is \"Ezsign\".",
                        "enum": [
                            "DocumentCompleted",
                            "FolderCompleted"
                        ],
                        "type": "string"
                    },
                    "pksCustomerCode": {
                        "description": "The Customer Code in which the event was generated",
                        "type": "string"
                    },
                    "sWebhookUrl": {
                        "description": "The url being called",
                        "type": "string"
                    },
                    "sWebhookEmailfailed": {
                        "description": "The email that will receive the webhook in case all attempts fail.",
                        "type": "string"
                    }
                }
            },
            "attempt-Response": {
                "description": "An Attempt object",
                "required": [
                    "sAttemptResult",
                    "dtAttemptStart",
                    "iAttemptDuration"
                ],
                "type": "object",
                "properties": {
                    "dtAttemptStart": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "Date and time of the attempt in UCT."
                    },
                    "sAttemptResult": {
                        "description": "The Success or Failure message of the attempt when we tried to call the URL to deliver the webhook event.",
                        "type": "string"
                    },
                    "iAttemptDuration": {
                        "description": "The number of second it took to process the webhook or get an error",
                        "type": "integer"
                    }
                },
                "example": {
                    "dtAttemptStart": "2020-12-31 23:59:59",
                    "sAttemptResult": "Success",
                    "iAttemptDuration": 1
                }
            },
            "ezsignfolder-Response": {
                "description": "An Ezsignfolder Object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "fkiEzsignfoldertypeID",
                            "sEzsignfolderDescription",
                            "fkiEzsigntsarequirementID",
                            "tEzsignfolderNote",
                            "eEzsignfolderSendreminderfrequency",
                            "pkiEzsignfolderID",
                            "dtEzsignfolderSentdate",
                            "eEzsignfolderStep",
                            "dtEzsignfolderClose"
                        ],
                        "type": "object",
                        "properties": {
                            "fkiEzsignfoldertypeID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfoldertypeID",
                                "description": "",
                                "minimum": 1
                            },
                            "fkiEzsigntsarequirementID": {
                                "$ref": "#/components/schemas/Field-pkiEzsigntsarequirementID",
                                "description": ""
                            },
                            "sEzsignfolderDescription": {
                                "$ref": "#/components/schemas/Field-sEzsignfolderDescription",
                                "description": "",
                                "maxLength": 75,
                                "minLength": 1
                            },
                            "tEzsignfolderNote": {
                                "$ref": "#/components/schemas/Field-tEzsignfolderNote",
                                "description": ""
                            },
                            "eEzsignfolderSendreminderfrequency": {
                                "$ref": "#/components/schemas/Field-eEzsignfolderSendreminderfrequency",
                                "description": ""
                            },
                            "pkiEzsignfolderID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfolderID",
                                "description": ""
                            },
                            "dtEzsignfolderSentdate": {
                                "$ref": "#/components/schemas/Field-dtEzsignfolderSentdate",
                                "description": ""
                            },
                            "eEzsignfolderStep": {
                                "$ref": "#/components/schemas/Field-eEzsignfolderStep",
                                "description": ""
                            },
                            "dtEzsignfolderClose": {
                                "$ref": "#/components/schemas/Field-dtEzsignfolderClose",
                                "description": ""
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Audit"
                    }
                ]
            },
            "ezsignfolder-ResponseCompound": {
                "description": "An Ezsignfolder Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Response"
                    }
                ],
                "example": {
                    "pkiEzsignfolderID": 13,
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsigndocument-Response": {
                "description": "An Ezsigndocument Object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "sEzsigndocumentName",
                            "sEzsigndocumentFilename",
                            "fkiEzsignfolderID",
                            "dtEzsigndocumentDuedate",
                            "fkiLanguageID",
                            "pkiEzsigndocumentID",
                            "eEzsigndocumentStep",
                            "dtEzsigndocumentFirstsend",
                            "dtEzsigndocumentLastsend",
                            "iEzsigndocumentOrder",
                            "iEzsigndocumentPagetotal",
                            "iEzsigndocumentSignaturesigned",
                            "iEzsigndocumentSignaturetotal",
                            "sEzsigndocumentMD5initial",
                            "sEzsigndocumentMD5signed"
                        ],
                        "type": "object",
                        "properties": {
                            "fkiEzsignfolderID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfolderID",
                                "description": "",
                                "minimum": 1
                            },
                            "dtEzsigndocumentDuedate": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentDuedate",
                                "description": ""
                            },
                            "fkiLanguageID": {
                                "$ref": "#/components/schemas/Field-pkiLanguageID",
                                "description": ""
                            },
                            "sEzsigndocumentFilename": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentFilename",
                                "description": ""
                            },
                            "sEzsigndocumentName": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentName",
                                "description": ""
                            },
                            "pkiEzsigndocumentID": {
                                "$ref": "#/components/schemas/Field-pkiEzsigndocumentID",
                                "description": ""
                            },
                            "eEzsigndocumentStep": {
                                "$ref": "#/components/schemas/Field-eEzsigndocumentStep",
                                "description": ""
                            },
                            "dtEzsigndocumentFirstsend": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentFirstsend",
                                "description": ""
                            },
                            "dtEzsigndocumentLastsend": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentLastsend",
                                "description": ""
                            },
                            "iEzsigndocumentOrder": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentOrder",
                                "description": ""
                            },
                            "iEzsigndocumentPagetotal": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentPagetotal",
                                "description": ""
                            },
                            "iEzsigndocumentSignaturesigned": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentSignaturesigned",
                                "description": ""
                            },
                            "iEzsigndocumentSignaturetotal": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentSignaturetotal",
                                "description": ""
                            },
                            "sEzsigndocumentMD5initial": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentMD5initial",
                                "description": ""
                            },
                            "sEzsigndocumentMD5signed": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentMD5signed",
                                "description": ""
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Audit"
                    }
                ]
            },
            "ezsigndocument-ResponseCompound": {
                "description": "An Ezsigndocument Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Response"
                    }
                ],
                "example": {
                    "pkiEzsigndocumentID": 66,
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59",
                    "fkiLanguageID": 2
                }
            },
            "Common-Audit": {
                "description": "Gives informations about the user that created the object and the last user to have modified it.\n\nIf the object was never modified after creation, both Created and Modified informations will be the same.\n\nApikey details will only be provided if the changes were made by an API key.\n\n",
                "required": [
                    "dtCreatedDate",
                    "dtModifiedDate",
                    "fkiUserIDCreated",
                    "fkiUserIDModified"
                ],
                "type": "object",
                "properties": {
                    "fkiUserIDCreated": {
                        "description": "The id of the User that created the object.",
                        "type": "integer"
                    },
                    "fkiUserIDModified": {
                        "description": "The id of the User that made the last modification on the object.",
                        "type": "integer"
                    },
                    "fkiApikeyIDCreated": {
                        "description": "The id of the API Key that created the object.",
                        "type": "integer"
                    },
                    "fkiApikeyIDModified": {
                        "description": "The id of the API Key that made the last modification on the object.",
                        "type": "integer"
                    },
                    "dtCreatedDate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "The Date and time at which the object was created"
                    },
                    "dtModifiedDate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "The Date and time at which the object was modified last."
                    }
                },
                "example": {
                    "fkiUserIDCreated": 35,
                    "fkiUserIDModified": 35,
                    "fkiApikeyIDCreated": 1,
                    "fkiApikeyIDModified": 1,
                    "dtCreatedDate": "2020-12-31 23:59:59",
                    "dtModifiedDate": "2020-12-31 23:59:59"
                }
            },
            "ezsignfoldersignerassociation-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/getObject API Request",
                "type": "object"
            },
            "ezsignfolder-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/getObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Response"
                    }
                ]
            },
            "Field-dtEzsigndocumentDuedate": {
                "description": "The maximum date and time at which the document can be signed.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-pkiEzsignfolderID": {
                "description": "The unique ID of the Ezsignfolder",
                "type": "integer",
                "example": "33"
            },
            "Field-sEzsigndocumentFilename": {
                "description": "The actual file name that will be used when downloading or attaching to an email.",
                "type": "string",
                "example": "Contract123.pdf"
            },
            "Field-sEzsigndocumentName": {
                "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
                "type": "string",
                "example": "Contract #123"
            },
            "Field-pkiEzsignfoldertypeID": {
                "description": "The unique ID of the Ezsignfoldertype.\r\n\r\nThis value can be queried by the API and is also visible in the admin interface.\r\n\r\nThere are two types of Ezsignfoldertype. **User** and **Shared**. **User** can only be seen by the user who created the folder or its assistants. Access to **Shared** folders are configurable for access and email delivery. You should typically choose a **Shared** type here.",
                "type": "integer",
                "example": "5"
            },
            "Field-pkiEzsigndocumentID": {
                "description": "The unique ID of the Ezsigndocument",
                "type": "integer",
                "example": "36"
            },
            "ezsigndocument-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/getObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Response"
                    }
                ]
            },
            "Field-eEzsigndocumentStep": {
                "description": "The signature step of the Ezsigndocument.",
                "enum": [
                    "Unsent",
                    "Unsigned",
                    "PartiallySigned",
                    "Completed"
                ],
                "type": "string",
                "example": "Completed"
            },
            "Field-dtEzsigndocumentFirstsend": {
                "description": "The date and time when the Ezsigndocument was first sent.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-dtEzsigndocumentLastsend": {
                "description": "The date and time when the Ezsigndocument was sent the last time.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-iEzsigndocumentOrder": {
                "title": "Root Type for Field-iEzsigndocumentOrder",
                "description": "The order in which the Ezsigndocument will be presented to the signatory in the Ezsignfolder.",
                "type": "integer",
                "example": 1
            },
            "Field-iEzsigndocumentPagetotal": {
                "title": "Root Type for Field-iEzsigndocumentPagetotal",
                "description": "The number of pages in the Ezsigndocument.",
                "type": "integer",
                "example": 4
            },
            "Field-iEzsigndocumentSignaturesigned": {
                "title": "Root Type for Field-iEzsigndocumentSignaturesigned",
                "description": "The number of signatures that were signed in the document.",
                "type": "integer",
                "example": 3
            },
            "Field-iEzsigndocumentSignaturetotal": {
                "format": "int32",
                "title": "Root Type for Field-iEzsigndocumentSignaturetotal",
                "description": "The number of total signatures that were requested in the Ezsigndocument.",
                "type": "integer",
                "example": 4
            },
            "Field-sEzsignfolderDescription": {
                "description": "The description of the Ezsign Folder",
                "type": "string",
                "example": "Test eZsign Folder"
            },
            "Field-tEzsignfolderNote": {
                "description": "Somes extra notes about the eZsign Folder",
                "type": "string",
                "example": "An extra notes we can add to the ezsign folder"
            },
            "Field-dtEzsignfolderSentdate": {
                "description": "The date and time at which the Ezsign folder was sent the last time.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-dtEzsignfolderClose": {
                "description": "The date and time at which the folder was closed. Either by applying the last signature or by completing it prematurely.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-eEzsignfolderSendreminderfrequency": {
                "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
                "enum": [
                    "None",
                    "Daily",
                    "Weekly"
                ],
                "type": "string",
                "example": "None"
            },
            "Field-eEzsignfolderStep": {
                "description": "The signature step of the Ezsignfolder.",
                "enum": [
                    "Unsent",
                    "Sent",
                    "PartiallySigned",
                    "Expired",
                    "Signed",
                    "Completed",
                    "Archived"
                ],
                "type": "string",
                "example": "Completed"
            },
            "Field-sEzsigndocumentMD5initial": {
                "description": "MD5 Hash of the initial PDF Document before signatures were applied to it.",
                "type": "string",
                "example": "012345678901234567890123456789AB"
            },
            "Field-sEzsigndocumentMD5signed": {
                "description": "MD5 Hash of the final PDF Document after all signatures were applied to it.",
                "type": "string",
                "example": "012345678901234567890123456789AB"
            },
            "ezsigndocument-getDownloadUrl-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response-mPayload"
                    }
                }
            },
            "ezsigndocument-getDownloadUrl-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl API Request",
                "required": [
                    "sDownloadUrl"
                ],
                "type": "object",
                "properties": {
                    "sDownloadUrl": {
                        "description": "The Url to the requested document.\n\nUrl will expire after 5 minutes.",
                        "type": "string"
                    }
                },
                "example": {
                    "sDownloadUrl": "http://www.example.com/document.pdf"
                }
            },
            "ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl API Request",
                "required": [
                    "sLoginUrl"
                ],
                "type": "object",
                "properties": {
                    "sLoginUrl": {
                        "description": "The Url to login to the signing application.\r\n\r\nUrl will expire after 30 minutes.\r\n",
                        "type": "string"
                    }
                }
            },
            "franchisereferalincome-createObject-v1-Request": {
                "description": "Request for the /1/object/franchisereferalincome/createObject API Request",
                "type": "object",
                "properties": {
                    "objFranchisereferalincome": {
                        "$ref": "#/components/schemas/franchisereferalincome-Request",
                        "description": ""
                    },
                    "objFranchisereferalincomeCompound": {
                        "$ref": "#/components/schemas/franchisereferalincome-RequestCompound",
                        "description": ""
                    }
                }
            },
            "franchisereferalincome-createObject-v1-Response": {
                "description": "Response for the /1/object/franchisereferalincome/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "franchisereferalincome-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/franchisereferalincome/editObject API Request",
                "required": [
                    "a_pkiFranchisereferalincomeID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiFranchisereferalincomeID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiFranchisereferalincomeID": [
                        95,
                        96
                    ]
                }
            },
            "Field-pkiFranchisebrokerID": {
                "description": "The unique ID of the Franchisebroker",
                "type": "integer",
                "example": "61"
            },
            "Field-pkiPeriodID": {
                "description": "The unique ID of the Period",
                "type": "integer",
                "example": "21"
            },
            "Field-pkiFranchisereferalincomeprogramID": {
                "description": "The unique ID of the Franchisereferalincomeprogram",
                "type": "integer",
                "example": "51"
            },
            "Field-dFranchisereferalincomeLoan": {
                "description": "The loan amount",
                "type": "string",
                "example": "500275.62"
            },
            "Field-dFranchisereferalincomeFranchiseamount": {
                "description": "The amount that will be given to the franchise",
                "type": "string",
                "example": "275.00"
            },
            "Field-dFranchisereferalincomeFranchisoramount": {
                "description": "The amount that will be kept by the franchisor",
                "type": "string",
                "example": "385.00"
            },
            "Field-dFranchisereferalincomeAgentamount": {
                "description": "The amount that will be given to the agent",
                "type": "string",
                "example": "800.00"
            },
            "address-Request": {
                "description": "An Address Object",
                "required": [
                    "fkiAddresstypeID",
                    "sAddressCivic",
                    "sAddressStreet",
                    "sAddressSuite",
                    "sAddressCity",
                    "fkiProvinceID",
                    "fkiCountryID",
                    "sAddressZip"
                ],
                "type": "object",
                "properties": {
                    "fkiAddresstypeID": {
                        "$ref": "#/components/schemas/Field-pkiAddresstypeID",
                        "description": ""
                    },
                    "sAddressCivic": {
                        "$ref": "#/components/schemas/Field-sAddressCivic",
                        "description": ""
                    },
                    "sAddressStreet": {
                        "$ref": "#/components/schemas/Field-sAddressStreet",
                        "description": ""
                    },
                    "sAddressSuite": {
                        "$ref": "#/components/schemas/Field-sAddressSuite",
                        "description": ""
                    },
                    "sAddressCity": {
                        "$ref": "#/components/schemas/Field-sAddressCity",
                        "description": ""
                    },
                    "fkiProvinceID": {
                        "$ref": "#/components/schemas/Field-pkiProvinceID",
                        "description": ""
                    },
                    "fkiCountryID": {
                        "$ref": "#/components/schemas/Field-pkiCountryID",
                        "description": ""
                    },
                    "sAddressZip": {
                        "$ref": "#/components/schemas/Field-sAddressZip",
                        "description": ""
                    }
                }
            },
            "Field-sAddressZip": {
                "description": "The Postal/Zip Code\n\nThe value must be entered without spaces",
                "type": "string",
                "example": "H7T2S3"
            },
            "Field-sAddressCivic": {
                "description": "The Civic number.",
                "type": "string",
                "example": "2540"
            },
            "Field-sAddressStreet": {
                "description": "The Street Name",
                "type": "string",
                "example": "Daniel-Johnson Blvd."
            },
            "Field-sAddressSuite": {
                "description": "The Suite or appartment number",
                "type": "string",
                "example": "610"
            },
            "Field-sAddressCity": {
                "description": "The City name",
                "type": "string",
                "example": "Laval"
            },
            "Field-tFranchisereferalincomeComment": {
                "description": "A comment about the transaction",
                "type": "string",
                "example": "This is a comment"
            },
            "Field-dtFranchisereferalincomeDisbursed": {
                "description": "The date the amounts were disbursed",
                "type": "string",
                "example": "2020-12-31"
            },
            "contact-Request": {
                "description": "A Contact Object",
                "required": [
                    "fkiContacttitleID",
                    "fkiLanguageID",
                    "sContactFirstname",
                    "sContactLastname",
                    "sContactCompany"
                ],
                "type": "object",
                "properties": {
                    "fkiContacttitleID": {
                        "$ref": "#/components/schemas/Field-pkiContacttitleID",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sContactFirstname": {
                        "$ref": "#/components/schemas/Field-sContactFirstname",
                        "description": ""
                    },
                    "sContactLastname": {
                        "$ref": "#/components/schemas/Field-sContactLastname",
                        "description": ""
                    },
                    "sContactCompany": {
                        "$ref": "#/components/schemas/Field-sContactCompany",
                        "description": ""
                    },
                    "dtContactBirthdate": {
                        "$ref": "#/components/schemas/Field-dtContactBirthdate",
                        "description": ""
                    }
                }
            },
            "email-Request": {
                "description": "A Contact Object",
                "required": [
                    "fkiEmailtypeID",
                    "sEmailAddress"
                ],
                "type": "object",
                "properties": {
                    "fkiEmailtypeID": {
                        "$ref": "#/components/schemas/Field-pkiEmailtypeID",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    }
                }
            },
            "Field-sEmailAddress": {
                "description": "The email address.",
                "type": "string",
                "example": "example@domain.com"
            },
            "contact-RequestCompound": {
                "description": "A Contact Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objContactinformations"
                        ],
                        "type": "object",
                        "properties": {
                            "objContactinformations": {
                                "$ref": "#/components/schemas/contactinformations-RequestCompound",
                                "description": ""
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/contact-Request"
                    }
                ]
            },
            "franchisereferalincome-Request": {
                "description": "An Franchisereferalincome Object",
                "required": [
                    "fkiFranchisebrokerID",
                    "fkiFranchisereferalincomeprogramID",
                    "fkiPeriodID",
                    "dFranchisereferalincomeLoan",
                    "dFranchisereferalincomeFranchiseamount",
                    "dFranchisereferalincomeFranchisoramount",
                    "dFranchisereferalincomeAgentamount",
                    "dtFranchisereferalincomeDisbursed",
                    "tFranchisereferalincomeComment",
                    "objAddress"
                ],
                "type": "object",
                "properties": {
                    "fkiFranchisebrokerID": {
                        "$ref": "#/components/schemas/Field-pkiFranchisebrokerID",
                        "description": ""
                    },
                    "fkiFranchisereferalincomeprogramID": {
                        "$ref": "#/components/schemas/Field-pkiFranchisereferalincomeprogramID",
                        "description": ""
                    },
                    "fkiPeriodID": {
                        "$ref": "#/components/schemas/Field-pkiPeriodID",
                        "description": ""
                    },
                    "dFranchisereferalincomeLoan": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeLoan",
                        "description": ""
                    },
                    "dFranchisereferalincomeFranchiseamount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeFranchiseamount",
                        "description": ""
                    },
                    "dFranchisereferalincomeFranchisoramount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeFranchisoramount",
                        "description": ""
                    },
                    "dFranchisereferalincomeAgentamount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeAgentamount",
                        "description": ""
                    },
                    "dtFranchisereferalincomeDisbursed": {
                        "$ref": "#/components/schemas/Field-dtFranchisereferalincomeDisbursed",
                        "description": ""
                    },
                    "tFranchisereferalincomeComment": {
                        "$ref": "#/components/schemas/Field-tFranchisereferalincomeComment",
                        "description": ""
                    }
                }
            },
            "franchisereferalincome-RequestCompound": {
                "description": "A Franchisereferalincome Object and children to create a complete structure",
                "required": [
                    "a_objContact"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/franchisereferalincome-Request"
                    }
                ],
                "properties": {
                    "objAddress": {
                        "$ref": "#/components/schemas/address-Request",
                        "description": ""
                    },
                    "a_objContact": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact-RequestCompound"
                        }
                    }
                }
            },
            "Field-pkiContacttitleID": {
                "description": "The unique ID of the Contacttitle.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Ms.|\n|2|Mr.|\n|4|(Blank)|\n|5|Me (For Notaries)|",
                "type": "integer",
                "example": "2"
            },
            "Field-pkiAddresstypeID": {
                "description": "The unique ID of the Addresstype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Real Estate Invoice|\n|4|Invoicing|\n|5|Shipping|",
                "type": "integer",
                "example": "1"
            },
            "Field-pkiCountryID": {
                "description": "The unique ID of the Country.\n\nHere are some common values (Complete list must be retrieved from API):\n\n|Value|Description|\n|-|-|\n|1|Canada|\n|2|United-States|",
                "type": "integer",
                "example": "1"
            },
            "Field-pkiLanguageID": {
                "description": "The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|",
                "maximum": 2,
                "minimum": 1,
                "type": "integer",
                "example": "2"
            },
            "Field-pkiProvinceID": {
                "description": "The unique ID of the Province.\n\nHere are some common values (Complete list must be retrieved from API):\n\n|Value|Description|\n|-|-|\n|1|(Canada) Alberta\n|2|(Canada) British Columbia|\n|3|(Canada) Manitoba|\n|3|(Canada) Manitoba|\n|4|(Canada) New Brunswick|\n|5|(Canada) Newfoundland|\n|6|(Canada) Northwest Territories|\n|7|(Canada) Nova Scotia|\n|8|(Canada) Nunavut|\n|9|(Canada) Ontario|\n|10|(Canada) Prince Edward Island|\n|11|(Canada) Quebec|\n|12|(Canada) Saskatchewan|\n|13|(Canada) Yukon|\n|14|(United-States) Alabama|\n|15|(United-States) Alaska|\n|16|(United-States) Arizona|\n|17|(United-States) Arkansas|\n|18|(United-States) California|\n|19|(United-States) Colorado|\n|20|(United-States) Connecticut|\n|21|(United-States) Delaware|\n|22|(United-States) District of Columbia|\n|23|(United-States) Florida|\n|24|(United-States) Georgia|\n|25|(United-States) Hawaii|\n|26|(United-States) Idaho|\n|27|(United-States) Illinois|\n|28|(United-States) Indiana|\n|29|(United-States) Iowa|\n|30|(United-States) Kansas|\n|31|(United-States) Kentucky|\n|32|(United-States) Louisiane|\n|33|(United-States) Maine|\n|34|(United-States) Maryland|\n|35|(United-States) Massachusetts|\n|36|(United-States) Michigan|\n|37|(United-States) Minnesota|\n|38|(United-States) Mississippi|\n|39|(United-States) Missouri|\n|40|(United-States) Montana|\n|41|(United-States) Nebraska|\n|42|(United-States) Nevada|\n|43|(United-States) New Hampshire|\n|44|(United-States) New Jersey|\n|45|(United-States) New Mexico|\n|46|(United-States) New York|\n|47|(United-States) North Carolina|\n|48|(United-States) North Dakota|\n|49|(United-States) Ohio|\n|50|(United-States) Oklahoma|\n|51|(United-States) Oregon|\n|52|(United-States) Pennsylvania|\n|53|(United-States) Rhode Island|\n|54|(United-States) South Carolina|\n|55|(United-States) South Dakota|\n|56|(United-States) Tennessee|\n|57|(United-States) Texas|\n|58|(United-States) Utah|\n|60|(United-States) Vermont|\n|59|(United-States) Virginia|\n|61|(United-States) Washington|\n|62|(United-States) West Virginia|\n|63|(United-States) Wisconsin|\n|64|(United-States) Wyoming|",
                "type": "integer",
                "example": "11"
            },
            "Field-pkiTaxassignmentID": {
                "description": "The unique ID of the Taxassignment.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No tax|\n|2|GST|\n|3|HST (ON)|\n|4|HST (NB)|\n|5|HST (NS)|\n|6|HST (NL)|\n|7|HST (PE)|\n|8|GST + QST (QC)|\n|9|GST + QST (QC) Non-Recoverable|\n|10|GST + PST (BC)|\n|11|GST + PST (SK)|\n|12|GST + RST (MB)|\n|13|GST + PST (BC) Non-Recoverable|\n|14|GST + PST (SK) Non-Recoverable|\n|15|GST + RST (MB) Non-Recoverable|",
                "maximum": 15,
                "minimum": 1,
                "type": "integer",
                "example": "1"
            },
            "Field-pkiEmailtypeID": {
                "description": "The unique ID of the Emailtype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|",
                "type": "integer",
                "example": "1"
            },
            "Field-pkiEzsigntsarequirementID": {
                "description": "The unique ID of the Ezsigntsarequirement.\n\nDetermine if a Time Stamping Authority should add a timestamp on each of the signature.\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|\n|2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|\n|3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|",
                "maximum": 3,
                "minimum": 1,
                "type": "integer",
                "example": "92"
            },
            "Field-pkiSecretquestionID": {
                "description": "The unique ID of the Secretquestion.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|The name of the hospital in which you were born|\n|2|The name of your grade school|\n|3|The last name of your favorite teacher|\n|4|Your favorite sports team|\n|5|Your favorite TV show|\n|6|Your favorite movie|\n|7|The name of the street on which you grew up|\n|8|The name of your first employer|\n|9|Your first car|\n|10|Your favorite food|\n|11|The name of your first pet|\n|12|Favorite musician/band|\n|13|What instrument you play|\n|14|Your father's middle name|\n|15|Your mother's maiden name|\n|16|Name of your eldest child|\n|17|Your spouse's middle name|\n|18|Favorite restaurant|\n|19|Childhood nickname|\n|20|Favorite vacation destination|\n|21|Your boat's name|\n|22|Date of Birth (YYYY-MM-DD)|",
                "type": "integer",
                "example": "7"
            },
            "Field-sContactFirstname": {
                "description": "The First name of the contact",
                "type": "string",
                "example": "John"
            },
            "Field-sContactLastname": {
                "description": "The Last name of the contact",
                "type": "string",
                "example": "Doe"
            },
            "Field-sContactCompany": {
                "description": "The Company name of the contact",
                "type": "string",
                "example": "eZmax Solutions Inc."
            },
            "Field-dtContactBirthdate": {
                "description": "The Birth Date of the contact",
                "type": "string",
                "example": "1980-01-01"
            },
            "Field-tContactNote": {
                "description": "Some Notes about the contact",
                "type": "string",
                "example": "This is a note"
            },
            "Field-sPhoneRegion": {
                "description": "The region of the phone number. (For a North America Number only)\n\nThe region is the \"514\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "514"
            },
            "Field-sPhoneExchange": {
                "description": "The exchange of the phone number. (For a North America Number only)\n\nThe exchange is the \"990\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "990"
            },
            "Field-sPhoneNumber": {
                "description": "The number of the phone number. (For a North America Number only)\n\nThe number is the \"1516\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "1516"
            },
            "Field-sPhoneExtension": {
                "description": "The extension of the phone number.\n\nThe extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.\n\nIt can also be used with international phone numbers",
                "type": "string",
                "example": "123"
            },
            "Field-sPhoneInternational": {
                "description": "The international phone number. (For phone numbers outside of North)\n\nDo not specify the \"011\" part of the phone number used to dial an international phone number from North America.\n\nFor example for this sample phone number \"+442071838750\", you would send \"442071838750\" without the \"+\" sign.",
                "type": "string",
                "example": "442071838750"
            },
            "Field-ePhoneType": {
                "description": "The type of phone number.\n\n**Local** refers to a north American phone number. You would then need to specify sPhoneRegion, sPhoneExchange, sPhoneNumber.\n**International** would be used for numbers outside of north america. You would then need to specify sPhoneInternational",
                "enum": [
                    "Local",
                    "International"
                ],
                "type": "string",
                "example": "Local"
            },
            "Field-pkiPhonetypeID": {
                "description": "The unique ID of the Phonetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Mobile|\n|4|Fax|\n|5|Pager|\n|6|Toll Free|",
                "type": "integer",
                "example": "1"
            },
            "phone-Request": {
                "description": "A Phone Object",
                "required": [
                    "fkiPhonetypeID",
                    "ePhoneType"
                ],
                "type": "object",
                "properties": {
                    "fkiPhonetypeID": {
                        "$ref": "#/components/schemas/Field-pkiPhonetypeID",
                        "description": ""
                    },
                    "ePhoneType": {
                        "$ref": "#/components/schemas/Field-ePhoneType",
                        "description": ""
                    },
                    "sPhoneRegion": {
                        "$ref": "#/components/schemas/Field-sPhoneRegion",
                        "description": ""
                    },
                    "sPhoneExchange": {
                        "$ref": "#/components/schemas/Field-sPhoneExchange",
                        "description": ""
                    },
                    "sPhoneNumber": {
                        "$ref": "#/components/schemas/Field-sPhoneNumber",
                        "description": ""
                    },
                    "sPhoneInternational": {
                        "$ref": "#/components/schemas/Field-sPhoneInternational",
                        "description": ""
                    },
                    "sPhoneExtension": {
                        "$ref": "#/components/schemas/Field-sPhoneExtension",
                        "description": ""
                    }
                }
            },
            "Field-pkiWebsitetypeID": {
                "description": "The unique ID of the Websitetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Website|\n|2|Twitter|\n|3|Facebook|\n|4|Survey|",
                "type": "integer",
                "example": "1"
            },
            "Field-sWebsiteAddress": {
                "description": "The URL of the website.",
                "type": "string",
                "example": "https://www.domain.com"
            },
            "website-Request": {
                "description": "A Website Object",
                "required": [
                    "fkiWebsitetypeID",
                    "sWebsiteAddress"
                ],
                "type": "object",
                "properties": {
                    "fkiWebsitetypeID": {
                        "$ref": "#/components/schemas/Field-pkiWebsitetypeID",
                        "description": ""
                    },
                    "sWebsiteAddress": {
                        "$ref": "#/components/schemas/Field-sWebsiteAddress",
                        "description": ""
                    }
                }
            },
            "contactinformations-RequestCompound": {
                "description": "A Contactinformations Object and children to create a complete structure",
                "required": [
                    "a_objAddress",
                    "a_objPhone",
                    "a_objEmail",
                    "a_objWebsite"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/contactinformations-Request"
                    }
                ],
                "properties": {
                    "a_objAddress": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/address-Request"
                        }
                    },
                    "a_objPhone": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phone-Request"
                        }
                    },
                    "a_objEmail": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email-Request"
                        }
                    },
                    "a_objWebsite": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/website-Request"
                        }
                    }
                }
            },
            "contactinformations-Request": {
                "description": "A Contactinformations Object",
                "required": [
                    "iAddressDefault",
                    "iPhoneDefault",
                    "iEmailDefault",
                    "iWebsiteDefault"
                ],
                "type": "object",
                "properties": {
                    "iAddressDefault": {
                        "description": "The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iPhoneDefault": {
                        "description": "The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iEmailDefault": {
                        "description": "The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iWebsiteDefault": {
                        "description": "The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    }
                }
            },
            "Common-getAutocomplete-v1-Response": {
                "description": "Response for the /1/object/xxx/getAutocomplete API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response-mPayload"
                        }
                    }
                }
            },
            "Common-getAutocomplete-v1-Response-mPayload": {
                "description": "Generic Autocomplete Response",
                "required": [
                    "group",
                    "id",
                    "option"
                ],
                "type": "object",
                "properties": {
                    "group": {
                        "description": "The Category (ie group) for the dropdown or an empty string if not categorized",
                        "type": "string"
                    },
                    "id": {
                        "description": "The Unique ID of the element",
                        "type": "string"
                    },
                    "option": {
                        "description": "The Description of the element",
                        "type": "string"
                    }
                }
            }
        },
        "responses": {
            "Response-Error-404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "The element you are trying to work on does not exist"
            },
            "Response-Error-422": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "The syntax of the request is valid but the request cannot be completed. Look for detail in body."
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "description": "There are 3 types of API Key that can be used to make requests to the API.\n\n1. **API type key** which is static and not session based. It can be generated from the admin console. This is the most common type of authentication for \"server to server\" kind of integration. Never use this in a web based (client) application as the key could be leaked. This type of key begins with the letter **A**.\n\n2. **Delegated type key** which has an expiration time. It is commonly used in mobile or web application where you cannot use an **API type key** that could be leaked. The application would query a server part that will generate a **Delegated type key** using an **API type key**. The **Delegated type key** could now be used by the mobile or web page application without leaking the **API type key**. This type of key begins with the letter **D**.\n\n3. **User type key** which are session based and can be retrieved after a successful authentication. This type of key is reserved to specific situation where the other types of key are not desirable. This type of key begins with the letter **U**.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Authorization": [
            ]
        }
    ],
    "tags": [
        {
            "name": "Activesession",
            "description": "Activesession contains detail about the currently executing api request."
        },
        {
            "name": "Ezsigndocument",
            "description": "Ezsigndocument contains detail about a document to sign"
        },
        {
            "name": "Ezsignfolder",
            "description": "Ezsignfolder contains detail about the container containing signers, documents to sign, etc. Sometimes referred as \"Envelopes\" in competitor products"
        },
        {
            "name": "Ezsignfoldersignerassociation",
            "description": "Ezsignfoldersignerassociation contains detail about the signers that will be invited to sign the documents. Signers can be users from the system or persons outside of the system."
        },
        {
            "name": "Ezsignsignature",
            "description": "Ezsignsignature contains detail about a specific signature block on a page of a Ezsigndocument"
        },
        {
            "name": "EzsignWebhook",
            "description": "Webhooks related to Ezsign module. You can configure them in Ezmax administrative console."
        }
    ],
    "x-webhooks": {
        "Webhook-Ezsign-DocumentCompleted": {
            "post": {
                "summary": "Webhook Document Completed",
                "description": "This Webhook will be called when the last signature on an Ezsigndocument is made.",
                "operationId": "Webhook_Ezsign_DocumentCompleted",
                "tags": [
                    "Ezsigndocument"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook-Ezsign-DocumentCompleted"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response, will not be retried"
                    }
                }
            }
        },
        "Webhook-Ezsign-FolderCompleted": {
            "post": {
                "summary": "Webhook Folder Completed",
                "description": "This Webhook will be called when the last signature on the last Ezsigndocument from the folder is made.",
                "operationId": "Webhook_Ezsign_FolderCompleted",
                "tags": [
                    "Ezsignfolder"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook-Ezsign-FolderCompleted"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response, will not be retried"
                    }
                }
            }
        }
    },
    "x-tagGroups": [
        {
            "name": "Object",
            "tags": [
                "Activesession",
                "Ezsignfolder",
                "Ezsigndocument",
                "Ezsignfoldersignerassociation",
                "Ezsignsignature",
                "Franchisebroker",
                "Franchisereferalincome",
                "Period"
            ]
        },
        {
            "name": "Module",
            "tags": [
            ]
        },
        {
            "name": "Report",
            "tags": [
            ]
        }
    ]
}