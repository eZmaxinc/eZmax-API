{
    "openapi": "3.0.3",
    "info": {
        "title": "eZmax API Definition",
        "version": "1.0.38",
        "description": "This API expose all the functionnalities for the eZmax and eZsign applications.",
        "termsOfService": "https://www.ezmax.ca/TODO",
        "contact": {
            "name": "API Support department",
            "url": "https://www.ezmax.ca/en/contact",
            "email": "support-api@ezmax.ca"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "x-logo": {
            "url": "https://github.com/eZmaxinc/eZmax-API/raw/master/docs/resources/images/logo.png",
            "backgroundColor": "#fafafa",
            "altText": "eZmax Logo"
        },
        "x-restgeninfo": {

        }
    },
    "servers": [
        {
            "url": "https://{sInfrastructureenvironmenttypeDescription}.api.appcluster01.{sInfrastructureregionCode}.ezmax.com/rest",
            "description": "The server endpoint where to send your region specific API requests.",
            "variables": {
                "sInfrastructureenvironmenttypeDescription": {
                    "enum": [
                        "prod",
                        "stg",
                        "qa",
                        "dev"
                    ],
                    "default": "prod",
                    "description": "The environment on on which to call the API. Should always be \"prod\" unless instructed otherwise by support."
                },
                "sInfrastructureregionCode": {
                    "enum": [
                        "ca-central-1",
                        "local"
                    ],
                    "default": "ca-central-1",
                    "description": "The region where your services are hosted."
                }
            }
        },
        {
            "url": "https://{sInfrastructureenvironmenttypeDescription}.api.global.ezmax.com/",
            "description": "The server endpoint where to send your global API requests.",
            "variables": {
                "sInfrastructureenvironmenttypeDescription": {
                    "enum": [
                        "prod",
                        "stg",
                        "qa",
                        "dev"
                    ],
                    "default": "prod",
                    "description": "The environment on on which to call the API. Should always be \"prod\" unless instructed otherwise by support."
                }
            }
        }
    ],
    "paths": {
        "/1/object/activesession/getCurrent": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Activesession"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/activesession-getCurrent-v1-Response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Activesession_GetCurrent_V1",
                "summary": "Get Current Activesession",
                "description": "Retrieve the details about the current activesession"
            }
        },
        "/1/object/ezsigndocument": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_CreateObject_V1",
                "summary": "Create a new Ezsigndocument",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetObject_V1",
                "summary": "Retrieve an existing Ezsigndocument",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_DeleteObject_V1",
                "summary": "Delete an existing Ezsigndocument"
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getChildren": {
            "get": {
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetChildren_V1",
                "summary": "Retrieve an existing Ezsigndocument's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_CreateObject_V1",
                "summary": "Create a new Ezsignfolder",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetObject_V1",
                "summary": "Retrieve an existing Ezsignfolder",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_DeleteObject_V1",
                "summary": "Delete an existing Ezsignfolder"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}/getChildren": {
            "get": {
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignfolder's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_CreateObject_V1",
                "summary": "Create a new Ezsignfoldersignerassociation",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetObject_V1",
                "summary": "Retrieve an existing Ezsignfoldersignerassociation",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Object_Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_DeleteObject_V1",
                "summary": "Delete an existing Ezsignfoldersignerassociation"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getChildren": {
            "get": {
                "tags": [
                    "Object_Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignfoldersignerassociation's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}/send": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignfolder-send-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-send-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_Send_V1",
                "summary": "Send the Ezsignfolder to the signatories for signature"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignsignature": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsignsignature"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_CreateObject_V1",
                "summary": "Create a new Ezsignsignature",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignsignature/{pkiEzsignsignatureID}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Ezsignsignature"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_GetObject_V1",
                "summary": "Retrieve an existing Ezsignsignature",
                "description": ""
            },
            "delete": {
                "tags": [
                    "Object_Ezsignsignature"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignsignature-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_DeleteObject_V1",
                "summary": "Delete an existing Ezsignsignature"
            },
            "parameters": [
                {
                    "name": "pkiEzsignsignatureID",
                    "description": "The unique ID of the Ezsignsignature",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignsignature/{pkiEzsignsignatureID}/getChildren": {
            "get": {
                "tags": [
                    "Object_Ezsignsignature"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignsignature_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignsignature's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignsignatureID",
                    "description": "The unique ID of the Ezsignsignature",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}": {
            "get": {
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetDownloadUrl_V1",
                "summary": "Retrieve a URL to download documents.",
                "description": "This endpoint returns URLs to different files that can be downloaded during the signing process.\n\nThese links will expire after 5 minutes so the download of the file should be made soon after retrieving the link."
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "eDocumentType",
                    "description": "The type of document to retrieve.\n\n1. **Initial** Is the initial document before any signature were applied.\n2. **Signed** Is the final document once all signatures were applied.\n3. **Proofdocument** Is the evidence report.\n4. **Proof** Is the complete evidence archive including all of the above and more.\n",
                    "schema": {
                        "enum": [
                            "Initial",
                            "Signed",
                            "Proof",
                            "Proofdocument"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getInPersonLoginUrl": {
            "get": {
                "tags": [
                    "Object_Ezsignfoldersignerassociation"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfoldersignerassociation_GetInPersonLoginUrl_V1",
                "summary": "Retrieve a Login Url to allow In-Person signing",
                "description": "This endpoint returns a Login Url that can be used in a browser or embedded in an I-Frame to allow in person signing.\n\nThe signer Login type must be configured as In-Person."
            },
            "parameters": [
                {
                    "name": "pkiEzsignfoldersignerassociationID",
                    "description": "The unique ID of the Ezsignfoldersignerassociation",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/franchisereferalincome": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Franchisereferalincome"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Franchisereferalincome_CreateObject_V1",
                "summary": "Create a new Franchisereferalincome",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/franchisebroker/getAutocomplete/{sSelector}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Franchisebroker"
                ],
                "parameters": [
                    {
                        "name": "sQuery",
                        "description": "Allow to filter on the option value",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Franchisebroker_GetAutocomplete_V1",
                "summary": "Retrieve Franchisebrokers and IDs",
                "description": "Get the list of Franchisebrokers to be used in a dropdown or autocomplete control."
            },
            "parameters": [
                {
                    "name": "sSelector",
                    "description": "The type of Franchisebrokers to return",
                    "schema": {
                        "enum": [
                            "Active",
                            "All"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/period/getAutocomplete/{sSelector}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Period"
                ],
                "parameters": [
                    {
                        "name": "sQuery",
                        "description": "Allow to filter on the option value",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Period_GetAutocomplete_V1",
                "summary": "Retrieve Periods and IDs",
                "description": "Get the list of Periods to be used in a dropdown or autocomplete control."
            },
            "parameters": [
                {
                    "name": "sSelector",
                    "description": "The types of Periods to return",
                    "schema": {
                        "enum": [
                            "ActiveNormal",
                            "ActiveNormalAndEndOfYear",
                            "AllNormal",
                            "AllNormalAndEndOfYear"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/franchiseoffice/getAutocomplete/{sSelector}": {
            "description": "",
            "get": {
                "tags": [
                    "Object_Franchiseoffice"
                ],
                "parameters": [
                    {
                        "name": "sQuery",
                        "description": "Allow to filter on the option value",
                        "schema": {
                            "type": "string"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Franchiseoffice_GetAutocomplete_V1",
                "summary": "Retrieve Franchiseoffices and IDs",
                "description": "Get the list of Franchiseoffices to be used in a dropdown or autocomplete control."
            },
            "parameters": [
                {
                    "name": "sSelector",
                    "description": "The type of Franchiseoffices to return",
                    "schema": {
                        "enum": [
                            "Active",
                            "All"
                        ],
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/module/user/createezsignuser": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/user-createEzsignuser-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_User"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user-createEzsignuser-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "User_CreateEzsignuser_V1",
                "summary": "Create a new User of type Ezsignuser",
                "description": "The endpoint allows to initiate the creation or a user of type Ezsignuser.\n\nThe user will be created only once the email verification process will be completed"
            }
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsigndocument-applyEzsigntemplate-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-applyEzsigntemplate-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_ApplyEzsigntemplate_V1",
                "summary": "Apply an Ezsign Template to the Ezsigndocument.",
                "description": "This endpoint applies a predefined template to the ezsign document.\nThis allows to automatically apply all the form and signature fields on a document in a single step.\n\nThe document must not already have fields otherwise an error will be returned."
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/apikey": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/apikey-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Object_Apikey"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/apikey-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Apikey_CreateObject_V1",
                "summary": "Create a new Apikey",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/customer/{pksCustomerCode}/endpoint": {
            "description": "",
            "get": {
                "tags": [
                    "Global_Customer"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/global-customer-getEndpoint-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Global_Customer_GetEndpoint_V1",
                "summary": "Get customer endpoint",
                "description": "Retrieve the customer's specific server endpoint where to send requests. This will help locate the proper region (ie: sInfrastructureregionCode) and the proper environment (ie: sInfrastructureenvironmenttypeDescription) where the customer's data is stored."
            },
            "parameters": [
                {
                    "name": "pksCustomerCode",
                    "description": "The customer code assigned to your account",
                    "schema": {
                        "type": "string"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "sInfrastructureproductCode",
                    "description": "The infrastructure product Code\n\nIf undefined, \"appcluster01\" is assumed",
                    "schema": {
                        "enum": [
                            "appcluster01",
                            "ezsignuser"
                        ],
                        "type": "string"
                    },
                    "in": "query",
                    "required": false
                }
            ]
        },
        "/1/module/sspr/sendUsernames": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-sendUsernames-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The request was accepted.\n\nDo not misinterpret as \"the email address has an account attached to it\". It only means an email will be sent if (and only if) an account exists for that email address."
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_SendUsernames_V1",
                "summary": "Send username(s)",
                "description": "This endpoint returns an email with the username(s) matching the email address provided in case of forgotten username"
            }
        },
        "/1/module/sspr/unlockAccountRequest": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-unlockAccountRequest-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The request was accepted.\n\nDo not misinterpret as \"the account exists\". It only means an email will be sent if (and only if) an account exists."
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_UnlockAccountRequest_V1",
                "summary": "Unlock Account Request",
                "description": "This endpoint sends an email with a link to unlock the user account.\n\nsEmailAddress must be set if eUserTypeSSPR = EzsignUser\n\nsUserLoginname must be set if eUserTypeSSPR = Native"
            }
        },
        "/1/module/sspr/unlockAccount": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-unlockAccount-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The account was unlocked Successfully"
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_UnlockAccount_V1",
                "summary": "Unlock Account",
                "description": "This endpoint unlocks the user account.\n\nsEmailAddress must be set if eUserTypeSSPR = EzsignUser\n\nsUserLoginname must be set if eUserTypeSSPR = Native"
            }
        },
        "/1/module/sspr/resetPassword": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-resetPassword-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The password was reset Successfully"
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_ResetPassword_V1",
                "summary": "Reset Password",
                "description": "This endpoint resets the user's password.\n\nsEmailAddress must be set if eUserTypeSSPR = EzsignUser\n\nsUserLoginname must be set if eUserTypeSSPR = Native"
            }
        },
        "/1/module/sspr/validateToken": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-validateToken-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The token is valid"
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_ValidateToken_V1",
                "summary": "Validate Token",
                "description": "This endpoint validates if a Token is valid and not expired.\n\nsEmailAddress must be set if eUserTypeSSPR = EzsignUser\n\nsUserLoginname must be set if eUserTypeSSPR = Native"
            }
        },
        "/1/module/sspr/resetPasswordRequest": {
            "post": {
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sspr-resetPasswordRequest-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Module_Sspr"
                ],
                "responses": {
                    "204": {
                        "description": "The request was accepted.\n\nDo not misinterpret as \"the account exists\". It only means an email will be sent if (and only if) an account exists."
                    },
                    "403": {
                        "$ref": "#/components/responses/Response-Error-403"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    },
                    "422": {
                        "$ref": "#/components/responses/Response-Error-422"
                    }
                },
                "security": [
                    {

                    }
                ],
                "operationId": "Sspr_ResetPasswordRequest_V1",
                "summary": "Reset Password Request",
                "description": "This endpoint sends an email with a link to reset the user's password.\n\nsEmailAddress must be set if eUserTypeSSPR = EzsignUser\n\nsUserLoginname must be set if eUserTypeSSPR = Native"
            }
        }
    },
    "components": {
        "schemas": {
            "activesession-getCurrent-v1-Response-mPayload": {
                "description": "Payload for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "a_Permissions",
                    "a_RegisteredModules",
                    "eActivesessionSessiontype",
                    "fkiLanguageID",
                    "sCompanyNameX",
                    "sCustomerCode",
                    "sDepartmentNameX",
                    "fkiUserID",
                    "fkiApikeyID"
                ],
                "type": "object",
                "properties": {
                    "sCustomerCode": {
                        "description": "The customer code specific to the client in which the API request is being made",
                        "type": "string"
                    },
                    "eActivesessionSessiontype": {
                        "description": "The type of session used for the API request call",
                        "enum": [
                            "Normal"
                        ],
                        "type": "string"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID"
                    },
                    "sCompanyNameX": {
                        "description": "The name of the active Company in the current language",
                        "type": "string"
                    },
                    "sDepartmentNameX": {
                        "description": "The name of the active Department in the current language",
                        "type": "string"
                    },
                    "a_RegisteredModules": {
                        "description": "An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "a_Permissions": {
                        "description": "An array of permissions granted to the user or api key",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "fkiUserID": {
                        "$ref": "#/components/schemas/Field-pkiUserID",
                        "description": ""
                    },
                    "fkiApikeyID": {
                        "$ref": "#/components/schemas/Field-pkiApikeyID",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsigndocument-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/getDownloadUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsigndocument-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    },
                    "objEzsigndocumentCompound": {
                        "$ref": "#/components/schemas/ezsigndocument-RequestCompound",
                        "description": ""
                    }
                }
            },
            "activesession-getCurrent-v1-Response": {
                "description": "Response for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/activesession-getCurrent-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfolder-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignfoldersignerassociation-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfoldersignerassociation-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-getObject-v1-Response-mPayload"
                    }
                }
            },
            "Common-Response": {
                "description": "All API response will inherit this based Response",
                "type": "object",
                "properties": {
                    "objDebugPayload": {
                        "$ref": "#/components/schemas/Common-Response-objDebugPayload"
                    },
                    "objDebug": {
                        "$ref": "#/components/schemas/Common-Response-objDebug"
                    }
                }
            },
            "Common-Response-Error": {
                "description": "Generic Error Message",
                "required": [
                    "sErrorMessage"
                ],
                "type": "object",
                "properties": {
                    "sErrorMessage": {
                        "description": "More detail about the error",
                        "type": "string"
                    }
                }
            },
            "Common-Response-objDebug": {
                "description": "This is a generic debug object that is returned by all API requests",
                "required": [
                    "a_objSQLQuery",
                    "iSQLQueries",
                    "iSQLSelects",
                    "sMemoryUsage",
                    "sRunTime"
                ],
                "type": "object",
                "properties": {
                    "sMemoryUsage": {
                        "description": "The peak memory allocated during the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "sRunTime": {
                        "description": "The total server execution time of the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "iSQLSelects": {
                        "description": "The number of SQL SELECT queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "iSQLQueries": {
                        "description": "The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "a_objSQLQuery": {
                        "description": "An array of the SQL Queries that were executed during the API request execution",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Common-Response-objSQLQuery"
                        }
                    }
                },
                "example": {
                    "sMemoryUsage": "11,923MB",
                    "sRunTime": "0.6084s",
                    "iSQLSelects": 3,
                    "iSQLQueries": 6,
                    "a_objQuery": [
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        },
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        }
                    ]
                }
            },
            "Common-Response-objDebugPayload": {
                "description": "This is a debug object containing debugging information on the actual function",
                "required": [
                    "a_RequiredPermissions",
                    "iVersionMax",
                    "iVersionMin"
                ],
                "type": "object",
                "properties": {
                    "iVersionMin": {
                        "description": "The minimum version of the function that can be called",
                        "type": "integer"
                    },
                    "iVersionMax": {
                        "description": "The maximum version of the function that can be called",
                        "type": "integer"
                    },
                    "a_RequiredPermissions": {
                        "description": "An array of permissions required to access this function.\n\nIf the value \"0\" is present in the array, anyone can call this function.\n\nYou must have one of the permission to access the function. You don't need to have all of them.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "iVersionMin": 1,
                    "iVersionMax": 2,
                    "a_RequiredPermissions": [
                        45,
                        61
                    ]
                }
            },
            "Common-Response-objSQLQuery": {
                "description": "Definition of objSQLQuery Object",
                "required": [
                    "fDuration",
                    "sQuery"
                ],
                "type": "object",
                "properties": {
                    "sQuery": {
                        "description": "The SQL Query",
                        "type": "string"
                    },
                    "fDuration": {
                        "format": "float",
                        "description": "Execution time of the SQL Query in seconds",
                        "type": "number"
                    }
                },
                "example": {
                    "sQuery": "SELECT * FROM table",
                    "fDuration": 1.0E-4
                }
            },
            "ezsignfolder-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    },
                    "objEzsignfolderCompound": {
                        "$ref": "#/components/schemas/ezsignfolder-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-Request": {
                "description": "An Ezsignfolder Object",
                "required": [
                    "fkiEzsignfoldertypeID",
                    "sEzsignfolderDescription",
                    "fkiEzsigntsarequirementID",
                    "tEzsignfolderNote",
                    "eEzsignfolderSendreminderfrequency"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsignfoldertypeID": {
                        "$ref": "#/components/schemas/Field-pkiEzsignfoldertypeID",
                        "description": "",
                        "minimum": 1
                    },
                    "fkiEzsigntsarequirementID": {
                        "$ref": "#/components/schemas/Field-pkiEzsigntsarequirementID",
                        "description": ""
                    },
                    "sEzsignfolderDescription": {
                        "description": "The description of the Ezsign Folder",
                        "maxLength": 75,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tEzsignfolderNote": {
                        "description": "Somes extra notes about the eZsign Folder",
                        "type": "string"
                    },
                    "eEzsignfolderSendreminderfrequency": {
                        "$ref": "#/components/schemas/Field-eEzsignfolderSendreminderfrequency",
                        "description": ""
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfoldersignerassociation/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfoldersignerassociation": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request",
                        "description": ""
                    },
                    "objEzsignfoldersignerassociationCompound": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-RequestCompound",
                        "description": ""
                    }
                }
            },
            "Common-Format-DateTime": {
                "description": "Represent a Date Time.\nThe timezone is the one configured in the User's profile.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "ezsigndocument-Request": {
                "description": "An Ezsigndocument Object",
                "required": [
                    "sEzsigndocumentName",
                    "eEzsigndocumentSource",
                    "eEzsigndocumentFormat",
                    "fkiEzsignfolderID",
                    "dtEzsigndocumentDuedate",
                    "fkiLanguageID"
                ],
                "type": "object",
                "properties": {
                    "eEzsigndocumentSource": {
                        "description": "Indicates where to look for the document binary content.",
                        "enum": [
                            "Base64"
                        ],
                        "type": "string"
                    },
                    "eEzsigndocumentFormat": {
                        "description": "Indicates the format of the document.",
                        "enum": [
                            "Pdf"
                        ],
                        "type": "string"
                    },
                    "sEzsigndocumentBase64": {
                        "format": "byte",
                        "description": "The Base64 encoded binary content of the document.\n\nThis field is Required when eEzsigndocumentSource = Base64.",
                        "type": "string"
                    },
                    "fkiEzsignfolderID": {
                        "description": "A reference to a valid Ezsignfolder.\n\nThat value is returned after a successful Ezsignfolder Creation.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "dtEzsigndocumentDuedate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sEzsigndocumentName": {
                        "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
                        "type": "string"
                    }
                },
                "example": {
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiLanguageID": 2,
                    "eEzsigndocumentSource": "Base64",
                    "eEzsigndocumentFormat": "Pdf",
                    "sEzsigndocumentBase64": "JVBERi0xLjENCiXCpcKxw6sNCg0KMSAwIG9iag0KICA8PCAvVHlwZSAvQ2F0YWxvZw0KICAgICAvUGFnZXMgMiAwIFINCiAgPj4NCmVuZG9iag0KDQoyIDAgb2JqDQogIDw8IC9UeXBlIC9QYWdlcw0KICAgICAvS2lkcyBbMyAwIFJdDQogICAgIC9Db3VudCAxDQogICAgIC9NZWRpYUJveCBbMCAwIDMwMCAxNDRdDQogID4+DQplbmRvYmoNCg0KMyAwIG9iag0KICA8PCAgL1R5cGUgL1BhZ2UNCiAgICAgIC9QYXJlbnQgMiAwIFINCiAgICAgIC9SZXNvdXJjZXMNCiAgICAgICA8PCAvRm9udA0KICAgICAgICAgICA8PCAvRjENCiAgICAgICAgICAgICAgIDw8IC9UeXBlIC9Gb250DQogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTENCiAgICAgICAgICAgICAgICAgIC9CYXNlRm9udCAvVGltZXMtUm9tYW4NCiAgICAgICAgICAgICAgID4+DQogICAgICAgICAgID4+DQogICAgICAgPj4NCiAgICAgIC9Db250ZW50cyA0IDAgUg0KICA+Pg0KZW5kb2JqDQoNCjQgMCBvYmoNCiAgPDwgL0xlbmd0aCA1NSA+Pg0Kc3RyZWFtDQogIEJUDQogICAgL0YxIDE4IFRmDQogICAgMCAwIFRkDQogICAgKEhlbGxvIFdvcmxkKSBUag0KICBFVA0KZW5kc3RyZWFtDQplbmRvYmoNCg0KeHJlZg0KMCA1DQowMDAwMDAwMDAwIDY1NTM1IGYgDQowMDAwMDAwMDE4IDAwMDAwIG4gDQowMDAwMDAwMDc3IDAwMDAwIG4gDQowMDAwMDAwMTc4IDAwMDAwIG4gDQowMDAwMDAwNDU3IDAwMDAwIG4gDQp0cmFpbGVyDQogIDw8ICAvUm9vdCAxIDAgUg0KICAgICAgL1NpemUgNQ0KICA+Pg0Kc3RhcnR4cmVmDQo1NjUNCiUlRU9G",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59"
                }
            },
            "ezsignfoldersignerassociation-Request": {
                "description": "An Ezsignfoldersignerassociation Object",
                "required": [
                    "fkiEzsignfolderID"
                ],
                "type": "object",
                "properties": {
                    "fkiUserID": {
                        "description": "A reference to a valid User.\n\nThis is only used if the signatory will be a user from the system.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "fkiEzsignfolderID": {
                        "description": "A reference to a valid Ezsignfolder.\n\nThat value is returned after a successful Ezsignfolder Creation.",
                        "minimum": 1,
                        "type": "integer"
                    }
                },
                "example": {
                    "fkiUserID": 48,
                    "fkiEzsignfolderID": 85
                }
            },
            "ezsignsigner-Request": {
                "description": "An Ezsignsigner Object",
                "required": [
                    "eEzsignsignerLogintype",
                    "fkiTaxassignmentID"
                ],
                "type": "object",
                "properties": {
                    "fkiTaxassignmentID": {
                        "$ref": "#/components/schemas/Field-pkiTaxassignmentID",
                        "description": ""
                    },
                    "fkiSecretquestionID": {
                        "$ref": "#/components/schemas/Field-pkiSecretquestionID",
                        "description": ""
                    },
                    "eEzsignsignerLogintype": {
                        "description": "The method the Ezsignsigner will authenticate to the signing platform.\n\n1. **Password** means the Ezsignsigner will receive a secure link by email.\n2. **PasswordPhone** means the Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**.\n3. **PasswordQuestion** means the Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer.\n4. **InPersonPhone** means the Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**.\n5. **InPerson** means the Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type.",
                        "enum": [
                            "Password",
                            "PasswordPhone",
                            "PasswordQuestion",
                            "InPersonPhone",
                            "InPerson"
                        ],
                        "type": "string"
                    },
                    "sEzsignsignerSecretanswer": {
                        "description": "The predefined answer to the secret question the Ezsignsigner will need to provide to successfully authenticate.",
                        "type": "string"
                    }
                },
                "example": {
                    "fkiTaxassignmentID": 1,
                    "fkiSecretquestionID": 5,
                    "eEzsignsignerLogintype": "PasswordQuestion",
                    "sEzsignsignerSecretanswer": "This Is My Secret Answer"
                }
            },
            "ezsignfolder-RequestCompound": {
                "description": "An Ezsignfolder Object and children to create a complete structure",
                "required": [
                    "a_Ezsignfoldersignerassociation"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Request"
                    }
                ],
                "properties": {
                    "a_Ezsignfoldersignerassociation": {
                        "description": "An array of signers that will be invited to sign the Ezsigndocuments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request"
                        }
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsignsigner-RequestCompound-Contact": {
                "description": "A Ezsignsigner->Contact Object and children to create a complete structure",
                "required": [
                    "sContactFirstname",
                    "sContactLastname",
                    "fkiLanguageID"
                ],
                "type": "object",
                "properties": {
                    "sContactFirstname": {
                        "description": "The first name of the Contact",
                        "type": "string"
                    },
                    "sContactLastname": {
                        "description": "The last name of the Contact",
                        "type": "string"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "description": "The email address of the contact. Must be filled if email authentification was requested",
                        "type": "string"
                    },
                    "sPhoneNumber": {
                        "description": "The Phone number of the contact.\nUse format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516.\nUse format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.",
                        "type": "string"
                    },
                    "sPhoneNumberCell": {
                        "description": "The Cell Phone number of the contact.\nUse format \"5149901516\" for North American Numbers (Without \"1\" for long distance code) you would dial like this: 1-514-990-1516.\nUse format \"498945233886\" for international numbers (Without \"011\") you would dial like this: +49 89 452 33 88-6. In this example \"49\" is the country code of Germany.",
                        "type": "string"
                    }
                },
                "example": {
                    "sContactFirstname": "John",
                    "sContactLastname": "Doe",
                    "fkiLanguageID": 1,
                    "sEmailAddress": "johh.doe@domain.com",
                    "sPhoneNumber": "5149901516",
                    "sPhoneNumberCell": "5149901516"
                }
            },
            "ezsignsigner-RequestCompound": {
                "description": "An Ezsignsigner Object and children to create a complete structure",
                "required": [
                    "objContact"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignsigner-Request"
                    }
                ],
                "properties": {
                    "objContact": {
                        "$ref": "#/components/schemas/ezsignsigner-RequestCompound-Contact",
                        "description": ""
                    }
                }
            },
            "ezsignfoldersignerassociation-RequestCompound": {
                "description": "An Ezsignfoldersignerassociation Object and children to create a complete structure",
                "required": [
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request"
                    }
                ],
                "properties": {
                    "objEzsignsigner": {
                        "$ref": "#/components/schemas/ezsignsigner-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-RequestCompound": {
                "description": "An Ezsigndocument Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Request"
                    }
                ],
                "example": {
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59",
                    "fkiLanguageID": 2
                }
            },
            "ezsignfolder-send-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-send-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/{pkiEzsignfolderID}/send API Request",
                "required": [
                    "tExtraMessage"
                ],
                "type": "object",
                "properties": {
                    "tExtraMessage": {
                        "description": "A custom text message that will be added to the email sent to signatories inviting them to sign.\n\nYou can send an empty string and only the generic message will be sent.",
                        "type": "string"
                    }
                },
                "example": "Hi John,\n\nThis is the document I need you to sign.\n\nCould you sign it before monday please.\n\nBest Regards.\n\nMary"
            },
            "ezsignsignature-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignsignature/getObject API Request",
                "type": "object"
            },
            "ezsignsignature-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignsignature-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignsignature-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignsignature-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignsignature-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsignsignature-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignsignature/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignsignature": {
                        "$ref": "#/components/schemas/ezsignsignature-Request",
                        "description": ""
                    },
                    "objEzsignsignatureCompound": {
                        "$ref": "#/components/schemas/ezsignsignature-RequestCompound",
                        "description": ""
                    }
                }
            },
            "ezsignsignature-Request": {
                "description": "An Ezsignsignature Object",
                "required": [
                    "fkiEzsignfoldersignerassociationID",
                    "iEzsignpagePagenumber",
                    "iEzsignsignatureX",
                    "iEzsignsignatureY",
                    "iEzsignsignatureStep",
                    "eEzsignsignatureType",
                    "fkiEzsigndocumentID"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsignfoldersignerassociationID": {
                        "description": "A reference to a valid Ezsignfoldersignerassociation.\n\nThat value is returned after a successful Ezsignfoldersignerassociation Creation.\n",
                        "type": "integer"
                    },
                    "iEzsignpagePagenumber": {
                        "description": "The page number in the document where to apply the signature",
                        "type": "integer"
                    },
                    "iEzsignsignatureX": {
                        "description": "The X coordinate (Horizontal) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 2 inches from the left border of the page, you would use \"200\" for the X coordinate.",
                        "type": "integer"
                    },
                    "iEzsignsignatureY": {
                        "description": "The Y coordinate (Vertical) where to put the signature block on the page.\n\nCoordinate is calculated at 100dpi (dot per inch). So for example, if you want to put the signature block 3 inches from the top border of the page, you would use \"300\" for the Y coordinate.",
                        "type": "integer"
                    },
                    "iEzsignsignatureStep": {
                        "description": "The step when the Ezsignsigner will be invited to sign.\n\nFor example, if you say iEzsignsignatureStep=2, that block of signature will be available for signature only after ALL the signatures in step 1 are completed.",
                        "type": "integer"
                    },
                    "eEzsignsignatureType": {
                        "description": "The type of signature required.\n\n1. **Acknowledgement** is for an acknowledgment of receipt.\n2. **Handwritten** is for a handwritten kind of signature where users needs to \"draw\" their signature on screen.\n3. **Initials** is a simple \"click to add initials\" block.\n4. **Name** is a simple \"Click to sign\" block. This is the most common block of signature.",
                        "enum": [
                            "Acknowledgement",
                            "Handwritten",
                            "Initials",
                            "Name"
                        ],
                        "type": "string"
                    },
                    "fkiEzsigndocumentID": {
                        "description": "A reference to a valid Ezsigndocument.\n\nThat value is returned after a successful Ezsigndocumentation Creation.",
                        "type": "integer"
                    }
                },
                "example": {
                    "fkiEzsigndocumentID": 48,
                    "fkiEzsignfoldersignerassociationID": 77,
                    "iEzsignpagePagenumber": 3,
                    "iEzsignsignatureX": 200,
                    "iEzsignsignatureY": 300,
                    "iEzsignsignatureStep": 1,
                    "eEzsignsignatureType": "Name"
                }
            },
            "ezsignsignature-RequestCompound": {
                "description": "An Ezsignsignature Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignsignature-Request"
                    }
                ],
                "example": {
                    "fkiEzsigndocumentID": 48,
                    "fkiEzsignfoldersignerassociationID": 77,
                    "iEzsignpagePagenumber": 3,
                    "iEzsignsignatureX": 200,
                    "iEzsignsignatureY": 300,
                    "iEzsignsignatureStep": 1,
                    "eEzsignsignatureType": "Name"
                }
            },
            "Common-Webhook": {
                "description": "This is the base Webhook object",
                "required": [
                    "objWebhook",
                    "a_objAttempt"
                ],
                "type": "object",
                "properties": {
                    "objWebhook": {
                        "$ref": "#/components/schemas/webhook-Response",
                        "description": "The details about the webhook being Called"
                    },
                    "a_objAttempt": {
                        "description": "An array containing details of previous attempts that were made to deliver the message.\nThe array is empty if it's the first attempt.",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/attempt-Response"
                        }
                    }
                }
            },
            "Webhook-Ezsign-DocumentCompleted": {
                "description": "This is the base Webhook object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objEzsigndocument"
                        ],
                        "type": "object",
                        "properties": {
                            "objEzsigndocument": {
                                "$ref": "#/components/schemas/ezsigndocument-Response",
                                "description": "The Ezsign document on which the final signature was made."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Webhook"
                    }
                ]
            },
            "Webhook-Ezsign-FolderCompleted": {
                "description": "This is the base Webhook object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objEzsignfolder"
                        ],
                        "type": "object",
                        "properties": {
                            "objEzsignfolder": {
                                "$ref": "#/components/schemas/ezsignfolder-Response",
                                "description": "The Ezsign folder on which the final signature was made."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Webhook"
                    }
                ]
            },
            "webhook-Response": {
                "description": "A webhook object",
                "required": [
                    "pkiWebhookID",
                    "eWebhookModule",
                    "pksCustomerCode",
                    "sWebhookUrl",
                    "sWebhookEmailfailed"
                ],
                "type": "object",
                "properties": {
                    "pkiWebhookID": {
                        "description": "The Webhook ID. This value is visible in the admin interface.",
                        "type": "integer"
                    },
                    "eWebhookModule": {
                        "description": "The Module generating the Event.",
                        "enum": [
                            "Ezsign",
                            "Management"
                        ],
                        "type": "string"
                    },
                    "eWebhookEzsignevent": {
                        "description": "This Ezsign Event. This property will be set only if the Module is \"Ezsign\".",
                        "enum": [
                            "DocumentCompleted",
                            "FolderCompleted"
                        ],
                        "type": "string"
                    },
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "sWebhookUrl": {
                        "description": "The url being called",
                        "type": "string"
                    },
                    "sWebhookEmailfailed": {
                        "description": "The email that will receive the webhook in case all attempts fail.",
                        "type": "string"
                    },
                    "eWebhookManagementevent": {
                        "description": "This Management Event. This property will be set only if the Module is \"Management\".",
                        "enum": [
                            "UserCreated"
                        ],
                        "type": "string"
                    }
                }
            },
            "attempt-Response": {
                "description": "An Attempt object",
                "required": [
                    "sAttemptResult",
                    "dtAttemptStart",
                    "iAttemptDuration"
                ],
                "type": "object",
                "properties": {
                    "dtAttemptStart": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "Date and time of the attempt in UCT."
                    },
                    "sAttemptResult": {
                        "description": "The Success or Failure message of the attempt when we tried to call the URL to deliver the webhook event.",
                        "type": "string"
                    },
                    "iAttemptDuration": {
                        "description": "The number of second it took to process the webhook or get an error",
                        "type": "integer"
                    }
                },
                "example": {
                    "dtAttemptStart": "2020-12-31 23:59:59",
                    "sAttemptResult": "Success",
                    "iAttemptDuration": 1
                }
            },
            "ezsignfolder-ResponseCompound": {
                "description": "An Ezsignfolder Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Response"
                    }
                ],
                "example": {
                    "pkiEzsignfolderID": 13,
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsigndocument-Response": {
                "description": "An Ezsigndocument Object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "sEzsigndocumentName",
                            "fkiEzsignfolderID",
                            "dtEzsigndocumentDuedate",
                            "fkiLanguageID",
                            "pkiEzsigndocumentID",
                            "eEzsigndocumentStep",
                            "dtEzsigndocumentFirstsend",
                            "dtEzsigndocumentLastsend",
                            "iEzsigndocumentOrder",
                            "iEzsigndocumentPagetotal",
                            "iEzsigndocumentSignaturesigned",
                            "iEzsigndocumentSignaturetotal",
                            "sEzsigndocumentMD5initial",
                            "sEzsigndocumentMD5signed",
                            "objAudit"
                        ],
                        "type": "object",
                        "properties": {
                            "fkiEzsignfolderID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfolderID",
                                "description": "",
                                "minimum": 1
                            },
                            "dtEzsigndocumentDuedate": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentDuedate",
                                "description": ""
                            },
                            "fkiLanguageID": {
                                "$ref": "#/components/schemas/Field-pkiLanguageID",
                                "description": ""
                            },
                            "sEzsigndocumentName": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentName",
                                "description": ""
                            },
                            "pkiEzsigndocumentID": {
                                "$ref": "#/components/schemas/Field-pkiEzsigndocumentID",
                                "description": ""
                            },
                            "eEzsigndocumentStep": {
                                "$ref": "#/components/schemas/Field-eEzsigndocumentStep",
                                "description": ""
                            },
                            "dtEzsigndocumentFirstsend": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentFirstsend",
                                "description": ""
                            },
                            "dtEzsigndocumentLastsend": {
                                "$ref": "#/components/schemas/Field-dtEzsigndocumentLastsend",
                                "description": ""
                            },
                            "iEzsigndocumentOrder": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentOrder",
                                "description": ""
                            },
                            "iEzsigndocumentPagetotal": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentPagetotal",
                                "description": ""
                            },
                            "iEzsigndocumentSignaturesigned": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentSignaturesigned",
                                "description": ""
                            },
                            "iEzsigndocumentSignaturetotal": {
                                "$ref": "#/components/schemas/Field-iEzsigndocumentSignaturetotal",
                                "description": ""
                            },
                            "sEzsigndocumentMD5initial": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentMD5initial",
                                "description": ""
                            },
                            "sEzsigndocumentMD5signed": {
                                "$ref": "#/components/schemas/Field-sEzsigndocumentMD5signed",
                                "description": ""
                            },
                            "objAudit": {
                                "$ref": "#/components/schemas/Common-Audit",
                                "description": ""
                            }
                        }
                    }
                ]
            },
            "ezsigndocument-ResponseCompound": {
                "description": "An Ezsigndocument Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Response"
                    }
                ],
                "example": {
                    "pkiEzsigndocumentID": 66,
                    "sEzsigndocumentName": "Important contract",
                    "sEzsigndocumentFilename": "Important Contract.pdf",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59",
                    "fkiLanguageID": 2
                }
            },
            "Common-Audit": {
                "description": "Gives informations about the user that created the object and the last user to have modified it.\n\nIf the object was never modified after creation, both Created and Modified informations will be the same.\n\nApikey details will only be provided if the changes were made by an API key.\n\n",
                "required": [
                    "dtCreatedDate",
                    "dtModifiedDate",
                    "fkiUserIDCreated",
                    "fkiUserIDModified"
                ],
                "type": "object",
                "properties": {
                    "fkiUserIDCreated": {
                        "$ref": "#/components/schemas/Field-pkiUserID",
                        "description": ""
                    },
                    "fkiUserIDModified": {
                        "$ref": "#/components/schemas/Field-pkiUserID",
                        "description": ""
                    },
                    "fkiApikeyIDCreated": {
                        "$ref": "#/components/schemas/Field-pkiApikeyID",
                        "description": ""
                    },
                    "fkiApikeyIDModified": {
                        "$ref": "#/components/schemas/Field-pkiApikeyID",
                        "description": ""
                    },
                    "dtCreatedDate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "The Date and time at which the object was created"
                    },
                    "dtModifiedDate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "The Date and time at which the object was modified last."
                    }
                },
                "example": {
                    "fkiUserIDCreated": 35,
                    "fkiUserIDModified": 35,
                    "fkiApikeyIDCreated": 1,
                    "fkiApikeyIDModified": 1,
                    "dtCreatedDate": "2020-12-31 23:59:59",
                    "dtModifiedDate": "2020-12-31 23:59:59"
                }
            },
            "ezsignfoldersignerassociation-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/getObject API Request",
                "type": "object"
            },
            "Field-dtEzsigndocumentDuedate": {
                "description": "The maximum date and time at which the document can be signed.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-sEzsigndocumentName": {
                "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
                "type": "string",
                "example": "Contract #123"
            },
            "ezsigndocument-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/getObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Response"
                    }
                ]
            },
            "Field-eEzsigndocumentStep": {
                "description": "The signature step of the Ezsigndocument.",
                "enum": [
                    "Unsent",
                    "Unsigned",
                    "PartiallySigned",
                    "Completed"
                ],
                "type": "string",
                "example": "Completed"
            },
            "Field-dtEzsigndocumentFirstsend": {
                "description": "The date and time when the Ezsigndocument was first sent.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-dtEzsigndocumentLastsend": {
                "description": "The date and time when the Ezsigndocument was sent the last time.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-iEzsigndocumentOrder": {
                "title": "Root Type for Field-iEzsigndocumentOrder",
                "description": "The order in which the Ezsigndocument will be presented to the signatory in the Ezsignfolder.",
                "type": "integer",
                "example": 1
            },
            "Field-iEzsigndocumentPagetotal": {
                "title": "Root Type for Field-iEzsigndocumentPagetotal",
                "description": "The number of pages in the Ezsigndocument.",
                "type": "integer",
                "example": 4
            },
            "Field-iEzsigndocumentSignaturesigned": {
                "title": "Root Type for Field-iEzsigndocumentSignaturesigned",
                "description": "The number of signatures that were signed in the document.",
                "type": "integer",
                "example": 3
            },
            "Field-iEzsigndocumentSignaturetotal": {
                "format": "int32",
                "title": "Root Type for Field-iEzsigndocumentSignaturetotal",
                "description": "The number of total signatures that were requested in the Ezsigndocument.",
                "type": "integer",
                "example": 4
            },
            "Field-sEzsignfolderDescription": {
                "description": "The description of the Ezsign Folder",
                "type": "string",
                "example": "Test eZsign Folder"
            },
            "Field-tEzsignfolderNote": {
                "description": "Somes extra notes about the eZsign Folder",
                "type": "string",
                "example": "An extra notes we can add to the ezsign folder"
            },
            "Field-dtEzsignfolderSentdate": {
                "description": "The date and time at which the Ezsign folder was sent the last time.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-dtEzsignfolderClose": {
                "description": "The date and time at which the folder was closed. Either by applying the last signature or by completing it prematurely.",
                "type": "string",
                "example": "2020-12-31 23:59:59"
            },
            "Field-eEzsignfolderSendreminderfrequency": {
                "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
                "enum": [
                    "None",
                    "Daily",
                    "Weekly"
                ],
                "type": "string",
                "example": "None"
            },
            "Field-eEzsignfolderStep": {
                "description": "The signature step of the Ezsignfolder.",
                "enum": [
                    "Unsent",
                    "Sent",
                    "PartiallySigned",
                    "Expired",
                    "Signed",
                    "Completed",
                    "Archived"
                ],
                "type": "string",
                "example": "Completed"
            },
            "Field-sEzsigndocumentMD5initial": {
                "description": "MD5 Hash of the initial PDF Document before signatures were applied to it.",
                "type": "string",
                "example": "012345678901234567890123456789AB"
            },
            "Field-sEzsigndocumentMD5signed": {
                "description": "MD5 Hash of the final PDF Document after all signatures were applied to it.",
                "type": "string",
                "example": "012345678901234567890123456789AB"
            },
            "ezsigndocument-getDownloadUrl-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-getDownloadUrl-v1-Response-mPayload"
                    }
                }
            },
            "ezsigndocument-getDownloadUrl-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/{pkiEzsigndocument}/getDownloadUrl API Request",
                "required": [
                    "sDownloadUrl"
                ],
                "type": "object",
                "properties": {
                    "sDownloadUrl": {
                        "description": "The Url to the requested document.\n\nUrl will expire after 5 minutes.",
                        "type": "string"
                    }
                },
                "example": {
                    "sDownloadUrl": "http://www.example.com/document.pdf"
                }
            },
            "ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfoldersignerassociation-getInPersonLoginUrl-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/getInPersonLoginUrl API Request",
                "required": [
                    "sLoginUrl"
                ],
                "type": "object",
                "properties": {
                    "sLoginUrl": {
                        "description": "The Url to login to the signing application.\r\n\r\nUrl will expire after 30 minutes.\r\n",
                        "type": "string"
                    }
                }
            },
            "franchisereferalincome-createObject-v1-Request": {
                "description": "Request for the /1/object/franchisereferalincome/createObject API Request",
                "type": "object",
                "properties": {
                    "objFranchisereferalincome": {
                        "$ref": "#/components/schemas/franchisereferalincome-Request",
                        "description": ""
                    },
                    "objFranchisereferalincomeCompound": {
                        "$ref": "#/components/schemas/franchisereferalincome-RequestCompound",
                        "description": ""
                    }
                }
            },
            "franchisereferalincome-createObject-v1-Response": {
                "description": "Response for the /1/object/franchisereferalincome/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/franchisereferalincome-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "Field-dFranchisereferalincomeLoan": {
                "description": "The loan amount",
                "type": "string",
                "example": "500275.62"
            },
            "Field-dFranchisereferalincomeFranchiseamount": {
                "description": "The amount that will be given to the franchise",
                "type": "string",
                "example": "275.00"
            },
            "Field-dFranchisereferalincomeFranchisoramount": {
                "description": "The amount that will be kept by the franchisor",
                "type": "string",
                "example": "385.00"
            },
            "Field-dFranchisereferalincomeAgentamount": {
                "description": "The amount that will be given to the agent",
                "type": "string",
                "example": "800.00"
            },
            "address-Request": {
                "description": "An Address Object",
                "required": [
                    "fkiAddresstypeID",
                    "sAddressCivic",
                    "sAddressStreet",
                    "sAddressSuite",
                    "sAddressCity",
                    "fkiProvinceID",
                    "fkiCountryID",
                    "sAddressZip"
                ],
                "type": "object",
                "properties": {
                    "fkiAddresstypeID": {
                        "$ref": "#/components/schemas/Field-pkiAddresstypeID",
                        "description": ""
                    },
                    "sAddressCivic": {
                        "$ref": "#/components/schemas/Field-sAddressCivic",
                        "description": ""
                    },
                    "sAddressStreet": {
                        "$ref": "#/components/schemas/Field-sAddressStreet",
                        "description": ""
                    },
                    "sAddressSuite": {
                        "$ref": "#/components/schemas/Field-sAddressSuite",
                        "description": ""
                    },
                    "sAddressCity": {
                        "$ref": "#/components/schemas/Field-sAddressCity",
                        "description": ""
                    },
                    "fkiProvinceID": {
                        "$ref": "#/components/schemas/Field-pkiProvinceID",
                        "description": ""
                    },
                    "fkiCountryID": {
                        "$ref": "#/components/schemas/Field-pkiCountryID",
                        "description": ""
                    },
                    "sAddressZip": {
                        "$ref": "#/components/schemas/Field-sAddressZip",
                        "description": ""
                    }
                }
            },
            "Field-sAddressZip": {
                "description": "The Postal/Zip Code\n\nThe value must be entered without spaces",
                "type": "string",
                "example": "H7T2S3"
            },
            "Field-sAddressCivic": {
                "description": "The Civic number.",
                "type": "string",
                "example": "2540"
            },
            "Field-sAddressStreet": {
                "description": "The Street Name",
                "type": "string",
                "example": "Daniel-Johnson Blvd."
            },
            "Field-sAddressSuite": {
                "description": "The Suite or appartment number",
                "type": "string",
                "example": "610"
            },
            "Field-sAddressCity": {
                "description": "The City name",
                "type": "string",
                "example": "Laval"
            },
            "Field-tFranchisereferalincomeComment": {
                "description": "A comment about the transaction",
                "type": "string",
                "example": "This is a comment"
            },
            "Field-dtFranchisereferalincomeDisbursed": {
                "description": "The date the amounts were disbursed",
                "type": "string",
                "example": "2020-12-31"
            },
            "contact-Request": {
                "description": "A Contact Object",
                "required": [
                    "fkiContacttitleID",
                    "fkiLanguageID",
                    "sContactFirstname",
                    "sContactLastname",
                    "sContactCompany"
                ],
                "type": "object",
                "properties": {
                    "fkiContacttitleID": {
                        "$ref": "#/components/schemas/Field-pkiContacttitleID",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sContactFirstname": {
                        "$ref": "#/components/schemas/Field-sContactFirstname",
                        "description": ""
                    },
                    "sContactLastname": {
                        "$ref": "#/components/schemas/Field-sContactLastname",
                        "description": ""
                    },
                    "sContactCompany": {
                        "$ref": "#/components/schemas/Field-sContactCompany",
                        "description": ""
                    },
                    "dtContactBirthdate": {
                        "$ref": "#/components/schemas/Field-dtContactBirthdate",
                        "description": ""
                    }
                }
            },
            "email-Request": {
                "description": "A Contact Object",
                "required": [
                    "fkiEmailtypeID",
                    "sEmailAddress"
                ],
                "type": "object",
                "properties": {
                    "fkiEmailtypeID": {
                        "$ref": "#/components/schemas/Field-pkiEmailtypeID",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    }
                }
            },
            "Field-sEmailAddress": {
                "description": "The email address.",
                "type": "string",
                "example": "example@domain.com"
            },
            "contact-RequestCompound": {
                "description": "A Contact Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objContactinformations"
                        ],
                        "type": "object",
                        "properties": {
                            "objContactinformations": {
                                "$ref": "#/components/schemas/contactinformations-RequestCompound",
                                "description": ""
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/contact-Request"
                    }
                ]
            },
            "franchisereferalincome-Request": {
                "description": "An Franchisereferalincome Object",
                "required": [
                    "fkiFranchisebrokerID",
                    "fkiFranchisereferalincomeprogramID",
                    "fkiPeriodID",
                    "dFranchisereferalincomeLoan",
                    "dFranchisereferalincomeFranchiseamount",
                    "dFranchisereferalincomeFranchisoramount",
                    "dFranchisereferalincomeAgentamount",
                    "dtFranchisereferalincomeDisbursed",
                    "tFranchisereferalincomeComment",
                    "objAddress",
                    "fkiFranchiseofficeID",
                    "sFranchisereferalincomeRemoteid"
                ],
                "type": "object",
                "properties": {
                    "fkiFranchisebrokerID": {
                        "$ref": "#/components/schemas/Field-pkiFranchisebrokerID",
                        "description": ""
                    },
                    "fkiFranchisereferalincomeprogramID": {
                        "$ref": "#/components/schemas/Field-pkiFranchisereferalincomeprogramID",
                        "description": ""
                    },
                    "fkiPeriodID": {
                        "$ref": "#/components/schemas/Field-pkiPeriodID",
                        "description": ""
                    },
                    "dFranchisereferalincomeLoan": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeLoan",
                        "description": ""
                    },
                    "dFranchisereferalincomeFranchiseamount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeFranchiseamount",
                        "description": ""
                    },
                    "dFranchisereferalincomeFranchisoramount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeFranchisoramount",
                        "description": ""
                    },
                    "dFranchisereferalincomeAgentamount": {
                        "$ref": "#/components/schemas/Field-dFranchisereferalincomeAgentamount",
                        "description": ""
                    },
                    "dtFranchisereferalincomeDisbursed": {
                        "$ref": "#/components/schemas/Field-dtFranchisereferalincomeDisbursed",
                        "description": ""
                    },
                    "tFranchisereferalincomeComment": {
                        "$ref": "#/components/schemas/Field-tFranchisereferalincomeComment",
                        "description": ""
                    },
                    "fkiFranchiseofficeID": {
                        "$ref": "#/components/schemas/Field-pkiFranchiseofficeID",
                        "description": ""
                    },
                    "sFranchisereferalincomeRemoteid": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "franchisereferalincome-RequestCompound": {
                "description": "A Franchisereferalincome Object and children to create a complete structure",
                "required": [
                    "a_objContact"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/franchisereferalincome-Request"
                    }
                ],
                "properties": {
                    "objAddress": {
                        "$ref": "#/components/schemas/address-Request",
                        "description": ""
                    },
                    "a_objContact": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/contact-RequestCompound"
                        }
                    }
                }
            },
            "Field-sContactFirstname": {
                "description": "The First name of the contact",
                "type": "string",
                "example": "John"
            },
            "Field-sContactLastname": {
                "description": "The Last name of the contact",
                "type": "string",
                "example": "Doe"
            },
            "Field-sContactCompany": {
                "description": "The Company name of the contact",
                "type": "string",
                "example": "eZmax Solutions Inc."
            },
            "Field-dtContactBirthdate": {
                "description": "The Birth Date of the contact",
                "type": "string",
                "example": "1980-01-01"
            },
            "Field-tContactNote": {
                "description": "Some Notes about the contact",
                "type": "string",
                "example": "This is a note"
            },
            "Field-sPhoneRegion": {
                "description": "The region of the phone number. (For a North America Number only)\n\nThe region is the \"514\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "514"
            },
            "Field-sPhoneExchange": {
                "description": "The exchange of the phone number. (For a North America Number only)\n\nThe exchange is the \"990\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "990"
            },
            "Field-sPhoneNumber": {
                "description": "The number of the phone number. (For a North America Number only)\n\nThe number is the \"1516\" section in this sample phone number: (514) 990-1516 x123",
                "type": "string",
                "example": "1516"
            },
            "Field-sPhoneExtension": {
                "description": "The extension of the phone number.\n\nThe extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.\n\nIt can also be used with international phone numbers",
                "type": "string",
                "example": "123"
            },
            "Field-sPhoneInternational": {
                "description": "The international phone number. (For phone numbers outside of North)\n\nDo not specify the \"011\" part of the phone number used to dial an international phone number from North America.\n\nFor example for this sample phone number \"+442071838750\", you would send \"442071838750\" without the \"+\" sign.",
                "type": "string",
                "example": "442071838750"
            },
            "Field-ePhoneType": {
                "description": "The type of phone number.\n\n**Local** refers to a north American phone number. You would then need to specify sPhoneRegion, sPhoneExchange, sPhoneNumber.\n**International** would be used for numbers outside of north america. You would then need to specify sPhoneInternational",
                "enum": [
                    "Local",
                    "International"
                ],
                "type": "string",
                "example": "Local"
            },
            "phone-Request": {
                "description": "A Phone Object",
                "required": [
                    "fkiPhonetypeID",
                    "ePhoneType"
                ],
                "type": "object",
                "properties": {
                    "fkiPhonetypeID": {
                        "$ref": "#/components/schemas/Field-pkiPhonetypeID",
                        "description": ""
                    },
                    "ePhoneType": {
                        "$ref": "#/components/schemas/Field-ePhoneType",
                        "description": ""
                    },
                    "sPhoneRegion": {
                        "$ref": "#/components/schemas/Field-sPhoneRegion",
                        "description": ""
                    },
                    "sPhoneExchange": {
                        "$ref": "#/components/schemas/Field-sPhoneExchange",
                        "description": ""
                    },
                    "sPhoneNumber": {
                        "$ref": "#/components/schemas/Field-sPhoneNumber",
                        "description": ""
                    },
                    "sPhoneInternational": {
                        "$ref": "#/components/schemas/Field-sPhoneInternational",
                        "description": ""
                    },
                    "sPhoneExtension": {
                        "$ref": "#/components/schemas/Field-sPhoneExtension",
                        "description": ""
                    }
                }
            },
            "Field-sWebsiteAddress": {
                "description": "The URL of the website.",
                "type": "string",
                "example": "https://www.domain.com"
            },
            "website-Request": {
                "description": "A Website Object",
                "required": [
                    "fkiWebsitetypeID",
                    "sWebsiteAddress"
                ],
                "type": "object",
                "properties": {
                    "fkiWebsitetypeID": {
                        "$ref": "#/components/schemas/Field-pkiWebsitetypeID",
                        "description": ""
                    },
                    "sWebsiteAddress": {
                        "$ref": "#/components/schemas/Field-sWebsiteAddress",
                        "description": ""
                    }
                }
            },
            "contactinformations-RequestCompound": {
                "description": "A Contactinformations Object and children to create a complete structure",
                "required": [
                    "a_objAddress",
                    "a_objPhone",
                    "a_objEmail",
                    "a_objWebsite"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/contactinformations-Request"
                    }
                ],
                "properties": {
                    "a_objAddress": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/address-Request"
                        }
                    },
                    "a_objPhone": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/phone-Request"
                        }
                    },
                    "a_objEmail": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/email-Request"
                        }
                    },
                    "a_objWebsite": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/website-Request"
                        }
                    }
                }
            },
            "contactinformations-Request": {
                "description": "A Contactinformations Object",
                "required": [
                    "iAddressDefault",
                    "iPhoneDefault",
                    "iEmailDefault",
                    "iWebsiteDefault"
                ],
                "type": "object",
                "properties": {
                    "iAddressDefault": {
                        "description": "The index in the a_objAddress array (zero based index) representing the Address object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iPhoneDefault": {
                        "description": "The index in the a_objPhone array (zero based index) representing the Phone object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iEmailDefault": {
                        "description": "The index in the a_objEmail array (zero based index) representing the Email object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    },
                    "iWebsiteDefault": {
                        "description": "The index in the a_objWebsite array (zero based index) representing the Website object that should become the default one.\n\nYou can leave the value to 0 if the array is empty.",
                        "type": "integer"
                    }
                }
            },
            "Common-getAutocomplete-v1-Response": {
                "description": "Response for the /1/object/xxx/getAutocomplete API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Common-getAutocomplete-v1-Response-mPayload"
                        }
                    }
                }
            },
            "Common-getAutocomplete-v1-Response-mPayload": {
                "description": "Generic Autocomplete Response",
                "required": [
                    "group",
                    "id",
                    "option"
                ],
                "type": "object",
                "properties": {
                    "group": {
                        "description": "The Category (ie group) for the dropdown or an empty string if not categorized",
                        "type": "string"
                    },
                    "id": {
                        "description": "The Unique ID of the element",
                        "type": "string"
                    },
                    "option": {
                        "description": "The Description of the element",
                        "type": "string"
                    }
                }
            },
            "Field-sFranchisereferalincomeRemoteid": {
                "description": "The internal ID",
                "type": "string",
                "example": "12345"
            },
            "user-createEzsignuser-v1-Response": {
                "description": "Response for the /1/module/user/createEzsignuser API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/user-createEzsignuser-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "user-createEzsignuser-v1-Response-mPayload": {
                "description": "Payload for the /1/module/user/createEzsignuser API Request",
                "required": [
                    "a_sEmailAddressSuccess",
                    "a_sEmailAddressFailure"
                ],
                "type": "object",
                "properties": {
                    "a_sEmailAddressSuccess": {
                        "description": "An array of email addresses that succeeded.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "a_sEmailAddressFailure": {
                        "description": "An array of email addresses that failed.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "example": {
                    "a_sEmailAddressSuccess": [
                        "someone@example.com",
                        "someone2@example.com"
                    ],
                    "a_sEmailAddressFailure": [
                        "UserAlreadyExists@example.com"
                    ]
                }
            },
            "user-createEzsignuser-v1-Request": {
                "description": "Request for the /1/module/user/createEzsignuser API Request",
                "required": [
                    "fkiLanguageID",
                    "sUserFirstname",
                    "sUserLastname",
                    "sEmailAddress",
                    "sPhoneRegion",
                    "sPhoneExchange",
                    "sPhoneNumber"
                ],
                "type": "object",
                "properties": {
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "sUserFirstname": {
                        "$ref": "#/components/schemas/Field-sUserFirstname",
                        "description": ""
                    },
                    "sUserLastname": {
                        "$ref": "#/components/schemas/Field-sUserLastname",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sPhoneRegion": {
                        "$ref": "#/components/schemas/Field-sPhoneRegion",
                        "description": ""
                    },
                    "sPhoneExchange": {
                        "$ref": "#/components/schemas/Field-sPhoneExchange",
                        "description": ""
                    },
                    "sPhoneNumber": {
                        "$ref": "#/components/schemas/Field-sPhoneNumber",
                        "description": ""
                    },
                    "sPhoneExtension": {
                        "$ref": "#/components/schemas/Field-sPhoneExtension",
                        "description": ""
                    }
                }
            },
            "Field-sUserLastname": {
                "description": "The Last name of the user",
                "type": "string",
                "example": "Doe"
            },
            "Field-sUserFirstname": {
                "description": "The First name of the user",
                "type": "string",
                "example": "John"
            },
            "ezsigndocument-applyEzsigntemplate-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/{pkiEzsigndocument}/applyEzsigntemplate API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "Field-sEzsigntemplatesigner": {
                "description": "The First name of the user",
                "type": "string",
                "example": "John"
            },
            "ezsigndocument-applyEzsigntemplate-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate API Request",
                "required": [
                    "a_sEzsigntemplatesigner",
                    "a_pkiEzsignfoldersignerassociation",
                    "a_pkiEzsignfoldersignerassociationID",
                    "fkiEzsigntemplateID"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsigntemplateID": {
                        "$ref": "#/components/schemas/Field-pkiEzsigntemplateID",
                        "description": ""
                    },
                    "a_sEzsigntemplatesigner": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field-sEzsigntemplatesigner"
                        }
                    },
                    "a_pkiEzsignfoldersignerassociationID": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field-pkiEzsignfoldersignerassociationID"
                        }
                    }
                }
            },
            "Webhook-User-UserCreated": {
                "description": "This is the base Webhook object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "objUser"
                        ],
                        "type": "object",
                        "properties": {
                            "objUser": {
                                "$ref": "#/components/schemas/user-Response",
                                "description": "The User that was just created."
                            }
                        }
                    },
                    {
                        "$ref": "#/components/schemas/Common-Webhook"
                    }
                ]
            },
            "ezsignfolder-Response": {
                "description": "An Ezsignfolder Object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "fkiEzsignfoldertypeID",
                            "sEzsignfolderDescription",
                            "fkiEzsigntsarequirementID",
                            "tEzsignfolderNote",
                            "eEzsignfolderSendreminderfrequency",
                            "pkiEzsignfolderID",
                            "dtEzsignfolderSentdate",
                            "eEzsignfolderStep",
                            "dtEzsignfolderClose",
                            "objAudit"
                        ],
                        "type": "object",
                        "properties": {
                            "fkiEzsignfoldertypeID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfoldertypeID",
                                "description": "",
                                "minimum": 1
                            },
                            "fkiEzsigntsarequirementID": {
                                "$ref": "#/components/schemas/Field-pkiEzsigntsarequirementID",
                                "description": ""
                            },
                            "sEzsignfolderDescription": {
                                "$ref": "#/components/schemas/Field-sEzsignfolderDescription",
                                "description": "",
                                "maxLength": 75,
                                "minLength": 1
                            },
                            "tEzsignfolderNote": {
                                "$ref": "#/components/schemas/Field-tEzsignfolderNote",
                                "description": ""
                            },
                            "eEzsignfolderSendreminderfrequency": {
                                "$ref": "#/components/schemas/Field-eEzsignfolderSendreminderfrequency",
                                "description": ""
                            },
                            "pkiEzsignfolderID": {
                                "$ref": "#/components/schemas/Field-pkiEzsignfolderID",
                                "description": ""
                            },
                            "dtEzsignfolderSentdate": {
                                "$ref": "#/components/schemas/Field-dtEzsignfolderSentdate",
                                "description": ""
                            },
                            "eEzsignfolderStep": {
                                "$ref": "#/components/schemas/Field-eEzsignfolderStep",
                                "description": ""
                            },
                            "dtEzsignfolderClose": {
                                "$ref": "#/components/schemas/Field-dtEzsignfolderClose",
                                "description": ""
                            },
                            "objAudit": {
                                "$ref": "#/components/schemas/Common-Audit",
                                "description": ""
                            }
                        }
                    }
                ]
            },
            "user-Response": {
                "description": "A User Object",
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "pkiUserID",
                            "sUserFirstname",
                            "sUserLastname",
                            "fkiLanguageID",
                            "eUserType",
                            "sUserLoginname",
                            "objAudit"
                        ],
                        "type": "object",
                        "properties": {
                            "pkiUserID": {
                                "$ref": "#/components/schemas/Field-pkiUserID",
                                "description": ""
                            },
                            "fkiLanguageID": {
                                "$ref": "#/components/schemas/Field-pkiLanguageID",
                                "description": ""
                            },
                            "eUserType": {
                                "$ref": "#/components/schemas/Field-eUserType",
                                "description": ""
                            },
                            "sUserFirstname": {
                                "$ref": "#/components/schemas/Field-sUserFirstname",
                                "description": ""
                            },
                            "sUserLastname": {
                                "$ref": "#/components/schemas/Field-sUserLastname",
                                "description": ""
                            },
                            "sUserLoginname": {
                                "$ref": "#/components/schemas/Field-sUserLoginname",
                                "description": ""
                            },
                            "objAudit": {
                                "$ref": "#/components/schemas/Common-Audit",
                                "description": ""
                            }
                        }
                    }
                ]
            },
            "Field-eUserType": {
                "description": "The user type of the User.",
                "enum": [
                    "AgentBroker",
                    "Assistant",
                    "Attendance",
                    "Customer",
                    "Employee",
                    "Ezcom",
                    "EzsignSigner",
                    "EzsignUser",
                    "FranchiseCustomerServer",
                    "Normal",
                    "RewardAdministration",
                    "RewardMember",
                    "RewardRepresentative",
                    "RewardCustomer",
                    "RewardDistributorServer",
                    "Supplier",
                    "VetrxCustomer",
                    "Vetrxcustomergroup",
                    "VetrxCustomerServer",
                    "VetrxManufacturer",
                    "VetrxVendor"
                ],
                "type": "string",
                "example": "RewardDistributorServer"
            },
            "Field-sUserLoginname": {
                "description": "The Login name of the User.",
                "type": "string",
                "example": "JohnDoe"
            },
            "apikey-createObject-v1-Response": {
                "description": "Response for the /1/object/apikey/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/apikey-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/createObject API Request",
                "required": [
                    "a_pkiEzsigndocumentID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsigndocumentID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsigndocumentID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignfolder-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/createObject API Request",
                "required": [
                    "a_pkiEzsignfolderID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignfolderID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignfolderID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignfoldersignerassociation-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfoldersignerassociation/createObject API Request",
                "required": [
                    "a_pkiEzsignfoldersignerassociationID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignfoldersignerassociationID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignfoldersignerassociationID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignsignature-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignsignature/createObject API Request",
                "required": [
                    "a_pkiEzsignsignatureID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignsignatureID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignsignatureID": [
                        95,
                        96
                    ]
                }
            },
            "franchisereferalincome-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/franchisereferalincome/createObject API Request",
                "required": [
                    "a_pkiFranchisereferalincomeID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiFranchisereferalincomeID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiFranchisereferalincomeID": [
                        95,
                        96
                    ]
                }
            },
            "apikey-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/apikey/createObject API Request",
                "required": [
                    "a_objApikey"
                ],
                "type": "object",
                "properties": {
                    "a_objApikey": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/apikey-Response"
                        }
                    }
                }
            },
            "apikey-createObject-v1-Request": {
                "description": "Request for the /1/object/apikey/createObject API Request",
                "type": "object",
                "properties": {
                    "objApikey": {
                        "$ref": "#/components/schemas/apikey-Request",
                        "description": ""
                    },
                    "objApikeyCompound": {
                        "$ref": "#/components/schemas/apikey-RequestCompound",
                        "description": ""
                    }
                }
            },
            "apikey-RequestCompound": {
                "description": "An Apikey Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/apikey-Request"
                    }
                ]
            },
            "apikey-Request": {
                "description": "An Apikey Object",
                "required": [
                    "fkiUserID",
                    "objApikeyDescription"
                ],
                "type": "object",
                "properties": {
                    "fkiUserID": {
                        "$ref": "#/components/schemas/Field-pkiUserID",
                        "description": ""
                    },
                    "objApikeyDescription": {
                        "$ref": "#/components/schemas/Multilingual-ApikeyDescription",
                        "description": ""
                    }
                }
            },
            "Multilingual-ApikeyDescription": {
                "description": "Description of the API Key\n\n",
                "type": "object",
                "properties": {
                    "sApikeyDescription1": {
                        "description": "Value in French",
                        "type": "string"
                    },
                    "sApikeyDescription2": {
                        "description": "Value in English",
                        "type": "string"
                    }
                },
                "example": {
                    "sApikeyDescription1": "Projet X",
                    "sApikeyDescription2": "Project X"
                }
            },
            "apikey-Response": {
                "description": "An Apikey Object",
                "required": [
                    "objApikeyDescription",
                    "pkiApikeyID",
                    "objAudit"
                ],
                "type": "object",
                "allOf": [
                    {
                        "required": [
                            "pkiApikeyID"
                        ],
                        "type": "object"
                    }
                ],
                "properties": {
                    "objApikeyDescription": {
                        "$ref": "#/components/schemas/Multilingual-ApikeyDescription",
                        "description": ""
                    },
                    "sComputedToken": {
                        "description": "The secret token for the API key.\n\nThis will be returned only on creation.",
                        "type": "string"
                    },
                    "pkiApikeyID": {
                        "$ref": "#/components/schemas/Field-pkiApikeyID",
                        "description": ""
                    },
                    "objAudit": {
                        "$ref": "#/components/schemas/Common-Audit",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/getObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Response"
                    }
                ]
            },
            "global-customer-getEndpoint-v1-Response": {
                "description": "Response for the /1/customer/{pksCustomerCode}/endpoint API Request",
                "required": [
                    "sEndpointURL"
                ],
                "type": "object",
                "properties": {
                    "sEndpointURL": {
                        "description": "The endpoint's URL",
                        "type": "string"
                    }
                },
                "example": {
                    "sEndpointURL": "https://prod.api.appcluster01.ca-central-1.ezmax.com/"
                }
            },
            "UNUSED-ezsigndocument-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    }
                }
            },
            "UNUSED-ezsigndocument-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "UNUSED-ezsignfolder-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    }
                }
            },
            "UNUSED-ezsignfolder-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "UNUSED-ezsignfoldersignerassociation-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfoldersignerassociation/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfoldersignerassociation": {
                        "$ref": "#/components/schemas/ezsignfoldersignerassociation-Request",
                        "description": ""
                    }
                }
            },
            "UNUSED-ezsignfoldersignerassociation-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfoldersignerassociation/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "UNUSED-ezsignsignature-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignsignature/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignsignature": {
                        "$ref": "#/components/schemas/ezsignsignature-Request",
                        "description": ""
                    }
                }
            },
            "UNUSED-ezsignsignature-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignsignature/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "Field-eUserTypeSSPR": {
                "description": "The user type of the User for SSPR",
                "enum": [
                    "EzsignUser",
                    "Native"
                ],
                "type": "string",
                "example": "Native"
            },
            "Field-binUserSSPRtoken": {
                "description": "Hex Encoded Secret SSPR token",
                "type": "string",
                "example": "012345678901234567890123456789012345678901234567890123456789abcd"
            },
            "Field-pksCustomerCode": {
                "description": "The customer code assigned to your account",
                "maxLength": 6,
                "minLength": 2,
                "type": "string",
                "example": "demo"
            },
            "sspr-validateToken-v1-Request": {
                "description": "Request for the /1/module/sspr/validateToken API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "eUserTypeSSPR",
                    "binUserSSPRtoken"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sUserLoginname": {
                        "$ref": "#/components/schemas/Field-sUserLoginname",
                        "description": ""
                    },
                    "binUserSSPRtoken": {
                        "$ref": "#/components/schemas/Field-binUserSSPRtoken",
                        "description": ""
                    }
                }
            },
            "sspr-unlockAccountRequest-v1-Request": {
                "description": "Request for the /1/module/sspr/unlockAccountRequest API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "eUserTypeSSPR"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sUserLoginname": {
                        "$ref": "#/components/schemas/Field-sUserLoginname",
                        "description": ""
                    }
                }
            },
            "sspr-unlockAccount-v1-Request": {
                "description": "Request for the /1/module/sspr/unlockAccount API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "eUserTypeSSPR",
                    "binUserSSPRtoken"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sUserLoginname": {
                        "$ref": "#/components/schemas/Field-sUserLoginname",
                        "description": ""
                    },
                    "binUserSSPRtoken": {
                        "$ref": "#/components/schemas/Field-binUserSSPRtoken",
                        "description": ""
                    }
                }
            },
            "sspr-sendUsernames-v1-Request": {
                "description": "Request for the /1/module/sspr/sendUsernames API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "sEmailAddress",
                    "eUserTypeSSPR"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    }
                }
            },
            "sspr-resetPasswordRequest-v1-Request": {
                "description": "Request for the /1/module/sspr/resetPasswordRequest API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "eUserTypeSSPR"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sUserLoginname": {
                        "$ref": "#/components/schemas/Field-sUserLoginname",
                        "description": ""
                    }
                }
            },
            "sspr-resetPassword-v1-Request": {
                "description": "Request for the /1/module/sspr/resetPassword API Request",
                "required": [
                    "pksCustomerCode",
                    "fkiLanguageID",
                    "eUserTypeSSPR",
                    "binUserSSPRtoken",
                    "sPassword"
                ],
                "type": "object",
                "properties": {
                    "pksCustomerCode": {
                        "$ref": "#/components/schemas/Field-pksCustomerCode",
                        "description": ""
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Field-pkiLanguageID",
                        "description": ""
                    },
                    "eUserTypeSSPR": {
                        "$ref": "#/components/schemas/Field-eUserTypeSSPR",
                        "description": ""
                    },
                    "sEmailAddress": {
                        "$ref": "#/components/schemas/Field-sEmailAddress",
                        "description": ""
                    },
                    "sUserLoginname": {
                        "$ref": "#/components/schemas/Field-sUserLoginname",
                        "description": ""
                    },
                    "binUserSSPRtoken": {
                        "$ref": "#/components/schemas/Field-binUserSSPRtoken",
                        "description": ""
                    },
                    "sPassword": {
                        "$ref": "#/components/schemas/Field-sPassword",
                        "description": ""
                    }
                }
            },
            "Field-sPassword": {
                "description": "A Password.\n\nMust meet complexity requirements",
                "type": "string",
                "example": "Qwerty1234!"
            },
            "Field-pkiUserID": {
                "description": "The unique ID of the User",
                "type": "integer",
                "example": 70
            },
            "Field-pkiLanguageID": {
                "description": "The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|",
                "maximum": 2,
                "minimum": 1,
                "type": "integer",
                "example": 2
            },
            "Field-pkiEzsigndocumentID": {
                "description": "The unique ID of the Ezsigntemplate",
                "type": "integer",
                "example": 97
            },
            "Field-pkiEzsignfoldertypeID": {
                "description": "The unique ID of the Ezsignfoldertype.\r\n\r\nThis value can be queried by the API and is also visible in the admin interface.\r\n\r\nThere are two types of Ezsignfoldertype. **User** and **Shared**. **User** can only be seen by the user who created the folder or its assistants. Access to **Shared** folders are configurable for access and email delivery. You should typically choose a **Shared** type here.",
                "type": "integer",
                "example": 5
            },
            "Field-pkiEzsigntsarequirementID": {
                "description": "The unique ID of the Ezsigntsarequirement.\n\nDetermine if a Time Stamping Authority should add a timestamp on each of the signature.\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|\n|2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|\n|3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|",
                "maximum": 3,
                "minimum": 1,
                "type": "integer",
                "example": 92
            },
            "Field-pkiEzsigntemplateID": {
                "description": "The unique ID of the Ezsigndocument",
                "type": "integer",
                "example": 36
            },
            "Field-pkiEzsignfoldersignerassociationID": {
                "description": "The unique ID of the Ezsignfoldersignerassociation",
                "type": "integer",
                "example": 20
            },
            "Field-pkiFranchisebrokerID": {
                "description": "The unique ID of the Franchisebroker",
                "type": "integer",
                "example": 61
            },
            "Field-pkiFranchisereferalincomeprogramID": {
                "description": "The unique ID of the Franchisereferalincomeprogram",
                "type": "integer",
                "example": 51
            },
            "Field-pkiPeriodID": {
                "description": "The unique ID of the Period",
                "type": "integer",
                "example": 21
            },
            "Field-pkiFranchiseofficeID": {
                "description": "The unique ID of the Franchisereoffice",
                "type": "integer",
                "example": 50
            },
            "Field-pkiAddresstypeID": {
                "description": "The unique ID of the Addresstype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Real Estate Invoice|\n|4|Invoicing|\n|5|Shipping|",
                "type": "integer",
                "example": 1
            },
            "Field-pkiProvinceID": {
                "description": "The unique ID of the Province.\n\nHere are some common values (Complete list must be retrieved from API):\n\n|Value|Description|\n|-|-|\n|1|(Canada) Alberta\n|2|(Canada) British Columbia|\n|3|(Canada) Manitoba|\n|3|(Canada) Manitoba|\n|4|(Canada) New Brunswick|\n|5|(Canada) Newfoundland|\n|6|(Canada) Northwest Territories|\n|7|(Canada) Nova Scotia|\n|8|(Canada) Nunavut|\n|9|(Canada) Ontario|\n|10|(Canada) Prince Edward Island|\n|11|(Canada) Quebec|\n|12|(Canada) Saskatchewan|\n|13|(Canada) Yukon|\n|14|(United-States) Alabama|\n|15|(United-States) Alaska|\n|16|(United-States) Arizona|\n|17|(United-States) Arkansas|\n|18|(United-States) California|\n|19|(United-States) Colorado|\n|20|(United-States) Connecticut|\n|21|(United-States) Delaware|\n|22|(United-States) District of Columbia|\n|23|(United-States) Florida|\n|24|(United-States) Georgia|\n|25|(United-States) Hawaii|\n|26|(United-States) Idaho|\n|27|(United-States) Illinois|\n|28|(United-States) Indiana|\n|29|(United-States) Iowa|\n|30|(United-States) Kansas|\n|31|(United-States) Kentucky|\n|32|(United-States) Louisiane|\n|33|(United-States) Maine|\n|34|(United-States) Maryland|\n|35|(United-States) Massachusetts|\n|36|(United-States) Michigan|\n|37|(United-States) Minnesota|\n|38|(United-States) Mississippi|\n|39|(United-States) Missouri|\n|40|(United-States) Montana|\n|41|(United-States) Nebraska|\n|42|(United-States) Nevada|\n|43|(United-States) New Hampshire|\n|44|(United-States) New Jersey|\n|45|(United-States) New Mexico|\n|46|(United-States) New York|\n|47|(United-States) North Carolina|\n|48|(United-States) North Dakota|\n|49|(United-States) Ohio|\n|50|(United-States) Oklahoma|\n|51|(United-States) Oregon|\n|52|(United-States) Pennsylvania|\n|53|(United-States) Rhode Island|\n|54|(United-States) South Carolina|\n|55|(United-States) South Dakota|\n|56|(United-States) Tennessee|\n|57|(United-States) Texas|\n|58|(United-States) Utah|\n|60|(United-States) Vermont|\n|59|(United-States) Virginia|\n|61|(United-States) Washington|\n|62|(United-States) West Virginia|\n|63|(United-States) Wisconsin|\n|64|(United-States) Wyoming|",
                "type": "integer",
                "example": 11
            },
            "Field-pkiCountryID": {
                "description": "The unique ID of the Country.\n\nHere are some common values (Complete list must be retrieved from API):\n\n|Value|Description|\n|-|-|\n|1|Canada|\n|2|United-States|",
                "type": "integer",
                "example": 1
            },
            "Field-pkiContacttitleID": {
                "description": "The unique ID of the Contacttitle.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Ms.|\n|2|Mr.|\n|4|(Blank)|\n|5|Me (For Notaries)|",
                "type": "integer",
                "example": 2
            },
            "Field-pkiEmailtypeID": {
                "description": "The unique ID of the Emailtype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|",
                "type": "integer",
                "example": 1
            },
            "Field-pkiWebsitetypeID": {
                "description": "The unique ID of the Websitetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Website|\n|2|Twitter|\n|3|Facebook|\n|4|Survey|",
                "type": "integer",
                "example": 1
            },
            "Field-pkiApikeyID": {
                "description": "The unique ID of the Apikey",
                "type": "integer",
                "example": 99
            },
            "Field-pkiPhonetypeID": {
                "description": "The unique ID of the Phonetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Mobile|\n|4|Fax|\n|5|Pager|\n|6|Toll Free|",
                "type": "integer",
                "example": 1
            },
            "Field-pkiSecretquestionID": {
                "description": "The unique ID of the Secretquestion.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|The name of the hospital in which you were born|\n|2|The name of your grade school|\n|3|The last name of your favorite teacher|\n|4|Your favorite sports team|\n|5|Your favorite TV show|\n|6|Your favorite movie|\n|7|The name of the street on which you grew up|\n|8|The name of your first employer|\n|9|Your first car|\n|10|Your favorite food|\n|11|The name of your first pet|\n|12|Favorite musician/band|\n|13|What instrument you play|\n|14|Your father's middle name|\n|15|Your mother's maiden name|\n|16|Name of your eldest child|\n|17|Your spouse's middle name|\n|18|Favorite restaurant|\n|19|Childhood nickname|\n|20|Favorite vacation destination|\n|21|Your boat's name|\n|22|Date of Birth (YYYY-MM-DD)|",
                "type": "integer",
                "example": 7
            },
            "Field-pkiTaxassignmentID": {
                "description": "The unique ID of the Taxassignment.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No tax|\n|2|GST|\n|3|HST (ON)|\n|4|HST (NB)|\n|5|HST (NS)|\n|6|HST (NL)|\n|7|HST (PE)|\n|8|GST + QST (QC)|\n|9|GST + QST (QC) Non-Recoverable|\n|10|GST + PST (BC)|\n|11|GST + PST (SK)|\n|12|GST + RST (MB)|\n|13|GST + PST (BC) Non-Recoverable|\n|14|GST + PST (SK) Non-Recoverable|\n|15|GST + RST (MB) Non-Recoverable|",
                "maximum": 15,
                "minimum": 1,
                "type": "integer",
                "example": 1
            },
            "Field-pkiEzsignfolderID": {
                "description": "The unique ID of the Ezsignfolder",
                "type": "integer",
                "example": 33
            }
        },
        "responses": {
            "Response-Error-404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "The element you are trying to work on does not exist"
            },
            "Response-Error-422": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "The syntax of the request is valid but the request cannot be completed. Look for detail in body."
            },
            "Response-Error-403": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "You are not allowed to call this function"
            },
            "Response-Webhook-204": {
                "description": "The Webhook event notification was successfully received and processed by the receiving web server."
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "description": "",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Authorization": [
            ]
        }
    ],
    "tags": [
        {
            "name": "General_Introduction",
            "description": "We publish everything related to our API on github at this location: <a href=\"https://github.com/eZmaxinc\" target=\"_blank\">https://github.com/eZmaxinc</a>. You'll find git repos for the specification, documentation, SDKs and samples.\n\nDocumentation, SDKs and samples are provided in english only for easier maintenance, but we also have french speaking integrators that can help you out.\n\nMost of our SDKs provide language specific documentation, but you'll find more details on this page about the general use of the API. Both the SDK's specific document (if you choose to use a SDK) and this documentation can be used in complementarity.\n\nIf you find any mistake or omission in the documentation, please notify us. We'll quickly fix the issue.\n\n## Onboarding\nWe highly recommend to schedule an online meeting with your technical team and an eZmax integrator. During this meeting, we go through requirements, business logic, configuration, api key generation, and we go through the list of functions you might need to implement to achieve your goals. Make sure you take this opportunity to speed up your integration project.\n\nIf you need help understanding how to use this API, don't waste too much time searching in it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like to waste time in documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.\n\n## Open API\nWe highly believe in open standards and open source. We have adopted the Open API vision where all of the functionnalities of our applications are accessible with open source definition files. We use our own public API's to build our interfaces so you can do pretty much everything we can do. Open API has a rich toolset from editor, generators, mock servers, validators, etc. Learn more at <a href=\"https://www.openapis.org/\" target=\"_blank\">OpenAPI Initiative</a>\n\nIf you need  our Open API Spec file to use in your toolset, here is a direct link to it: <a href=\"https://raw.githubusercontent.com/eZmaxinc/eZmax-API/master/specs/ezmax.v1.0.json\" target=\"_blank\">ezmax.v1.0.json</a>\n\n## SDK\nWe provide SDKs for customers. They are generated using <a href=\"https://openapi-generator.tech/\" target=\"_blank\">OpenAPI Generator</a>, we encourage customers to use them as we also provide samples for them. You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like <a href=\"https://openapi-generator.tech/\" target=\"_blank\">OpenAPI Generator</a>, <a href=\"https://swagger.io/tools/swagger-codegen/\" target=\"_blank\">Swagger Codegen</a> or any commercial generators.\n\nWe try to make it as easy as possible for you to use our SDKs so we publish packages on NPM and Composer. If you don't find your favorite language supported or it we could make your like easier by automating package distribution, let us know !",
            "x-displayName": "Introduction"
        },
        {
            "name": "General_Security",
            "description": "## Authorization\n\nExcept for a few functions that do not require authorization, most of the functions require an API key that is sent in the request headers. The header name is \"Authorization\". \n\nThere are 4 types of API Key that can be used to make requests to the API.\n\n1. **API type key** which is static and not session based. It can be generated from the admin console. This is the most common type of authentication for \"server to server\" kind of integration. Never use this in a web based (client) application as the key could be leaked. This type of key begins with the letter **A**.\n\n2. **Delegated type key** which has an expiration time. It is commonly used in mobile or web application where you cannot use an **API type key** that could be leaked. The application would query a server part that will generate a **Delegated type key** using an **API type key**. The **Delegated type key** could now be used by the mobile or web page application without leaking the **API type key**. This type of key begins with the letter **D**.\n\n3. **User type key** which are session based and can be retrieved after a successful authentication. This type of key is reserved to specific situations where the other types of key are not desirable. This type of key begins with the letter **U**.\n\n4. **Special type key** which are for special cases where other types of keys cannot be used. This type of key is reserved to specific situations. This type of key begins with the letter **S**.\n\n## IP restriction\n\nEach API key can be restricted to specific IP addresse(s). This is an optional but recommended security feature you should put in place if all your requests will be coming from a specific range. You can configure the allowed ranges from the eZmax administration console.\n\n## Permissions\n\nEach API Key can be configured to have specific permission(s) so we highly recommend to use the \"Least privileges\" principle. For example, instead of allowing all permissions to an API Key, you should perhaps create an API Keys each for each of your application having just the specific permissions needed. You can configure the API Key's permission in eZmax's administration console.\n\n## Request Signing\n\nRequest Signing is a process of signing the request with a **Secret** that is not transmitted over the Wire. The signing process improves security in case your API Key is leaked or during a MITM attack (Man in the Middle). It will also prevent request manipulation or replay attack. Since all requests must use **https** these kinds of attacks are hard to conduct but sometimes customers might not be aware their underlying library does not verify SSL Certs validity or that their application can disclose their API key if it's not well secured. It takes a bit of effort to sign requests but it's highly recommended to do so.\n\nMandatory requirements of signing varies by used key type. For **API** type keys (most common type), you can configure if signing is mandatory or not in eZmax's administration console. **Delegated**, **User** and **Special** type keys must sign requests otherwise requests will fail.\n\n### How to sign a request\n\nTo apply a signature to your request you will need to send 3 additional HTTP Headers to the request:\n- Ezmax-Date\n- Ezmax-Fingerprint\n- Ezmax-Signature\n\n### Ezmax-Date\n\n**Ezmax-Date** Is the date/time when you send the request. It needs to be a <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> formatted date/time. It's a format that supports timezones so you can either use your local timezone of GMT. Be aware certain implementation adds milliseconds to the formatted date which won't be accepted by the API (ex: Javascript's toISOString function).\n\nThere is a tolerance of ±5 minutes clock skew between the date/time you specify and the server's time so make sure your time is correct. Usage of a NTP server is recommended. Compute the date/time as close as possible to the actual sending of the request. For example, don't set the current time at the beginning of a long running script that sends 50 requests to the server with the same time/date as you might receive errors related to clock skew.\n\nExamples:\n- 2000-12-31T23:59:59Z\n- 2000-12-31T23:59:59-05:00\n\n### Ezmax-Fingerprint\n\n**Ezmax-Fingerprint** Is a fingerprint (aka hash) representing the request you are sending. Any alteration in any part of the request would produce a different fingerprint. The hash is computed using <a href=\"https://en.wikipedia.org/wiki/SHA-2\" target=\"_blank\">SHA256</a>. Most programming languages offer an implementation of SHA256. To make sure your implementation is producing expected values, try to hash the value \"foo\", it should produce the value \"2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae\".\n\nTo compute the Fingerprint, you'll need to concatenate the **Method**, the **URL**, the **Body**, the **API Key** and the **Date**. All these values will need to be separated by a line Feed caracter (\\n). Make sure your **Method** is Uppercase (Shoud be \"GET\", not \"Get\" or \"get\"). Make sure your URL Scheme and Host or the **URL** are lowercase (Should be \"https://www.example.com\", not \"HTTPS://WWW.EXAMPLE.COM\"). Also make sure the the URI part of the **URL** is properly URL encoded (Should be \"/Path%20with%20Spaces/?Key=Value%20with%20Spaces\", not \"/Path with Spaces/?Key=Value with Spaces\". If the **Body** is empty (ex: GET request don't have a body), use an empty string.\n\nOnce the SHA256 hash is computed, prefix it with \"v1=\" which is future proofing version identifier.\n\nHere is an example implementation in PHP:\n\n    public static function getFingerprintV1 ($sAuthorization, $dtDate, $sMethod, $sURL, $sBody = '') {\n        $sContentToHash = \"$sMethod\\n$sURL\\n$sBody\\n$sAuthorization\\n$dtDate\";\n        return 'v1='.hash('sha256', $sContentToHash);\n    }\n\nHere are two examples of what a GET and POST requests Fingerprints could look like. You can validate if your algorithm work by using these sample values and comparing them to the expected values. In the example below the litteral \"\\n\" should be replaced with a linefeed character.\n\n    GET\\n\n    https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent\\n\n    \\n\n    ThisIsMyAuthorizationKey\\n\n    2000-12-31T23:59:59Z\nExpected result for **Ezmax-Fingerprint** (GET): v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n\n    POST\\n\n    https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames\\n\n    {\"pksCustomerCode\": \"demo\",\"fkiLanguageID\": \"2\",\"eUserTypeSSPR\": \"Native\",\"sEmailAddress\": \"example@domain.com\"}\\n\n    ThisIsMyAuthorizationKey\\n\n    2000-12-31T23:59:59Z\nExpected result for **Ezmax-Fingerprint** (POST): v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n\n### Ezmax-Signature\n\n**Ezmax-Signature** Is the actual signature proving the request was generated by the key owner using its secret. The signature is computed using <a href=\"https://en.wikipedia.org/wiki/HMAC\" target=\"_blank\">HMAC</a> and <a href=\"https://en.wikipedia.org/wiki/SHA-2\" target=\"_blank\">SHA512/256</a>. Don't confuse **SHA256**, **SHA512** and **SHA512/256**, these are 3 distinct algorithms. Most programming languages offer an implementation of HMAC with SHA512/256. To make sure your implementation is producing expected values, try to hash the value \"foo\" with the key \"bar\", it should produce the value \"12af52e7e555f0813a143f49462423b0c37da6734ab1acb091c6069f010ce814\".\n\nTo compute the Signature, you'll need to concatenate the **Ezmax-Fingerprint**, the **API Key** and the **Ezmax-Date**. The 3 values are concatenated WITHOUT separators. Then calculate the HMAC using SHA512/256 using your **Secret** as the key.\n\nOnce the HMAC-SHA512/256 hash is computed, prefix it with \"v1=\" which is future proofing version identifier.\n\nHere is an example implementation in PHP:\n\n    public static function getSignatureV1 ($sAuthorization, $dtDate, $sFingerprint, $sSecret) {\n        $sContentToSign = \"$sFingerprint$sAuthorization$dtDate\";\n        return 'v1='.hash_hmac('sha512/256', $sContentToSign, $sSecret);\n    }\n\nHere are two examples of what the GET and POST requests Signature would be. You can validate if your algorithm work by using these sample values and comparing them to the expected values. For the below examples, we have used the same **API Key**, **Fingerprint** and **Date** as in the Fingerprint section above. The only new variable is the **Secret** which is \"ThisIsTheSecretAssociatedToTheAuthorizationKey\" for this example.\n\n    v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354aThisIsMyAuthorizationKey2000-12-31T23:59:59Z\nExpected result for **Ezmax-Signature** (GET): v1=3909792a7c950e8d2977fa389166c5cbd67807dada50a583cf83040894e717a4\n\n    v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702dedThisIsMyAuthorizationKey2000-12-31T23:59:59Z\nExpected result for **Ezmax-Signature** (POST): v1=62219af85fb56038bdd24666a775a88e05bfcd44ff59ac5d3f25d39e4d63b9ac\n\n### Wrapping up the examples\n\nThe whole process was detailed above but here is summary of what your http headers should look like to sign these example requests considering the following common variables:\n\n| Variable      | Example value                                  |\n| ------------- | ---------------------------------------------- |\n| Date          | 2000-12-31T23:59:59Z                           |\n| Authorization | ThisIsMyAuthorizationKey                       |\n| Secret        | ThisIsTheSecretAssociatedToTheAuthorizationKey |\n\nFor a GET request to https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent:\n\n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n    Ezmax-Fingerprint: v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n    Ezmax-Signature: v1=3909792a7c950e8d2977fa389166c5cbd67807dada50a583cf83040894e717a4\n\nFor a POST request to https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames with this body content = '{\"pksCustomerCode\": \"demo\",\"fkiLanguageID\": \"2\",\"eUserTypeSSPR\": \"Native\",\"sEmailAddress\": \"example@domain.com\"}' :\n\n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n    Ezmax-Fingerprint: v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n    Ezmax-Signature: v1=62219af85fb56038bdd24666a775a88e05bfcd44ff59ac5d3f25d39e4d63b9ac",
            "x-displayName": "Security"
        },
        {
            "name": "General_Servers",
            "description": "## Regional requests\nWhen you send your API requests, you'll need to send them in the proper region and proper environment where your customer data are stored. Based on your requirements (proximity and legislation), we will create your environment in one of our supported region's.\n\nThe general format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.appcluster01.**sInfrastructureregionCode}**.ezmax.com/rest/\n\nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" and \"**{sInfrastructureregionCode}**\" need to be replaced with one of the values in the table below.\n\nOur SDKs have a default value of \"prod\" and \"ca-central-1\". You will need to call \"setHost\" to change the default value if needed.\n\nNote: You should always use \"prod\" for the environment unless otherwise instructed by eZmax's support.\n\n| sInfrastructureenvironmenttypeDescription | Description       |\n| ----------------------------------------- | ----------------- |\n| prod                                      | Production        |\n| stg                                       | Staging           |\n| qa                                        | Quality Assurance |\n| dev                                       | Development       |\n\n| sInfrastructureregionCode | Description                |\n| ------------------------- | -------------------------- |\n| af-south-1\t            | Africa (Cape Town)         |\n| ap-east-1\t                | Asia Pacific (Hong Kong)   |\n| ap-northeast-1\t        | Asia Pacific (Tokyo)       |\n| ap-northeast-2\t        | Asia Pacific (Seoul)       |\n| ap-northeast-3\t        | Asia Pacific (Osaka-Local) |\n| ap-south-1\t            | Asia Pacific (Mumbai)      |\n| ap-southeast-1\t        | Asia Pacific (Singapore)   |\n| ap-southeast-2\t        | Asia Pacific (Sydney)      |\n| ca-central-1\t            | Canada (Central)           |\n| eu-central-1\t            | Europe (Frankfurt)         |\n| eu-north-1\t            | Europe (Stockholm)         |\n| eu-south-1\t            | Europe (Milan)             |\n| eu-west-1\t                | Europe (Ireland)           |\n| eu-west-2\t                | Europe (London)            |\n| eu-west-3\t                | Europe (Paris)             |\n| sa-east-1\t                | South America (São Paulo)  |\n| us-east-1\t                | US East (N. Virginia)      |\n| us-east-2\t                | US East (Ohio)             |\n| us-west-1\t                | US West (N. California)    |\n| us-west-2\t                | US West (Oregon)           |\n\n## Global requests\nSome of the functions needs to be called on the global infrastructure instead of the regional servers. These functions are all located in the **Global** section of the documentation.\n\nThe general format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.global.ezmax.com/\n\nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" needs to be replaced with one of the values in the table below.\n\nOur SDKs have a default value of \"prod\". You will need to call \"setHost\" to change the default value if needed.\n\nNote: You should always use \"prod\" for the environment unless otherwise instructed by eZmax's support.\n\n| sInfrastructureenvironmenttypeDescription | Description       |\n| ----------------------------------------- | ----------------- |\n| prod                                      | Production        |\n| stg                                       | Staging           |\n| qa                                        | Quality Assurance |\n| dev                                       | Development       |",
            "x-displayName": "Servers"
        },
        {
            "name": "General_StatusCodes",
            "description": "We use standard HTTP Status Codes to return details about completed function calls.\r\n\r\nYou should always validate the HTTP response's status code before trying to read the content of the body. Our SDKs do this automatically. In each of the documented function, we document only the function's specific return code to facilitate the reading of the documentation. Even if a generic return code is not documented at the function's level, it could be returned by the API.\r\n\r\n### Generic return codes (Documented at the function's level)\r\n| HTTP Status Code | Meaning              | Detail |\r\n| ---------------- | -------------------- | ------ |\r\n| 200              | OK                   | The request completed successfully and valid data was returned in the body |\r\n| 201              | Created              | The request completed successfully. Some elements were created and details about the created items was returned in the body |\r\n| 204              | No Content           | The request completed successfully. There was no need to return any data in the body |\r\n| 403              | Forbidden            | The request is not allowed to be executed. Look for detail about the error in the body |\r\n| 404              | Not Found            | The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body |\r\n| 422              | Unprocessable entity | The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body |\r\n\r\n### Generic return codes (Undocumented at the function's level)\r\n| HTTP Status Code | Meaning               | Detail |\r\n| ---------------- | --------------------- | ------ |\r\n| 400              | Bad Request           | The request does not meet specifications. For example: an invalid type for a variable, a value that does not pass validation or a protocol violation. Look for details about the error in the response's body |\r\n| 401              | Unauthorized          | The API Key is either not present, expired, invalid or inactive. It could also mean you are calling the API from an unauthorized IP address |\r\n| 403              | Forbidden             | The Provided API Key is valid, but it is not allowed to execute the request. Verify the Key's permissions |\r\n| 404              | Not Found             | Your request was sent to a URL that does not exist. Make sure you are calling the proper version number of the function and look for typos in the URL |\r\n| 405              | Method Not Allowed    | The URL is valid, but the Method is not allowed. For example, have you call a GET while the function expects a POST ? |\r\n| 429              | Too Many Requests     | Too many requests were received from your API Key/IP address. Make sure to optimize your requests or ask for a limit increase. For example, make a single request to create 100 objects instead of calling 100 requests each creating a single objet |\r\n| 500              | Internal Server Error | This should never happen. There is either a temporary problem that should resolve quickly or an error you should report to technical support. |\r\n| 503              | Service Unavailable   | This should never happen. There is either a temporary problem that should resolve quickly or an error you should report to technical support |\r\n\r\n### Custom return codes (Undocumented at the function's level)\r\nThese codes can only be generated for **User** type API Key. The **API**, **Delegated** and **Special** types keys will never return such codes. (See Authorization section for more information). Most users should not be concerned with these status codes.\r\n\r\n| HTTP Status Code | Meaning                          | Detail |\r\n| ---------------- | -------------------------------- | ------ |\r\n| 351              | Phone Validation required        | (2FA) User needs to complete a Voice Call or SMS challenge           |\r\n| 352              | Question Validation required     | (2FA) User needs to complete a question/answer challenge             |\r\n| 353              | Clause Acceptance required       | User need to accept electronic signature terms and conditions        |\r\n| 354              | Computer Validation required     | User's computer is not authorized                                    |\r\n| 355              | Password Change required         | User must change it's password                                       |\r\n| 356              | Native Application Version Check | The user is not running the latest version of the native application |\r\n\r\n### Webhook delivery successful code\r\nThese codes will be considered as a succesful delivery when they are returned by your webpage during a Webhook delivery.\r\n\r\n| HTTP Status Code | Meaning              | Detail |\r\n| ---------------- | -------------------- | ------ |\r\n| 202              | Accepted             | The request has been received but not yet acted upon. It is intended for cases where another process or server handles the request, or for batch processing. |\r\n| 204              | No Content           | The request completed successfully. There was no need to return any data in the body |\r\n",
            "x-displayName": "Status Codes"
        },
        {
            "name": "General_Webhooks",
            "description": "## Concept\nA Webhook (also called a web callback or HTTP push API) is a way for your application to be notified of an event in real time.\n\nFor example, if you send a contract for signing and need to be notified as soon as it get signed.\n\nYou could program a loop to query the document status every 5 minutes for many days until you receive a response saying the document is signed. This is a bad approach as it will waste a lot of resources everytime you make a call to the API for no reason.\n\nA better approach would be to configure a webhook in the eZmax's administration console to watch for a specific event. In this exemple, the event to monitor is \"DocumentCompleted\" from the module \"Ezsign\". This way, as soon as the document gets signed, a request will be made to YOUR server to let you know about the event that just happened.\n\nWhen you configure eZmax to notify you of events, you must provide your server's URL and a fallback email address. The URL provided must use HTTPS for security reasons.\n\n### Types of Webhook:\nLook for purple indicators with the word \"EVENT\" throughout the documentation to see currently available Webhooks events you can subscribe to. If you have a need for an event that is not available, please send a feature request to technical support.\n\n### Important:\n- The event will be delivered using a POST request.\n- Your server will need to reply with a HTTP Status Code 202 or 204 to let eZmax know you've accepted the message and we shall not try to deliver the message again. If the server does not respond with a 202 or 204 Code, the message will be sent over and over until all tries are exhausted.\n- The 202 or 204 response must be returned in less than 30 seconds otherwise a timeout will occur and the event will be retried following the retry schedule.\n- Make sure to secure your Webhook receiving URL to make sure someone does not send forged messages to your application. You can do this by providing a secure token in your URL, for example \"?token=mysecuretoken1234\", or by validating the webhook message's signature.\n\n### Testing\nIn eZmax's administration module, you'll find a \"Test\" button that you can use as many time as you need to test your server code easily with a sample event.\n\n## Retries\neZmax will attempt to deliver the event to your server instantly but will retry many times if your server does not respond successfully for some reason (see schedule below). After all attempts are exhausted, the event will be forwarded to the configured fallback email in the same format as the webhook. The email body will contain the JSON request in the same format as the webhook. This way, you'll be able to send the request to your server using <a href=\"https://www.postman.com/\" target=\"_blank\">Postman</a>, <a href=\"https://curl.se/\" target=\"_blank\">Curl</a> or similar tool.\n\n### Retry Delivery schedule\nThis is the approximate retry schedule. Since there is a 30 seconds timeout on each try, there could be a cumulative overhead up to 3½ minutes.\n\n| Minutes after previous step | Minutes after event | Method |\n| :-------------------------: | :-----------------: | ------ |\n| N/A                         | 0                   | HTTPS  |\n| 1                           | 1                   | HTTPS  |\n| 5                           | 6                   | HTTPS  |\n| 15                          | 21                  | HTTPS  |\n| 15                          | 36                  | HTTPS  |\n| 15                          | 51                  | HTTPS  |\n| 15                          | 66                  | HTTPS  |\n| 0                           | 66                  | Email  |\n\n### Failed attempt reporting\nIf you don't receive the event on the first attempt, there will be debugging information about each previous attempt in the body of the event. You'll be able to see the timestamp of each previous attempt and the return code returned by your server or a timeout indication if your server hasn't replied.\n",
            "x-displayName": "Webhooks"
        },
        {
            "name": "General_Changelog",
            "description": "All notable changes to this project will be documented in this section.\n\nVersion numbers are using **MAJOR**.**MINOR**.**PATCH** numbering format for example 1.2.23\n\n**MAJOR** will be incremented only if there is an incompatible breaking change. New distinct documentation and specification files will be published.\n\n**MINOR** will be incremented only if a function becomes deprecated or deleted (after being deprecated in a previous version)\n\n**PATCH** will be incremented everytime changes and additions are released.\n\nYou can always safely update to newer **PATCH** version if you stay in the same **MAJOR**.**MINOR** prefix.\n\nYou can safely update to a newer **MINOR** version as long as you don't jump more than a version at a time. For example, let say there is a function named \"foo\" in version 1.0.23. We might deprecate this function in version 1.1.1 but you can continue using it. We might decide to remove it in version 1.2.1 so then you would have a breaking change if you try to update to version 1.2.1 without having fixed the issue with your deprecated \"foo\" function.\n\nFor each version, there will be the list of changes:\n* **Added** for new features.\n* **Changed** for changes in existing functionality.\n* **Deprecated** for soon-to-be removed features.\n* **Removed** for now removed features.\n* **Fixed** for any bug fixes.\n* **Security** in case of vulnerabilities.\n\n## 1.0.X Releases\n### [1.0.38] - 2021-03-22\n#### Fixed\n- (CsharpSDK) Hyphens in Class Name\n\n- \n### [1.0.37] - 2021-03-18\n#### Added\n- (AxiosSDK) Published to NPM\n\n#### Changed\n- (AxiosSDK) Minor changes\n\n### [1.0.33] - 2021-03-14\n#### Added\n- (PHPSDK) Automatic request signing\n- (PHPSDK) Secret handling in configuration class\n- (AxiosSDK) Automatic request signing\n- (AxiosSDK) Secret handling in configuration class\n\n#### Fixed\n- Extra slash in /1/module/sspr/resetPasswordRequest\n\n### [1.0.32] - 2021-03-05\n#### Added\n- POST /1/module/sspr/validateToken\n- Webhooks successful codes in Status Codes documentation section\n- fkiUserID in the response of Activesession getCurrent\n- fkiApikeyID in the response of Activesession getCurrent\n\n#### Changed\n- Webhooks now consider an HTTP Code of 202 to be a successful delivery\n- Minor changes\n\n#### Removed\n- sEzsigndocumentFilename in the request of Create Ezsigndocument\n- sEzsigndocumentFilename in the response of Create Ezsigndocument\n\n### [1.0.31] - 2021-02-28\n#### Added\n- Changelog section in documentation\n- Special type Authorization key\n- Security section in documentation\n- Request Signing section in documentation\n- POST /1/module/sspr/unlockAccountRequest\n- POST /1/module/sspr/unlockAccount\n- POST /1/module/sspr/resetPasswordRequest\n- POST /1/module/sspr/resetPassword\n- POST /1/module/sspr/validateToken\n\n#### Changed\n- Authorization section moved under security section in documentation\n\n#### Removed \n- PUT /1/object/ezsigndocument/{pkiEzsigndocumentID} that was documented but unimplemented\n- PUT /1/object/ezsignfolder/{pkiEzsignfolderID} that was documented but unimplemented\n- PUT /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID} that was documented but unimplemented\n- PUT /1/object/ezsignsignature/{pkiEzsignsignatureID} that was documented but unimplemented\n\n### [1.0.30] - 2021-02-12\n#### Added\n- Added global endpoint in servers list\n- POST /1/module/sspr/sendUsernames\n- Introduction section in documentation\n- Servers section in documentation\n- Authorization section in documentation\n- Status Codes section in documentation\n- Webhooks section in documentation\n\n### [1.0.29] - 2021-02-10\n#### Added\n- GET /1/customer/{pksCustomerCode}/endpoint\n\n### [1.0.28] - 2021-02-04\n#### Changed\n- Minor changes\n\n### [1.0.27] - 2021-02-03\n#### Changed\n- Minor changes\n\n### [1.0.26] - 2021-01-08\n#### Added\n- Added Audit objets to some responses\n\n### [1.0.25] - 2021-01-08\n#### Changed\n- Minor changes\n\n### [1.0.24] - 2021-01-07\n#### Added\n- POST /1/object/apikey\n\n### [1.0.23] - 2020-12-21\n#### Changed\n- Minor changes\n\n### [1.0.22] - 2020-12-21\n#### Changed\n- Minor changes\n\n### [1.0.21] - 2020-12-21\n#### Added\n- WEBHOOK User-UserCreated\n\n### [1.0.20] - 2020-12-17\n#### Added\n- POST /1/module/user/createezsignuser\n- POST /1/object/ezsigndocument/{pkiEzsigndocumentID}/applyezsigntemplate\n\n#### Changed\n- Reorganized Documentation Categories\n\n### [1.0.19] - 2020-12-01\n#### Changed\n- Minor changes\n\n### [1.0.18] - 2020-10-14\n#### Changed\n- Minor changes\n\n### [1.0.17] - 2020-09-30\n#### Changed\n- Minor changes\n\n### [1.0.16] - 2020-09-29\n#### Added\n- GET /1/object/franchisebroker/getAutocomplete/{sSelector}\n\n### [1.0.15] - 2020-09-28\n#### Removed \n- GET /1/object/period/getAutocomplete\n\n#### Added\n- GET /1/object/period/getAutocomplete/{sSelector}\n\n### [1.0.14] - 2020-09-28\n#### Added\n- GET /1/object/period/getAutocomplete\n\n### [1.0.13] - 2020-09-08\n#### Changed\n- Minor changes\n\n### [1.0.12] - 2020-09-08\n#### Changed\n- Minor changes\n\n### [1.0.11] - 2020-09-04\n#### Added\n- POST /1/object/franchisereferalincome/\n\n### [1.0.10] - 2020-08-11\n#### Changed\n- Minor changes\n\n### [1.0.9] - 2020-08-06\n#### Added\n- GET /1/object/ezsigndocument/{pkiEzsigndocumentID}/getDownloadUrl/{eDocumentType}\n- GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getInPersonLoginUrl\n\n### [1.0.8] - 2020-08-04\n#### Changed\n- Minor changes\n\n### [1.0.7] - 2020-07-29\n#### Changed\n- Minor changes\n\n### [1.0.6] - 2020-07-29\n#### Changed\n- Minor changes\n\n### [1.0.5] - 2020-07-29\n#### Added\n- WEBHOOK Ezsign-DocumentCompleted\n- WEBHOOK Ezsign-FolderCompleted\n\n### [1.0.4] - 2020-07-09\n#### Added\n- POST /1/object/ezsignsignature\n- GET /1/object/ezsignsignature/{pkiEzsignsignatureID}\n- DELETE /1/object/ezsignsignature/{pkiEzsignsignatureID}\n- GET /1/object/ezsignsignature/{pkiEzsignsignatureID}/getChildren\n\n### [1.0.3] - 2020-07-08\n#### Changed\n- Documentation improvement\n\n### [1.0.2] - 2020-07-26\n#### Added\n- GET /1/object/activesession/getCurrent\n- POST /1/object/ezsignfoldersignerassociation\n- GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}\n- DELETE /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}\n- GET /1/object/ezsignfoldersignerassociation/{pkiEzsignfoldersignerassociationID}/getChildren\n- POST /1/object/ezsignfolder/{pkiEzsignfolderID}/send\n\n### [1.0.1] - 2020-06-26\n#### Changed\n- Minor changes\n\n### [1.0.0] - 2020-06-26\n#### Added\n- Initial Release\n",
            "x-displayName": "Changelog"
        },
        {
            "name": "Global_Customer",
            "description": "Customer contains details about the customer code assigned to your account",
            "x-displayName": "Customer"
        },
        {
            "name": "Module_Sspr",
            "description": "Sspr module contains actions related to the Self Service Password Reset portal.\n\nThere is an option in the admin interface to disable the portal if you don't want your users to be able to reset their own password.",
            "x-displayName": "Sspr"
        },
        {
            "name": "Module_User",
            "description": "User module contains actions that can be called to interract with users",
            "x-displayName": "User"
        },
        {
            "name": "Object_Activesession",
            "description": "Activesession contains detail about the currently executing api request.",
            "x-displayName": "Activesession"
        },
        {
            "name": "Object_Apikey",
            "description": "Apikey contains detail about an api key used to access the API",
            "x-displayName": "Apikey"
        },
        {
            "name": "Object_Ezsigndocument",
            "description": "Ezsigndocument contains detail about a document to sign",
            "x-displayName": "Ezsigndocument"
        },
        {
            "name": "Object_Ezsignfolder",
            "description": "Ezsignfolder contains detail about the container containing signers, documents to sign, etc. Sometimes referred as \"Envelopes\" in competitor products",
            "x-displayName": "Ezsignfolder"
        },
        {
            "name": "Object_Ezsignfoldersignerassociation",
            "description": "Ezsignfoldersignerassociation contains detail about the signers that will be invited to sign the documents. Signers can be users from the system or persons outside of the system.",
            "x-displayName": "Ezsignfoldersignerassociation"
        },
        {
            "name": "Object_Ezsignsignature",
            "description": "Ezsignsignature contains detail about a specific signature block on a page of a Ezsigndocument",
            "x-displayName": "Ezsignsignature"
        },
        {
            "name": "Object_Franchisebroker",
            "description": "Franchisebroker contains detail about a brokerage in the franchise administration module",
            "x-displayName": "Franchisebroker"
        },
        {
            "name": "Object_Franchiseoffice",
            "description": "Franchiseoffice contains detail about a brokerage's office in the franchise administration module",
            "x-displayName": "Franchiseoffice"
        },
        {
            "name": "Object_Franchisereferalincome",
            "description": "Franchisereferalincome contains detail about a referal income in the franchise administration module",
            "x-displayName": "Franchisereferalincome"
        },
        {
            "name": "Object_Period",
            "description": "Period contains detail about accounting periods",
            "x-displayName": "Period"
        },
        {
            "name": "Object_User",
            "description": "User contains detail about the users in the system",
            "x-displayName": "User"
        }
    ],
    "x-webhooks": {
        "Webhook-Ezsign-DocumentCompleted": {
            "post": {
                "summary": "Webhook Document Completed",
                "description": "This Webhook will be called when the last signature on an Ezsigndocument is made.",
                "operationId": "Webhook_Ezsign_DocumentCompleted",
                "tags": [
                    "Object_Ezsigndocument"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook-Ezsign-DocumentCompleted"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/Response-Webhook-204"
                    }
                }
            }
        },
        "Webhook-Ezsign-FolderCompleted": {
            "post": {
                "summary": "Webhook Folder Completed",
                "description": "This Webhook will be called when the last signature on the last Ezsigndocument from the folder is made.",
                "operationId": "Webhook_Ezsign_FolderCompleted",
                "tags": [
                    "Object_Ezsignfolder"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook-Ezsign-FolderCompleted"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/Response-Webhook-204"
                    }
                }
            }
        },
        "Webhook-User-UserCreated": {
            "post": {
                "summary": "Webhook User Created",
                "description": "This Webhook will be called when a user is created in the system.",
                "operationId": "Webhook_User_UserCreated",
                "tags": [
                    "Object_User"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Webhook-User-UserCreated"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/Response-Webhook-204"
                    }
                }
            }
        }
    },
    "x-tagGroups": [
        {
            "name": "General",
            "tags": [
                "General_Introduction",
                "General_Servers",
                "General_Security",
                "General_StatusCodes",
                "General_Webhooks",
                "General_Changelog"
            ]
        },
        {
            "name": "Global",
            "tags": [
                "Global_Customer"
            ]
        },
        {
            "name": "Module",
            "tags": [
                "Module_Sspr",
                "Module_User"
            ]
        },
        {
            "name": "Object",
            "tags": [
                "Object_Activesession",
                "Object_Apikey",
                "Object_Ezsigndocument",
                "Object_Ezsignfolder",
                "Object_Ezsignfoldersignerassociation",
                "Object_Ezsignsignature",
                "Object_Franchisebroker",
                "Object_Franchiseoffice",
                "Object_Franchisereferalincome",
                "Object_Period",
                "Object_User"
            ]
        },
        {
            "name": "Report",
            "tags": [
            ]
        }
    ]
}