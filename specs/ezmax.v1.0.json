{
    "openapi": "3.0.3",
    "info": {
        "title": "eZmax API Definition",
        "version": "1.0.0",
        "description": "This API expose all the functionnalities for the eZmax and eZsign application.\n\nWe provide SDKs for customers. They are generated using OpenAPI codegen, we encourage customers to use them as we also provide samples for them.\n\nYou can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like Swagger Codegen, OpenAPI codegen or any commercial generators.\n\nIf you need helping understanding how to use this API, don't waste too much time looging for it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like bad documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.",
        "termsOfService": "https://www.ezmax.ca/TODO",
        "contact": {
            "name": "API Support department",
            "url": "https://www.ezmax.ca/en/contact",
            "email": "support-api@ezmax.ca"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "x-logo": {
            "url": "https://github.com/eZmaxinc/eZmax-API/raw/master/docs/resources/images/logo.png",
            "backgroundColor": "#fafafa",
            "altText": "eZmax Logo"
        },
        "x-restgeninfo": {

        }
    },
    "servers": [
        {
            "url": "https://{sInfrastructureenvironmenttypeDescription}.api.appcluster01.{sInfrastructureregionCode}.ezmax.com/rest",
            "description": "The server endpoint where to send your API requests.",
            "variables": {
                "sInfrastructureenvironmenttypeDescription": {
                    "enum": [
                        "prod",
                        "stg",
                        "qa",
                        "dev"
                    ],
                    "default": "prod",
                    "description": "The environment on on which to call the API. Should always be \"prod\" unless instructed otherwise by support."
                },
                "sInfrastructureregionCode": {
                    "enum": [
                        "ca-central-1",
                        "local"
                    ],
                    "default": "ca-central-1",
                    "description": "The region where your services are hosted."
                }
            }
        }
    ],
    "paths": {
        "/1/object/ezsigndocument": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "operationId": "Ezsigndocument_CreateObject_V1",
                "summary": "Create a new Ezsigndocument",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetObject_V1",
                "summary": "Retrieve an existing Ezsigndocument",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsigndocument-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_EditObject_V1",
                "summary": "Modify an existing Ezsigndocument"
            },
            "delete": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsigndocument-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_DeleteObject_V1",
                "summary": "Delete an existing Ezsigndocument"
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsigndocument/{pkiEzsigndocumentID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsigndocument"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsigndocument_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsigndocument's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsigndocumentID",
                    "description": "The unique ID of the Ezsigndocument",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder": {
            "description": "",
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Request"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    }
                },
                "operationId": "Ezsignfolder_CreateObject_V1",
                "summary": "Create a new Ezsignfolder",
                "description": "The endpoint allows to create one or many elements at once.\n\nThe array can contain simple (Just the object) or compound (The object and its child) objects.\n\nCreating compound elements allows to reduce the multiple requests to create all child objects."
            }
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}": {
            "description": "",
            "get": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetObject_V1",
                "summary": "Retrieve an existing Ezsignfolder",
                "description": ""
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ezsignfolder-editObject-v1-Request"
                            }
                        }
                    },
                    "required": true
                },
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-editObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_EditObject_V1",
                "summary": "Modify an existing Ezsignfolder"
            },
            "delete": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ezsignfolder-deleteObject-v1-Response"
                                }
                            }
                        },
                        "description": "Successful response"
                    },
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_DeleteObject_V1",
                "summary": "Delete an existing Ezsignfolder"
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/ezsignfolder/{pkiEzsignfolderID}/getChildren": {
            "get": {
                "tags": [
                    "Ezsignfolder"
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/Response-Error-404"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Ezsignfolder_GetObject_GetChildren_V1",
                "summary": "Retrieve an existing Ezsignfolder's children IDs",
                "description": ""
            },
            "parameters": [
                {
                    "name": "pkiEzsignfolderID",
                    "description": "The unique ID of the Ezsignfolder",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/1/object/activesession/getCurrent": {
            "description": "",
            "get": {
                "tags": [
                    "Activesession"
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/activesession-getCurrent-v1-Response"
                                }
                            }
                        },
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "Authorization": [
                        ]
                    }
                ],
                "operationId": "Activesession_GetCurrent_V1",
                "summary": "Get Current Activesession",
                "description": "Retrieve the details about the current activesession"
            }
        }
    },
    "components": {
        "schemas": {
            "activesession-getCurrent-v1-Response-mPayload": {
                "description": "Payload for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "a_Permissions",
                    "a_RegisteredModules",
                    "eActivesessionSessiontype",
                    "fkiLanguageID",
                    "sCompanyNameX",
                    "sCustomerCode",
                    "sDepartmentNameX"
                ],
                "type": "object",
                "properties": {
                    "sCustomerCode": {
                        "description": "The customer code specific to the client in which the API request is being made",
                        "type": "string"
                    },
                    "eActivesessionSessiontype": {
                        "description": "The type of session used for the API request call",
                        "enum": [
                            "Normal"
                        ],
                        "type": "string"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Shared-fkiLanguageID"
                    },
                    "sCompanyNameX": {
                        "description": "The name of the active Company in the current language",
                        "type": "string"
                    },
                    "sDepartmentNameX": {
                        "description": "The name of the active Department in the current language",
                        "type": "string"
                    },
                    "a_RegisteredModules": {
                        "description": "An Array of Registered modules.\n\nThese are the modules that are Licensed to be used by the User or the API Key.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "a_Permissions": {
                        "description": "An array of permissions granted to the user or api key",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "ezsigndocument-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/editObject API Request",
                "required": [
                    "a_pkiEzsigndocumentID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsigndocumentID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsigndocumentID": [
                        95,
                        96
                    ]
                }
            },
            "ezsigndocument-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsigndocument/getObject API Request",
                "type": "object"
            },
            "ezsigndocument-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsigndocument-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsigndocument-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsigndocument-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsigndocument/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsigndocument-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsigndocumentCompound-Request": {
                "description": "An Ezsigndocument Object and children to create a complete structure",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsigndocument-Request"
                    }
                ],
                "example": {
                    "sEzsignDocumentName": "Important contract",
                    "sEzsignDocumentFilename": "Important Contract.pdf",
                    "fkiLanguageID": 2,
                    "eEzsigndocumentSource": "Base64",
                    "eEzsigndocumentFormat": "Pdf",
                    "sEzsigndocumentBase64": "JVBERi0xLjENCiXCpcKxw6sNCg0KMSAwIG9iag0KICA8PCAvVHlwZSAvQ2F0YWxvZw0KICAgICAvUGFnZXMgMiAwIFINCiAgPj4NCmVuZG9iag0KDQoyIDAgb2JqDQogIDw8IC9UeXBlIC9QYWdlcw0KICAgICAvS2lkcyBbMyAwIFJdDQogICAgIC9Db3VudCAxDQogICAgIC9NZWRpYUJveCBbMCAwIDMwMCAxNDRdDQogID4+DQplbmRvYmoNCg0KMyAwIG9iag0KICA8PCAgL1R5cGUgL1BhZ2UNCiAgICAgIC9QYXJlbnQgMiAwIFINCiAgICAgIC9SZXNvdXJjZXMNCiAgICAgICA8PCAvRm9udA0KICAgICAgICAgICA8PCAvRjENCiAgICAgICAgICAgICAgIDw8IC9UeXBlIC9Gb250DQogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTENCiAgICAgICAgICAgICAgICAgIC9CYXNlRm9udCAvVGltZXMtUm9tYW4NCiAgICAgICAgICAgICAgID4+DQogICAgICAgICAgID4+DQogICAgICAgPj4NCiAgICAgIC9Db250ZW50cyA0IDAgUg0KICA+Pg0KZW5kb2JqDQoNCjQgMCBvYmoNCiAgPDwgL0xlbmd0aCA1NSA+Pg0Kc3RyZWFtDQogIEJUDQogICAgL0YxIDE4IFRmDQogICAgMCAwIFRkDQogICAgKEhlbGxvIFdvcmxkKSBUag0KICBFVA0KZW5kc3RyZWFtDQplbmRvYmoNCg0KeHJlZg0KMCA1DQowMDAwMDAwMDAwIDY1NTM1IGYgDQowMDAwMDAwMDE4IDAwMDAwIG4gDQowMDAwMDAwMDc3IDAwMDAwIG4gDQowMDAwMDAwMTc4IDAwMDAwIG4gDQowMDAwMDAwNDU3IDAwMDAwIG4gDQp0cmFpbGVyDQogIDw8ICAvUm9vdCAxIDAgUg0KICAgICAgL1NpemUgNQ0KICA+Pg0Kc3RhcnR4cmVmDQo1NjUNCiUlRU9G",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59"
                }
            },
            "ezsigndocument-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsigndocument/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsigndocument": {
                        "$ref": "#/components/schemas/ezsigndocument-Request",
                        "description": ""
                    },
                    "objEzsigndocumentCompound": {
                        "$ref": "#/components/schemas/ezsigndocumentCompound-Request",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-createObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/editObject API Request",
                "required": [
                    "a_pkiEzsignfolderID"
                ],
                "type": "object",
                "properties": {
                    "a_pkiEzsignfolderID": {
                        "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "a_pkiEzsignfolderID": [
                        95,
                        96
                    ]
                }
            },
            "ezsignfolder-editObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-getObject-v1-Response-mPayload": {
                "description": "Payload for the /1/object/ezsignfolder/getObject API Request",
                "type": "object"
            },
            "activesession-getCurrent-v1-Response": {
                "description": "Response for the /1/object/activesession/getCurrent API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/activesession-getCurrent-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfolder-createObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/createObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-createObject-v1-Response-mPayload",
                        "description": ""
                    }
                }
            },
            "ezsignfolder-deleteObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/deleteObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-editObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/editObject API Request",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ]
            },
            "ezsignfolder-getObject-v1-Response": {
                "description": "Response for the /1/object/ezsignfolder/getObject API Request",
                "required": [
                    "mPayload"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Common-Response"
                    }
                ],
                "properties": {
                    "mPayload": {
                        "$ref": "#/components/schemas/ezsignfolder-getObject-v1-Response-mPayload"
                    }
                }
            },
            "ezsignfolderCompound-Request": {
                "description": "An Ezsignfolder Object and children to create a complete structure",
                "required": [
                    "a_Ezsignsigner"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ezsignfolder-Request"
                    }
                ],
                "properties": {
                    "a_Ezsignsigner": {
                        "description": "An array of signers that will be invited to sign the Ezsigndocuments",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ezsignsigner-Request"
                        }
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "Common-Response": {
                "description": "All API response will inherit this based Response",
                "type": "object",
                "properties": {
                    "objDebugPayload": {
                        "$ref": "#/components/schemas/Common-Response-objDebugPayload"
                    },
                    "objDebug": {
                        "$ref": "#/components/schemas/Common-Response-objDebug"
                    }
                }
            },
            "Common-Response-Error": {
                "description": "Generic Error Message",
                "required": [
                    "sErrorMessage"
                ],
                "type": "object",
                "properties": {
                    "sErrorMessage": {
                        "description": "More detail about the error",
                        "type": "string"
                    }
                }
            },
            "Common-Response-objDebug": {
                "description": "This is a generic debug object that is returned by all API requests",
                "required": [
                    "a_objSQLQuery",
                    "iSQLQueries",
                    "iSQLSelects",
                    "sMemoryUsage",
                    "sRunTime"
                ],
                "type": "object",
                "properties": {
                    "sMemoryUsage": {
                        "description": "The peak memory allocated during the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "sRunTime": {
                        "description": "The total server execution time of the API request execution. Formatted as a human readable string",
                        "type": "string"
                    },
                    "iSQLSelects": {
                        "description": "The number of SQL SELECT queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "iSQLQueries": {
                        "description": "The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution",
                        "type": "integer"
                    },
                    "a_objSQLQuery": {
                        "description": "An array of the SQL Queries that were executed during the API request execution",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Common-Response-objSQLQuery"
                        }
                    }
                },
                "example": {
                    "sMemoryUsage": "11,923MB",
                    "sRunTime": "0.6084s",
                    "iSQLSelects": 3,
                    "iSQLQueries": 6,
                    "a_objQuery": [
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        },
                        {
                            "sQuery": "SELECT * FROM table",
                            "fDuration": 1.0E-4
                        }
                    ]
                }
            },
            "Common-Response-objDebugPayload": {
                "description": "This is a debug object containing debugging information on the actual function",
                "required": [
                    "a_RequiredPermissions",
                    "iVersionMax",
                    "iVersionMin"
                ],
                "type": "object",
                "properties": {
                    "iVersionMin": {
                        "description": "The minimum version of the function that can be called",
                        "type": "integer"
                    },
                    "iVersionMax": {
                        "description": "The maximum version of the function that can be called",
                        "type": "integer"
                    },
                    "a_RequiredPermissions": {
                        "description": "An array of permissions required to access this function.\n\nIf the value \"0\" is present in the array, anyone can call this function.\n\nYou must have one of the permission to access the function. You don't need to have all of them.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "example": {
                    "iVersionMin": 1,
                    "iVersionMax": 2,
                    "a_RequiredPermissions": [
                        45,
                        61
                    ]
                }
            },
            "Common-Response-objSQLQuery": {
                "description": "Definition of objSQLQuery Object",
                "required": [
                    "fDuration",
                    "sQuery"
                ],
                "type": "object",
                "properties": {
                    "sQuery": {
                        "description": "The SQL Query",
                        "type": "string"
                    },
                    "fDuration": {
                        "format": "float",
                        "description": "Execution time of the SQL Query in seconds",
                        "type": "number"
                    }
                },
                "example": {
                    "sQuery": "SELECT * FROM table",
                    "fDuration": 1.0E-4
                }
            },
            "ezsignfolder-createObject-v1-Request": {
                "description": "Request for the /1/object/ezsignfolder/createObject API Request",
                "type": "object",
                "properties": {
                    "objEzsignfolder": {
                        "$ref": "#/components/schemas/ezsignfolder-Request",
                        "description": ""
                    },
                    "objEzsignfolderCompound": {
                        "$ref": "#/components/schemas/ezsignfolderCompound-Request",
                        "description": ""
                    }
                }
            },
            "Shared-fkiTaxassignmentID": {
                "description": "The ID of the tax assignment, Valid values are:\n1. No tax\n2. GST\n3. HST (ON)\n4. HST (NB)\n5. HST (NS)\n6. HST (NL)\n7. HST (PE)\n8. GST + QST (QC)\n9. GST + QST (QC) Non-Recoverable\n10. GST + PST (BC)\n11. GST + PST (SK)\n12. GST + RST (MB)\n13. GST + PST (BC) Non-Recoverable\n14. GST + PST (SK) Non-Recoverable\n15. GST + RST (MB) Non-Recoverable",
                "maximum": 15,
                "minimum": 1,
                "type": "integer"
            },
            "Shared-fkiLanguageID": {
                "description": "The ID of the language, Valid values are:\n1. French\n2. English",
                "maximum": 2,
                "minimum": 1,
                "type": "integer"
            },
            "Shared-fkiEzsigntsarequirementID": {
                "description": "Determine if a Time Stamping Authority should add a timestamp on each of the signature. Valid values are:\n1. No. No TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.\n2. Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**\n3. Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**\n",
                "maximum": 3,
                "minimum": 1,
                "type": "integer"
            },
            "ezsignfolder-Request": {
                "description": "An Ezsignfolder Object",
                "required": [
                    "fkiEzsignfoldertypeID",
                    "sEzsignfolderDescription",
                    "fkiEzsigntsarequirementID",
                    "tEzsignfolderNote",
                    "eEzsignfolderSendreminderfrequency"
                ],
                "type": "object",
                "properties": {
                    "fkiEzsignfoldertypeID": {
                        "description": "The Ezsign Folder Type ID.\nThis value can be queried by the API and is also visible in the admin interface.\n\nThere are two types of Ezsignfoldertype. **User** and **Shared**. **User** can only be seen by the user who created the folder or its assistants. Access to **Shared** folders are configurable for access and email delivery. You should typically choose a **Shared** type here.",
                        "minimum": 1,
                        "type": "integer"
                    },
                    "fkiEzsigntsarequirementID": {
                        "$ref": "#/components/schemas/Shared-fkiEzsigntsarequirementID",
                        "description": ""
                    },
                    "sEzsignfolderDescription": {
                        "description": "The description of the Ezsign Folder",
                        "maxLength": 75,
                        "minLength": 1,
                        "type": "string"
                    },
                    "tEzsignfolderNote": {
                        "description": "Somes extra notes about the eZsign Folder",
                        "type": "string"
                    },
                    "eEzsignfolderSendreminderfrequency": {
                        "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
                        "enum": [
                            "None",
                            "Daily",
                            "Weekly"
                        ],
                        "type": "string"
                    }
                },
                "example": {
                    "fkiEzsignfoldertypeID": 1,
                    "sEzsignfolderDescription": "Test eZsign Folder",
                    "tEzsignfolderNote": "An extra notes we can add to the ezsign folder",
                    "fkiEzsigntsarequirementID": 1,
                    "eEzsignfolderSendreminderfrequency": "Daily"
                }
            },
            "ezsignsigner-Request": {
                "description": "An Ezsignsigner Object",
                "required": [
                    "eEzsignsignerLogintype",
                    "fkiTaxassignmentID"
                ],
                "type": "object",
                "properties": {
                    "fkiTaxassignmentID": {
                        "$ref": "#/components/schemas/Shared-fkiTaxassignmentID",
                        "description": ""
                    },
                    "eEzsignsignerLogintype": {
                        "description": "The method the Ezsignsigner will authenticate to the signing platform.\n\n1. **Password** means the Ezsignsigner will receive a secure link by email.\n2. **PasswordPhone** means the Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call.\n3. **PasswordQuestion** means the Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer.\n4. **Phone** means the Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign.",
                        "enum": [
                            "Password",
                            "PasswordPhone",
                            "PasswordQuestion",
                            "Phone"
                        ],
                        "type": "string"
                    }
                },
                "example": {
                    "fkiTaxassignmentID": 1,
                    "eEzsignsignerLogintype": "PasswordPhone"
                }
            },
            "Common-Format-DateTime": {
                "description": "Represent a Date Time.\nThe timezone is the one configured in the User's profile.",
                "type": "string",
                "example": "\"2020-12-31 23:59:59\""
            },
            "ezsigndocument-Request": {
                "description": "An Ezsigndocument Object",
                "required": [
                    "sEzsignDocumentName",
                    "sEzsignDocumentFilename",
                    "eEzsigndocumentSource",
                    "eEzsigndocumentFormat",
                    "fkiEzsignfolderID",
                    "dtEzsigndocumentDuedate",
                    "fkiLanguageID"
                ],
                "type": "object",
                "properties": {
                    "sEzsignDocumentName": {
                        "description": "The name of the document that will be presented to Ezsignsigners",
                        "type": "string"
                    },
                    "sEzsignDocumentFilename": {
                        "description": "The actual file name that will be used when downloading or attaching to an email.",
                        "type": "string"
                    },
                    "eEzsigndocumentSource": {
                        "description": "Indicates where to look for the document binary content.",
                        "enum": [
                            "Base64"
                        ],
                        "type": "string"
                    },
                    "eEzsigndocumentFormat": {
                        "description": "Indicates the format of the document.",
                        "enum": [
                            "Pdf"
                        ],
                        "type": "string"
                    },
                    "sEzsigndocumentBase64": {
                        "format": "byte",
                        "description": "The Base64 encoded binary content of the document.\n\nThis field is Required when eEzsigndocumentSource = Base64.",
                        "type": "string"
                    },
                    "fkiEzsignfolderID": {
                        "description": "A reference to a valid Ezsignfolder.\n\nThat value is returned after a successful Ezsignfolder Creation.",
                        "type": "integer"
                    },
                    "dtEzsigndocumentDuedate": {
                        "$ref": "#/components/schemas/Common-Format-DateTime",
                        "description": "Pourquoi ça n'apparait pas nulle part"
                    },
                    "fkiLanguageID": {
                        "$ref": "#/components/schemas/Shared-fkiLanguageID",
                        "description": ""
                    }
                },
                "example": {
                    "sEzsignDocumentName": "Important contract",
                    "sEzsignDocumentFilename": "Important Contract.pdf",
                    "fkiLanguageID": 2,
                    "eEzsigndocumentSource": "Base64",
                    "eEzsigndocumentFormat": "Pdf",
                    "sEzsigndocumentBase64": "JVBERi0xLjENCiXCpcKxw6sNCg0KMSAwIG9iag0KICA8PCAvVHlwZSAvQ2F0YWxvZw0KICAgICAvUGFnZXMgMiAwIFINCiAgPj4NCmVuZG9iag0KDQoyIDAgb2JqDQogIDw8IC9UeXBlIC9QYWdlcw0KICAgICAvS2lkcyBbMyAwIFJdDQogICAgIC9Db3VudCAxDQogICAgIC9NZWRpYUJveCBbMCAwIDMwMCAxNDRdDQogID4+DQplbmRvYmoNCg0KMyAwIG9iag0KICA8PCAgL1R5cGUgL1BhZ2UNCiAgICAgIC9QYXJlbnQgMiAwIFINCiAgICAgIC9SZXNvdXJjZXMNCiAgICAgICA8PCAvRm9udA0KICAgICAgICAgICA8PCAvRjENCiAgICAgICAgICAgICAgIDw8IC9UeXBlIC9Gb250DQogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTENCiAgICAgICAgICAgICAgICAgIC9CYXNlRm9udCAvVGltZXMtUm9tYW4NCiAgICAgICAgICAgICAgID4+DQogICAgICAgICAgID4+DQogICAgICAgPj4NCiAgICAgIC9Db250ZW50cyA0IDAgUg0KICA+Pg0KZW5kb2JqDQoNCjQgMCBvYmoNCiAgPDwgL0xlbmd0aCA1NSA+Pg0Kc3RyZWFtDQogIEJUDQogICAgL0YxIDE4IFRmDQogICAgMCAwIFRkDQogICAgKEhlbGxvIFdvcmxkKSBUag0KICBFVA0KZW5kc3RyZWFtDQplbmRvYmoNCg0KeHJlZg0KMCA1DQowMDAwMDAwMDAwIDY1NTM1IGYgDQowMDAwMDAwMDE4IDAwMDAwIG4gDQowMDAwMDAwMDc3IDAwMDAwIG4gDQowMDAwMDAwMTc4IDAwMDAwIG4gDQowMDAwMDAwNDU3IDAwMDAwIG4gDQp0cmFpbGVyDQogIDw8ICAvUm9vdCAxIDAgUg0KICAgICAgL1NpemUgNQ0KICA+Pg0Kc3RhcnR4cmVmDQo1NjUNCiUlRU9G",
                    "fkiEzsignfolderID": 1,
                    "dtEzsigndocumentDuedate": "2020-12-31 23:59:59"
                }
            }
        },
        "responses": {
            "Response-Error-404": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Common-Response-Error"
                        }
                    }
                },
                "description": "The element you are trying to work on does not exist"
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "apiKey",
                "description": "There are 3 types of API Key that can be used to make requests to the API.\n\n1. **API type key** which is static and not session based. It can be generated from the admin console. This is the most common type of authentication for \"server to server\" kind of integration. Never use this in a web based (client) application as the key could be leaked. This type of key begins with the letter **A**.\n\n2. **Delegated type key** which has an expiration time. It is commonly used in mobile or web application where you cannot use an **API type key** that could be leaked. The application would query a server part that will generate a **Delegated type key** using an **API type key**. The **Delegated type key** could now be used by the mobile or web page application without leaking the **API type key**. This type of key begins with the letter **D**.\n\n3. **User type key** which are session based and can be retrieved after a successful authentication. This type of key is reserved to specific situation where the other types of key are not desirable. This type of key begins with the letter **U**.",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Authorization": [
            ]
        }
    ],
    "tags": [
        {
            "name": "Activesession",
            "description": "Activesession contains detail about the currently executing api request."
        },
        {
            "name": "Ezsigndocument",
            "description": "Ezsigndocument contains detail about a document to sign"
        },
        {
            "name": "Ezsignfolder",
            "description": "Ezsignfolder contains detail about the container containing signers, documents to sign, etc. Sometimes referred as \"Envelopes\" in competitor products"
        }
    ],
    "x-tagGroups": [
        {
            "name": "Object",
            "tags": [
                "Activesession",
                "Ezsignfolder",
                "Ezsigndocument"
            ]
        },
        {
            "name": "Module",
            "tags": [
            ]
        },
        {
            "name": "Report",
            "tags": [
            ]
        }
    ]
}