{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "support-api@ezmax.ca",
      "name": "API Support department",
      "url": "https://www.ezmax.ca/en/contact"
    },
    "description": "This API expose all the functionnalities for the eZmax and eZsign applications.",
    "license": {
      "name": "MIT License",
      "url": "https://opensource.org/licenses/MIT"
    },
    "termsOfService": "https://www.ezmax.ca/TODO",
    "title": "eZmax API Definition (PowerAutomate)",
    "version": "1.2.0",
    "x-logo": {
      "altText": "eZmax Logo",
      "backgroundColor": "#fafafa",
      "url": "https://github.com/eZmaxinc/eZmax-API/raw/master/docs/resources/images/logo.png"
    },
    "x-restgeninfo": []
  },
  "host": "prod.api.appcluster01.ca-central-1.ezmax.com",
  "basePath": "/rest",
  "schemes": [
    "https"
  ],
  "paths": {
    "/2/object/ezsignfolder": {
      "description": "",
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ezsignfolder-createObject-v2-Request"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ezsignfolder-createObject-v2-Response"
            }
          }
        },
        "security": [
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Object_Ezsignfolder"
        ],
        "description": "The endpoint allows to create one or many elements at once.",
        "operationId": "Ezsignfolder_CreateObject_V2",
        "summary": "Create a new Ezsignfolder",
        "x-permissions": [
          "All"
        ],
        "x-powerautomate": true,
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false,
        "x-usertypeextra": []
      }
    }
  },
  "definitions": {
    "Common-Audit": {
      "description": "Gives informations about the user that created the object and the last user to have modified it.\n\nIf the object was never modified after creation, objAuditdetailModified won't be returned.\n",
      "properties": {
        "objAuditdetailCreated": {
          "$ref": "#/definitions/Common-Auditdetail"
        },
        "objAuditdetailModified": {
          "$ref": "#/definitions/Common-Auditdetail"
        }
      },
      "required": [
        "objAuditdetailCreated"
      ],
      "type": "object"
    },
    "Common-Auditdetail": {
      "description": "Gives informations about the user that created the object or the last user to have modified it.\n\nIf the object was never modified after creation, both Created and Modified informations will be the same.\n",
      "properties": {
        "dtAuditdetailDate": {
          "$ref": "#/definitions/Common-Format-DateTime"
        },
        "fkiApikeyID": {
          "$ref": "#/definitions/Field-pkiApikeyID"
        },
        "fkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "sApikeyDescriptionX": {
          "$ref": "#/definitions/Field-sApikeyDescriptionX"
        },
        "sUserFirstname": {
          "$ref": "#/definitions/Field-sUserFirstname"
        },
        "sUserLastname": {
          "$ref": "#/definitions/Field-sUserLastname"
        },
        "sUserLoginname": {
          "$ref": "#/definitions/Field-sUserLoginname"
        }
      },
      "required": [
        "fkiUserID",
        "sUserLoginname",
        "sUserFirstname",
        "sUserLastname",
        "dtAuditdetailDate"
      ],
      "type": "object"
    },
    "Common-Format-DateTime": {
      "description": "Represent a Date Time.\nThe timezone is the one configured in the User's profile.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Common-Format-ExternalID": {
      "description": "This field can be used to store an External ID from the client's system.\n\nAnything can be stored in this field, it will never be evaluated by the eZmax system and will be returned\nAS-IS.\n\nTo store multiple values, consider using a JSON formatted structure, a URL encoded string, a CSV or any other custom format.\n",
      "example": "{\"ID\": 1234, \"TAGS\": [\"tag1\", \"tag2\", \"tag3\"]}",
      "pattern": "^.{0,64}$",
      "type": "string"
    },
    "Common-Response": {
      "description": "All API response will inherit this based Response",
      "properties": {
        "objDebug": {
          "$ref": "#/definitions/Common-Response-objDebug"
        },
        "objDebugPayload": {
          "$ref": "#/definitions/Common-Response-objDebugPayload"
        }
      },
      "required": [
        "objDebugPayload"
      ],
      "type": "object"
    },
    "Common-Response-Error": {
      "description": "Generic Error Message",
      "properties": {
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        }
      },
      "required": [
        "sErrorMessage",
        "eErrorCode"
      ],
      "type": "object"
    },
    "Common-Response-Error-EzsignformValidation": {
      "allOf": [
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Response-Error"
        }
      ],
      "description": "Generic Error Message",
      "properties": {
        "a_objEzsignformfielderror": {
          "description": "",
          "items": {
            "$ref": "#/definitions/Custom-Ezsignformfielderror-Response"
          },
          "type": "array"
        }
      },
      "required": [
        "a_objEzsignformfielderror"
      ],
      "type": "object"
    },
    "Common-Response-Error-TooManyRequests": {
      "allOf": [
        {
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Response-Error"
        }
      ],
      "description": "Generic Error Message",
      "type": "object"
    },
    "Common-Response-Error-sTemporaryFileUrl": {
      "allOf": [
        {
          "properties": {
            "sTemporaryFileUrl": {
              "description": "The Temporary File Url of the document that was uploaded. That url can be reused instead of uploading the file again.",
              "example": "http://www.example.com/document.pdf",
              "type": "string"
            }
          },
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Response-Error"
        }
      ],
      "description": "Generic Error Message",
      "type": "object"
    },
    "Common-Response-Redirect-sSecretquestionTextX": {
      "description": "352 Redirect Message containing secret question",
      "properties": {
        "sSecretquestionTextX": {
          "$ref": "#/definitions/Field-sSecretquestionTextX"
        }
      },
      "required": [
        "sSecretquestionTextX"
      ],
      "type": "object"
    },
    "Common-Response-objDebug": {
      "description": "This is a generic debug object that is returned by all API requests",
      "example": {
        "a_objSQLQuery": [
          {
            "fDuration": 0.0001,
            "sQuery": "SELECT * FROM table"
          },
          {
            "fDuration": 0.0001,
            "sQuery": "SELECT * FROM table"
          }
        ],
        "iSQLQueries": 6,
        "iSQLSelects": 3,
        "sMemoryUsage": "11,923MB",
        "sRunTime": "0.6084s"
      },
      "properties": {
        "a_objSQLQuery": {
          "description": "An array of the SQL Queries that were executed during the API request execution",
          "items": {
            "$ref": "#/definitions/Common-Response-objSQLQuery"
          },
          "type": "array"
        },
        "iSQLQueries": {
          "description": "The number of SQL INSERT/UPDATE/DELETE queries that were sent to the database server during the API request execution",
          "type": "integer"
        },
        "iSQLSelects": {
          "description": "The number of SQL SELECT queries that were sent to the database server during the API request execution",
          "type": "integer"
        },
        "sMemoryUsage": {
          "description": "The peak memory allocated during the API request execution. Formatted as a human readable string",
          "type": "string"
        },
        "sRunTime": {
          "description": "The total server execution time of the API request execution. Formatted as a human readable string",
          "type": "string"
        }
      },
      "required": [
        "a_objSQLQuery",
        "iSQLQueries",
        "iSQLSelects",
        "sMemoryUsage",
        "sRunTime"
      ],
      "type": "object"
    },
    "Common-Response-objDebugPayload": {
      "description": "This is a debug object containing debugging information on the actual function",
      "properties": {
        "a_RequiredPermission": {
          "description": "An array of permissions required to access this function.\n\nIf the value \"0\" is present in the array, anyone can call this function.\n\nYou must have one of the permission to access the function. You don't need to have all of them.",
          "items": {
            "example": 117,
            "type": "integer"
          },
          "type": "array"
        },
        "bVersionDeprecated": {
          "description": "Wheter the current route is deprecated or not",
          "example": false,
          "type": "boolean"
        },
        "iVersionMax": {
          "description": "The maximum version of the function that can be called",
          "example": 2,
          "type": "integer"
        },
        "iVersionMin": {
          "description": "The minimum version of the function that can be called",
          "example": 1,
          "type": "integer"
        }
      },
      "required": [
        "a_RequiredPermission",
        "iVersionMax",
        "iVersionMin",
        "bVersionDeprecated"
      ],
      "type": "object"
    },
    "Common-Response-objSQLQuery": {
      "description": "Definition of objSQLQuery Object",
      "example": {
        "fDuration": 0.0001,
        "sQuery": "SELECT * FROM table"
      },
      "properties": {
        "fDuration": {
          "description": "Execution time of the SQL Query in seconds",
          "format": "float",
          "type": "number"
        },
        "sQuery": {
          "description": "The SQL Query",
          "type": "string"
        }
      },
      "required": [
        "fDuration",
        "sQuery"
      ],
      "type": "object"
    },
    "Common-Webhook": {
      "description": "This is the base Webhook object",
      "properties": {
        "a_objAttempt": {
          "description": "An array containing details of previous attempts that were made to deliver the message.\nThe array is empty if it's the first attempt.",
          "items": {
            "$ref": "#/definitions/attempt-ResponseCompound"
          },
          "type": "array"
        },
        "objWebhook": {
          "$ref": "#/definitions/Custom-Webhook-Response"
        }
      },
      "required": [
        "objWebhook",
        "a_objAttempt"
      ],
      "type": "object"
    },
    "Computed-bEzsigndocumentEzsignform": {
      "description": "If the Ezsigndocument contains an Ezsignform or not",
      "example": true,
      "type": "boolean"
    },
    "Computed-bEzsignfolderIsdisposable": {
      "description": "If the Ezsigndocument can be disposed",
      "example": false,
      "type": "boolean"
    },
    "Computed-dtEzsignfolderDuedate": {
      "description": "The maximum date and time at which the Ezsignfolder can be signed.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Computed-dtEzsignfolderScheduledarchive": {
      "description": "The scheduled date and time at which the Ezsignfolder should be archived.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Computed-dtEzsignfolderScheduleddispose": {
      "description": "The scheduled date at which the Ezsignfolder should be Disposed.",
      "example": "2020-12-31",
      "type": "string"
    },
    "Computed-sEzsigndocumentMD5initial": {
      "description": "MD5 Hash of the initial PDF Document before signatures were applied to it.",
      "example": "012345678901234567890123456789AB",
      "type": "string"
    },
    "Computed-sEzsigndocumentMD5signed": {
      "description": "MD5 Hash of the final PDF Document after all signatures were applied to it.",
      "example": "012345678901234567890123456789AB",
      "type": "string"
    },
    "Custom-Ezsignfoldertype-Response": {
      "allOf": [
        {
          "properties": {
            "bEzsignfoldertypeDelegate": {
              "$ref": "#/definitions/Field-bEzsignfoldertypeDelegate"
            },
            "bEzsignfoldertypeIncludeproofsigner": {
              "$ref": "#/definitions/Field-bEzsignfoldertypeIncludeproofsigner"
            },
            "bEzsignfoldertypeIncludeproofuser": {
              "$ref": "#/definitions/Field-bEzsignfoldertypeIncludeproofuser"
            },
            "bEzsignfoldertypeReassign": {
              "$ref": "#/definitions/Field-bEzsignfoldertypeReassign"
            },
            "pkiEzsignfoldertypeID": {
              "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
            },
            "sEzsignfoldertypeNameX": {
              "$ref": "#/definitions/Field-sEzsignfoldertypeNameX"
            }
          },
          "required": [
            "pkiEzsignfoldertypeID"
          ],
          "type": "object"
        }
      ],
      "description": "A Custom Ezsignfoldertype Object",
      "type": "object"
    },
    "Custom-Ezsignformfielderror-Response": {
      "allOf": [
        {
          "properties": {
            "a_objEzsignformfielderrortest": {
              "description": "",
              "items": {
                "$ref": "#/definitions/Custom-Ezsignformfielderrortest-Response"
              },
              "type": "array"
            },
            "sEzsignformfieldLabel": {
              "$ref": "#/definitions/Field-sEzsignformfieldLabel"
            }
          },
          "required": [
            "sEzsignformfieldLabel",
            "a_objEzsignformfielderrortest"
          ],
          "type": "object"
        }
      ],
      "description": "A Custom Ezsignformfield Object to contain an error list",
      "type": "object"
    },
    "Custom-Ezsignformfielderrortest-Response": {
      "allOf": [
        {
          "properties": {
            "sEzsignformfielderrortestDetail": {
              "description": "The detail why the test failed",
              "pattern": "^.{0,255}$",
              "type": "string"
            },
            "sEzsignformfielderrortestName": {
              "description": "The name of the test",
              "pattern": "^.{0,50}$",
              "type": "string"
            }
          },
          "required": [
            "sEzsignformfielderrortestName",
            "sEzsignformfielderrortestDetail"
          ],
          "type": "object"
        }
      ],
      "description": "A Custom Ezsignformfielderrortest Object to contain the detail of the test error",
      "type": "object"
    },
    "Custom-Webhook-Response": {
      "allOf": [
        {
          "properties": {
            "bWebhookTest": {
              "description": "Wheter the webhook received is a manual test or a real event",
              "type": "boolean"
            },
            "pksCustomerCode": {
              "$ref": "#/definitions/Field-pksCustomerCode"
            }
          },
          "required": [
            "pksCustomerCode",
            "bWebhookTest"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/webhook-Response"
        }
      ],
      "description": "A custom Webhook object",
      "type": "object"
    },
    "Field-bEzsigndocumentHassignedsignatures": {
      "description": "If the Ezsigndocument contains signed signatures (From internal or external sources)",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsignfoldersignerassociationDelayedsend": {
      "description": "If this flag is true the signatory is part of a delayed send.",
      "type": "boolean"
    },
    "Field-bEzsignfoldersignerassociationReceivecopy": {
      "description": "If this flag is true. The signatory will receive a copy of every signed Ezsigndocument even if it ain't required to sign the document.",
      "type": "boolean"
    },
    "Field-bEzsignfoldertypeDelegate": {
      "description": "Wheter if delegation of signature is allowed to another user or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsignfoldertypeIncludeproofsigner": {
      "description": "Whether we include the proof with the signed Ezsigndocument for Ezsignsigners",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsignfoldertypeIncludeproofuser": {
      "description": "Whether we include the proof with the signed Ezsigndocument for users",
      "example": true,
      "type": "boolean"
    },
    "Field-bEzsignfoldertypeReassign": {
      "description": "Wheter if Reassignment of signature is allowed to another signatory or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserAttachmentautoverified": {
      "description": "Whether if Attachments uploaded by the User must be validated or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserChangepassword": {
      "description": "Whether if the User is forced to change its password",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserIsactive": {
      "description": "Whether the User is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bUserValidatebyadministration": {
      "description": "Whether if the transactions in which the User is implicated must be validated by administrative personnel or not",
      "example": false,
      "type": "boolean"
    },
    "Field-bUserValidatebydirector": {
      "description": "Whether if the transactions in which the User is implicated must be validated by a director or not",
      "example": false,
      "type": "boolean"
    },
    "Field-bWebhookIsactive": {
      "description": "Whether the Webhook is active or not",
      "example": true,
      "type": "boolean"
    },
    "Field-bWebhookSkipsslvalidation": {
      "description": "Wheter the server's SSL certificate should be validated or not. Not recommended to skip for production use",
      "example": false,
      "type": "boolean"
    },
    "Field-dtEzsigndocumentDuedate": {
      "description": "The maximum date and time at which the Ezsigndocument can be signed.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtEzsigndocumentFirstsend": {
      "description": "The date and time when the Ezsigndocument was first sent.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtEzsigndocumentLastsend": {
      "description": "The date and time when the Ezsigndocument was sent the last time.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtEzsignfolderClose": {
      "description": "The date and time at which the Ezsignfolder was closed. Either by applying the last signature or by completing it prematurely.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtEzsignfolderDelayedsenddate": {
      "description": "The date and time at which the Ezsignfolder will be sent in the future.",
      "example": "2020-12-31T23:59:59.000Z",
      "type": "string"
    },
    "Field-dtEzsignfolderSentdate": {
      "description": "The date and time at which the Ezsignfolder was sent the last time.",
      "example": "2020-12-31T23:59:59.000Z",
      "type": "string"
    },
    "Field-dtEzsignformCompleted": {
      "description": "The date and time at which the Ezsignform has been completed.",
      "example": "2020-12-31 23:59:59",
      "type": "string"
    },
    "Field-dtUserEzsignprepaidexpiration": {
      "description": "The eZsign prepaid expiration date",
      "example": "2020-12-31",
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$",
      "type": "string"
    },
    "Field-dtUserLastlogondate": {
      "description": "The last logon date of the User",
      "example": "2020-12-31 23:59:59",
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$",
      "type": "string"
    },
    "Field-dtUserPasswordchanged": {
      "description": "The date at which the User's password was last changed",
      "example": "2020-12-31 23:59:59",
      "pattern": "^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$",
      "type": "string"
    },
    "Field-eErrorCode": {
      "description": "The error code. See documentation for valid values",
      "enum": [
        "BADREQUEST",
        "BADREQUEST_CLOCKSKEW",
        "UNAUTHORIZED_BADAUTH",
        "UNAUTHORIZED_BADMFA",
        "UNAUTHORIZED_EXPIRED",
        "UNAUTHORIZED_REQUEST",
        "FORBIDDEN",
        "FORBIDDEN_CONFIGURATION",
        "FORBIDDEN_MODULE",
        "FORBIDDEN_NOACCESS",
        "FORBIDDEN_PERMISSION",
        "FORBIDDEN_SUBSCRIPTION",
        "FORBIDDEN_USERTYPE",
        "FORBIDDEN_USER_ORIGIN_EXTERNAL",
        "NOTFOUND",
        "NOTFOUND_OBJECT",
        "NOTFOUND_ROUTE",
        "METHODNOTALLOWED",
        "NOTACCEPTABLE_CONTENT",
        "NOTACCEPTABLE_LANGUAGE",
        "UNPROCESSABLEENTITY_ACTIVESESSION_ALREADY_CLONING",
        "UNPROCESSABLEENTITY_CANNOTDELETE",
        "UNPROCESSABLEENTITY_CANNOTMODIFY",
        "UNPROCESSABLEENTITY_CHANGEPASSWORD_INVALID_CURRENT",
        "UNPROCESSABLEENTITY_CHANGEPASSWORD_SAME",
        "UNPROCESSABLEENTITY_DATA_MISSING",
        "UNPROCESSABLEENTITY_DATA_UNIQUE",
        "UNPROCESSABLEENTITY_DATA_VALIDATION",
        "UNPROCESSABLEENTITY_DATA_OUTOFBOUND",
        "UNPROCESSABLEENTITY_DOWNLOAD_ERROR",
        "UNPROCESSABLEENTITY_EZSIGNFORM_VALIDATION",
        "UNPROCESSABLEENTITY_EZSIGNSIGNERCONNECTED",
        "UNPROCESSABLEENTITY_NOTHINGTODO",
        "UNPROCESSABLEENTITY_NOTREADY",
        "UNPROCESSABLEENTITY_PDF_FORM",
        "UNPROCESSABLEENTITY_PDF_SIGNATURE",
        "UNPROCESSABLEENTITY_PDF_FORM_AND_SIGNATURE",
        "UNPROCESSABLEENTITY_PDF_INCOMPATIBLE",
        "UNPROCESSABLEENTITY_PDF_PASSWORD",
        "UNPROCESSABLEENTITY_PDF_WRONG_PASSWORD",
        "UNPROCESSABLEENTITY_PDF_REPAIRABLE",
        "UNPROCESSABLEENTITY_PDF_XFA",
        "UNPROCESSABLEENTITY_TEMPLATE_MISMATCH",
        "UNPROCESSABLEENTITY_UNMODIFIABLE_FIELD",
        "UNPROCESSABLEENTITY_USER_STAGED",
        "TOOMANYREQUESTS",
        "TOOMANYREQUESTS_THIRDPARTY",
        "ERROR_INTERNAL",
        "ERROR_CONFIGURATION",
        "ERROR_NOTIMPLEMENTED"
      ],
      "example": "BADREQUEST",
      "type": "string"
    },
    "Field-eEzsigndocumentStep": {
      "description": "The signature step of the Ezsigndocument.",
      "enum": [
        "Unsent",
        "Unsigned",
        "PartiallySigned",
        "DeclinedToSign",
        "PrematurelyEnded",
        "Completed",
        "Disposed"
      ],
      "example": "Completed",
      "type": "string"
    },
    "Field-eEzsignfolderSendreminderfrequency": {
      "description": "Frequency at which reminders will be sent to signers that haven't signed the documents",
      "enum": [
        "None",
        "Daily",
        "Weekly"
      ],
      "example": "None",
      "type": "string"
    },
    "Field-eEzsignfolderStep": {
      "description": "The signature step of the Ezsignfolder.",
      "enum": [
        "Unsent",
        "PendingSend",
        "Sent",
        "PartiallySigned",
        "Expired",
        "Completed",
        "Archived",
        "Disposed"
      ],
      "example": "Completed",
      "type": "string"
    },
    "Field-ePhoneType": {
      "description": "The type of phone number.\n\n**Local** refers to a north American phone number. You would then need to specify sPhoneRegion, sPhoneExchange, sPhoneNumber.\n**International** would be used for numbers outside of north america. You would then need to specify sPhoneInternational",
      "enum": [
        "Local",
        "International"
      ],
      "example": "Local",
      "type": "string",
      "x-deprecated": true
    },
    "Field-eUserEzsignaccess": {
      "description": "The type or eZsign access the User has",
      "enum": [
        "No",
        "PaidByOffice",
        "PerDocument",
        "Prepaid"
      ],
      "example": "PaidByOffice",
      "type": "string"
    },
    "Field-eUserLogintype": {
      "description": "The type of authentication for the User",
      "enum": [
        "Password",
        "PasswordPhone",
        "PasswordQuestion"
      ],
      "example": "Password",
      "type": "string"
    },
    "Field-eUserOrigin": {
      "description": "The origin of the User",
      "enum": [
        "BuiltIn",
        "External"
      ],
      "example": "BuiltIn",
      "type": "string"
    },
    "Field-eUserType": {
      "description": "The user type of the User.",
      "enum": [
        "AgentBroker",
        "Assistant",
        "Employee",
        "EzsignUser",
        "Normal"
      ],
      "example": "EzsignUser",
      "type": "string"
    },
    "Field-eWebhookEzsignevent": {
      "description": "This Ezsign Event. This property will be set only if the Module is \"Ezsign\"",
      "enum": [
        "DocumentCompleted",
        "EzsignsignerAcceptclause",
        "EzsignsignerConnect",
        "FolderCompleted"
      ],
      "example": "FolderCompleted",
      "type": "string"
    },
    "Field-eWebhookManagementevent": {
      "description": "This Management Event. This property will be set only if the Module is \"Management\".",
      "enum": [
        "UserCreated",
        "UserstagedCreated"
      ],
      "example": "UserCreated",
      "type": "string"
    },
    "Field-eWebhookModule": {
      "description": "The module for the Webhook",
      "enum": [
        "Ezsign",
        "Management"
      ],
      "example": "Ezsign",
      "type": "string"
    },
    "Field-iEzsigndocumentOrder": {
      "description": "The order in which the Ezsigndocument will be presented to the signatory in the Ezsignfolder.",
      "example": 1,
      "minimum": 1,
      "type": "integer"
    },
    "Field-iEzsigndocumentPagetotal": {
      "description": "The number of pages in the Ezsigndocument.",
      "example": 4,
      "minimum": 1,
      "type": "integer"
    },
    "Field-iEzsigndocumentSignaturesigned": {
      "description": "The number of signatures that were signed in the document.",
      "example": 3,
      "minimum": 0,
      "type": "integer"
    },
    "Field-iEzsigndocumentSignaturetotal": {
      "description": "The number of total signatures that were requested in the Ezsigndocument.",
      "example": 4,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiAgentID": {
      "description": "The unique ID of the Agent.",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiApikeyID": {
      "description": "The unique ID of the Apikey",
      "example": 99,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiAssistantID": {
      "description": "The unique ID of the Assistant.",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiBillingentityinternalID": {
      "description": "The unique ID of the Billingentityinternal.",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiBrokerID": {
      "description": "The unique ID of the Broker.",
      "example": 26,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiCompanyID": {
      "description": "The unique ID of the Company",
      "example": 1,
      "maximum": 255,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiContactID": {
      "description": "The unique ID of the Contact",
      "example": 21,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiDepartmentID": {
      "description": "The unique ID of the Department",
      "example": 21,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEmailID": {
      "description": "The unique ID of the Email",
      "example": 22,
      "maximum": 16777215,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiEmailtypeID": {
      "description": "The unique ID of the Emailtype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEmployeeID": {
      "description": "The unique ID of the Employee.",
      "example": 31,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsigndocumentID": {
      "description": "The unique ID of the Ezsigndocument",
      "example": 97,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfolderID": {
      "description": "The unique ID of the Ezsignfolder",
      "example": 33,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfoldersignerassociationID": {
      "description": "The unique ID of the Ezsignfoldersignerassociation",
      "example": 20,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignfoldertypeID": {
      "description": "The unique ID of the Ezsignfoldertype.",
      "example": 5,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignsignerID": {
      "description": "The unique ID of the Ezsignsigner",
      "example": 89,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsignsignergroupID": {
      "description": "The unique ID of the Ezsignsignergroup",
      "example": 27,
      "maximum": 65535,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiEzsigntsarequirementID": {
      "description": "The unique ID of the Ezsigntsarequirement.\n\nDetermine if a Time Stamping Authority should add a timestamp on each of the signature.\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No. TSA Timestamping will requested. This will make all signatures a lot faster since no round-trip to the TSA server will be required. Timestamping will be made using eZsign server's time.|\n|2|Best effort. Timestamping from a Time Stamping Authority will be requested but is not mandatory. In the very improbable case it cannot be completed, the timestamping will be made using eZsign server's time. **Additional fee applies**|\n|3|Mandatory. Timestamping from a Time Stamping Authority will be requested and is mandatory. In the very improbable case it cannot be completed, the signature will fail and the user will be asked to retry. **Additional fee applies**|",
      "example": 1,
      "maximum": 3,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiLanguageID": {
      "description": "The unique ID of the Language.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|French|\n|2|English|",
      "example": 2,
      "maximum": 2,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiModuleID": {
      "description": "The unique ID of the Module",
      "example": 40,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiPhoneID": {
      "description": "The unique ID of the Phone.",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiPhonetypeID": {
      "description": "The unique ID of the Phonetype.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|Office|\n|2|Home|\n|3|Mobile|\n|4|Fax|\n|5|Pager|\n|6|Toll Free|",
      "example": 1,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiSecretquestionID": {
      "description": "The unique ID of the Secretquestion.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|The name of the hospital in which you were born|\n|2|The name of your grade school|\n|3|The last name of your favorite teacher|\n|4|Your favorite sports team|\n|5|Your favorite TV show|\n|6|Your favorite movie|\n|7|The name of the street on which you grew up|\n|8|The name of your first employer|\n|9|Your first car|\n|10|Your favorite food|\n|11|The name of your first pet|\n|12|Favorite musician/band|\n|13|What instrument you play|\n|14|Your father's middle name|\n|15|Your mother's maiden name|\n|16|Name of your eldest child|\n|17|Your spouse's middle name|\n|18|Favorite restaurant|\n|19|Childhood nickname|\n|20|Favorite vacation destination|\n|21|Your boat's name|\n|22|Date of Birth (YYYY-MM-DD)|",
      "example": 7,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiTaxassignmentID": {
      "description": "The unique ID of the Taxassignment.\n\nValid values:\n\n|Value|Description|\n|-|-|\n|1|No tax|\n|2|GST|\n|3|HST (ON)|\n|4|HST (NB)|\n|5|HST (NS)|\n|6|HST (NL)|\n|7|HST (PE)|\n|8|GST + QST (QC)|\n|9|GST + QST (QC) Non-Recoverable|\n|10|GST + PST (BC)|\n|11|GST + PST (SK)|\n|12|GST + RST (MB)|\n|13|GST + PST (BC) Non-Recoverable|\n|14|GST + PST (SK) Non-Recoverable|\n|15|GST + RST (MB) Non-Recoverable|",
      "example": 1,
      "maximum": 15,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiTimezoneID": {
      "description": "The unique ID of the Timezone",
      "example": 247,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiUserID": {
      "description": "The unique ID of the User",
      "example": 70,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiUserlogintypeID": {
      "description": "The unique ID of the Userlogintype\n\nValid values:\n\n|Value|Description|Detail|\n|-|-|-|\n|1|**Email Only**|The Ezsignsigner will receive a secure link by email|\n|2|**Email and phone or SMS**|The Ezsignsigner will receive a secure link by email and will need to authenticate using SMS or Phone call. **Additional fee applies**|\n|3|**Email and secret question**|The Ezsignsigner will receive a secure link by email and will need to authenticate using a predefined question and answer|\n|4|**In person only**|The Ezsignsigner will only be able to sign \"In-Person\" and there won't be any authentication. No email will be sent for invitation to sign. Make sure you evaluate the risk of signature denial and at minimum, we recommend you use a handwritten signature type|\n|5|**In person with phone or SMS**|The Ezsignsigner will only be able to sign \"In-Person\" and will need to authenticate using SMS or Phone call. No email will be sent for invitation to sign. **Additional fee applies**|",
      "example": 2,
      "minimum": 0,
      "type": "integer"
    },
    "Field-pkiUserstagedID": {
      "description": "The unique ID of the Userstaged",
      "example": 90,
      "maximum": 65535,
      "minimum": 1,
      "type": "integer"
    },
    "Field-pkiWebhookID": {
      "description": "The unique ID of the Webhook",
      "example": 77,
      "type": "integer"
    },
    "Field-pksCustomerCode": {
      "description": "The customer code assigned to your account",
      "example": "demo",
      "maxLength": 6,
      "minLength": 2,
      "type": "string"
    },
    "Field-sApikeyDescriptionX": {
      "description": "The description of the Apikey in the language of the requester",
      "example": "Project X",
      "type": "string"
    },
    "Field-sBillingentityinternalDescriptionX": {
      "description": "The description of the Billingentityinternal in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Field-sCompanyNameX": {
      "description": "The Name of the Company in the language of the requester",
      "example": "Acme inc.",
      "type": "string"
    },
    "Field-sContactFirstname": {
      "description": "The First name of the contact",
      "example": "John",
      "type": "string"
    },
    "Field-sContactLastname": {
      "description": "The Last name of the contact",
      "example": "Doe",
      "type": "string"
    },
    "Field-sDepartmentNameX": {
      "description": "The Name of the Department in the language of the requester",
      "example": "Head Office",
      "type": "string"
    },
    "Field-sEmailAddress": {
      "description": "The email address.",
      "example": "email@example.com",
      "type": "string"
    },
    "Field-sErrorMessage": {
      "description": "The message giving details about the error",
      "example": "Invalid Signature Headers",
      "pattern": "^.{0,500}$",
      "type": "string"
    },
    "Field-sEzsigndocumentName": {
      "description": "The name of the document that will be presented to Ezsignfoldersignerassociations",
      "example": "Contract #123",
      "type": "string"
    },
    "Field-sEzsignfolderDescription": {
      "description": "The description of the Ezsignfolder",
      "example": "Test eZsign Folder",
      "type": "string"
    },
    "Field-sEzsignfoldertypeNameX": {
      "description": "The name of the Ezsignfoldertype in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Field-sEzsignformfieldLabel": {
      "description": "The Label for the Ezsignformfield",
      "example": "Peanuts",
      "type": "string"
    },
    "Field-sEzsignsignergroupDescription1": {
      "description": "The description of the Ezsignsignergroup in French",
      "example": "RH",
      "type": "string"
    },
    "Field-sEzsignsignergroupDescription2": {
      "description": "The description of the Ezsignsignergroup in English",
      "example": "HR",
      "type": "string"
    },
    "Field-sEzsignsignergroupDescriptionX": {
      "description": "The Description of the Ezsignsignergroup in the language of the requester",
      "example": "HR",
      "type": "string"
    },
    "Field-sEzsigntsarequirementDescriptionX": {
      "description": "The description of the Ezsigntsarequirement in the language of the requester",
      "example": "Default",
      "type": "string"
    },
    "Field-sLanguageNameX": {
      "description": "The Name of the Language in the language of the requester",
      "example": "English",
      "type": "string"
    },
    "Field-sModuleNameX": {
      "description": "The Name of the Module in the language of the requester",
      "example": "Purchase",
      "type": "string"
    },
    "Field-sPhoneE164": {
      "description": "A phone number in E.164 Format",
      "example": "+15149901516",
      "pattern": "^\\+[1-9]\\d{1,14}$",
      "type": "string"
    },
    "Field-sPhoneExtension": {
      "description": "The extension of the phone number.\n\nThe extension is the \"123\" section in this sample phone number: (514) 990-1516 x123.\n\nIt can also be used with international phone numbers",
      "example": "123",
      "type": "string"
    },
    "Field-sSecretquestionTextX": {
      "description": "The text of the Secretquestion in the language of the requester",
      "example": "The name of the hospital in which you were born",
      "type": "string"
    },
    "Field-sTimezoneName": {
      "description": "The description of the Timezone",
      "example": "Default",
      "type": "string"
    },
    "Field-sUserFirstname": {
      "description": "The first name of the user",
      "example": "John",
      "type": "string"
    },
    "Field-sUserLastname": {
      "description": "The last name of the user",
      "example": "Doe",
      "type": "string"
    },
    "Field-sUserLoginname": {
      "description": "The login name of the User.",
      "example": "JohnDoe",
      "pattern": "^(?:([\\w\\.-]+@[\\w\\.-]+\\.\\w{2,4})|([a-zA-Z0-9]){1,32})$",
      "type": "string"
    },
    "Field-sUserlogintypeDescriptionX": {
      "description": "The description of the Userlogintype in the language of the requester",
      "example": "Email and phone or SMS",
      "type": "string"
    },
    "Field-sUserstagedExternalid": {
      "description": "The externalid of the Userstaged",
      "example": "azuread_6b303ca8-9e34-4c21-9a53-0856342dec5e",
      "pattern": "^.{1,60}$",
      "type": "string"
    },
    "Field-sUserstagedFirstname": {
      "description": "The firstname of the Userstaged",
      "example": "Jane",
      "pattern": "^.{0,20}$",
      "type": "string"
    },
    "Field-sUserstagedLastname": {
      "description": "The lastname of the Userstaged",
      "example": "Doe",
      "pattern": "^.{0,25}$",
      "type": "string"
    },
    "Field-sWebhookDescription": {
      "description": "The description of the Webhook",
      "example": "Import into our system",
      "type": "string"
    },
    "Field-sWebhookEmailfailed": {
      "description": "The email that will receive the Webhook in case all attempts fail",
      "example": "email@example.com",
      "type": "string"
    },
    "Field-sWebhookUrl": {
      "description": "The URL of the Webhook callback",
      "example": "https://www.example.com",
      "type": "string"
    },
    "Field-sWebsocketID": {
      "description": "The Unique ID of the Websocket Connection",
      "example": "G_omidyY4osCFEQ=",
      "pattern": "^[a-zA-Z0-9_-]{15}=$",
      "type": "string"
    },
    "Field-tEzsigndocumentDeclinedtosignreason": {
      "description": "A custom text message that will contain the refusal message if the Ezsigndocument is declined to sign",
      "example": "The conditions in the contract are different than those discuted",
      "type": "string"
    },
    "Field-tEzsignfolderMessage": {
      "description": "A custom text message that will be added to the email sent.",
      "example": "Hi everyone,\n\nThis is the document I need you to review.\n\nCould you sign it before Monday please.\n\nBest Regards.\n\nMary",
      "type": "string"
    },
    "Field-tEzsignfolderNote": {
      "description": "Note about the Ezsignfolder",
      "example": "This is a note",
      "type": "string"
    },
    "Field-tEzsignfoldersignerassociationMessage": {
      "description": "A custom text message that will be added to the email sent.",
      "example": "Hi John,\n\nThis is the document I need you to review.\n\nCould you sign it before Monday please.\n\nBest Regards.\n\nMary",
      "type": "string"
    },
    "Multilingual-EzsignsignergroupDescription": {
      "description": "Description of the Ezsignsignergroup",
      "properties": {
        "sEzsignsignergroupDescription1": {
          "$ref": "#/definitions/Field-sEzsignsignergroupDescription1"
        },
        "sEzsignsignergroupDescription2": {
          "$ref": "#/definitions/Field-sEzsignsignergroupDescription2"
        }
      },
      "type": "object"
    },
    "Webhook-Ezsign-DocumentCompleted": {
      "allOf": [
        {
          "properties": {
            "objEzsigndocument": {
              "$ref": "#/definitions/ezsigndocument-Response"
            }
          },
          "required": [
            "objEzsigndocument"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Webhook-Ezsign-EzsignsignerAcceptclause": {
      "allOf": [
        {
          "properties": {
            "objEzsignfolder": {
              "$ref": "#/definitions/ezsignfolder-Response"
            },
            "objEzsignfoldersignerassociation": {
              "$ref": "#/definitions/ezsignfoldersignerassociation-ResponseCompound"
            }
          },
          "required": [
            "objEzsignfoldersignerassociation"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Webhook-Ezsign-EzsignsignerConnect": {
      "allOf": [
        {
          "properties": {
            "objEzsignfolder": {
              "$ref": "#/definitions/ezsignfolder-Response"
            },
            "objEzsignfoldersignerassociation": {
              "$ref": "#/definitions/ezsignfoldersignerassociation-ResponseCompound"
            }
          },
          "required": [
            "objEzsignfoldersignerassociation"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Webhook-Ezsign-FolderCompleted": {
      "allOf": [
        {
          "properties": {
            "objEzsignfolder": {
              "$ref": "#/definitions/ezsignfolder-Response"
            }
          },
          "required": [
            "objEzsignfolder"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Webhook-User-UserCreated": {
      "allOf": [
        {
          "properties": {
            "objUser": {
              "$ref": "#/definitions/user-ResponseCompound"
            }
          },
          "required": [
            "objUser"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Webhook-Userstaged-UserstagedCreated": {
      "allOf": [
        {
          "properties": {
            "objUserstaged": {
              "$ref": "#/definitions/userstaged-ResponseCompound"
            }
          },
          "required": [
            "objUserstaged"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Webhook"
        }
      ],
      "description": "This is the base Webhook object",
      "type": "object"
    },
    "Websocket-RequestServer-GetWebsocketID-V1": {
      "description": "Request for Websocket GetWebsocketID V1",
      "properties": {
        "eWebsocketMessagetype": {
          "description": "The Type of message",
          "enum": [
            "RequestServer-GetWebsocketID-V1"
          ],
          "type": "string"
        }
      },
      "required": [
        "eWebsocketMessagetype"
      ],
      "type": "object"
    },
    "Websocket-Response-Error-V1": {
      "description": "Response for Websocket Error V1",
      "properties": {
        "eWebsocketMessagetype": {
          "description": "The Type of message",
          "enum": [
            "Response-Error-V1"
          ],
          "type": "string"
        },
        "mPayload": {
          "$ref": "#/definitions/Websocket-Response-Error-V1-mPayload"
        }
      },
      "required": [
        "eWebsocketMessagetype",
        "mPayload"
      ],
      "type": "object"
    },
    "Websocket-Response-Error-V1-mPayload": {
      "description": "Payload for Websocket Error V1",
      "properties": {
        "eErrorCode": {
          "$ref": "#/definitions/Field-eErrorCode"
        },
        "sErrorMessage": {
          "$ref": "#/definitions/Field-sErrorMessage"
        }
      },
      "required": [
        "eErrorCode",
        "sErrorMessage"
      ],
      "type": "object"
    },
    "Websocket-Response-GetWebsocketID-V1": {
      "description": "Response for Websocket GetWebsocketID V1",
      "properties": {
        "eWebsocketMessagetype": {
          "description": "The Type of message",
          "enum": [
            "Response-GetWebsocketID-V1"
          ],
          "type": "string"
        },
        "mPayload": {
          "$ref": "#/definitions/Websocket-Response-GetWebsocketID-V1-mPayload"
        }
      },
      "required": [
        "eWebsocketMessagetype",
        "mPayload"
      ],
      "type": "object"
    },
    "Websocket-Response-GetWebsocketID-V1-mPayload": {
      "description": "Payload for Websocket GetWebsocketID V1",
      "properties": {
        "sWebsocketID": {
          "$ref": "#/definitions/Field-sWebsocketID"
        }
      },
      "required": [
        "sWebsocketID"
      ],
      "type": "object"
    },
    "Websocket-Response-Information-V1": {
      "description": "Response for Websocket Information V1",
      "properties": {
        "eWebsocketMessagetype": {
          "description": "The Type of message",
          "enum": [
            "Response-Information-V1"
          ],
          "type": "string"
        },
        "mPayload": {
          "$ref": "#/definitions/Websocket-Response-Information-V1-mPayload"
        }
      },
      "required": [
        "eWebsocketMessagetype",
        "mPayload"
      ],
      "type": "object"
    },
    "Websocket-Response-Information-V1-mPayload": {
      "description": "Payload for Websocket Information V1",
      "properties": {
        "sInformationMessage": {
          "description": "Information message",
          "example": "Rasterizing pages",
          "type": "string"
        }
      },
      "required": [
        "sInformationMessage"
      ],
      "type": "object"
    },
    "attempt-Response": {
      "description": "An Attempt object",
      "example": {
        "dtAttemptStart": "2020-12-31 23:59:59",
        "iAttemptDuration": 1,
        "sAttemptResult": "Success"
      },
      "properties": {
        "dtAttemptStart": {
          "$ref": "#/definitions/Common-Format-DateTime"
        },
        "iAttemptDuration": {
          "description": "The number of second it took to process the webhook or get an error",
          "type": "integer"
        },
        "sAttemptResult": {
          "description": "The Success or Failure message of the attempt when we tried to call the URL to deliver the webhook event.",
          "type": "string"
        }
      },
      "required": [
        "sAttemptResult",
        "dtAttemptStart",
        "iAttemptDuration"
      ],
      "type": "object"
    },
    "attempt-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/attempt-Response"
        }
      ],
      "description": "An Attempt object and children to create a complete structure",
      "type": "object"
    },
    "email-Response": {
      "description": "An Email Object",
      "properties": {
        "fkiEmailtypeID": {
          "$ref": "#/definitions/Field-pkiEmailtypeID"
        },
        "pkiEmailID": {
          "$ref": "#/definitions/Field-pkiEmailID"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        }
      },
      "required": [
        "pkiEmailID",
        "fkiEmailtypeID",
        "sEmailAddress"
      ],
      "type": "object"
    },
    "email-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/email-Response"
        }
      ],
      "description": "An Email Object and children to create a complete structure",
      "type": "object"
    },
    "ezsigndocument-Response": {
      "description": "An Ezsigndocument Object",
      "properties": {
        "bEzsigndocumentEzsignform": {
          "$ref": "#/definitions/Computed-bEzsigndocumentEzsignform"
        },
        "bEzsigndocumentHassignedsignatures": {
          "$ref": "#/definitions/Field-bEzsigndocumentHassignedsignatures"
        },
        "dtEzsigndocumentDuedate": {
          "$ref": "#/definitions/Field-dtEzsigndocumentDuedate"
        },
        "dtEzsigndocumentFirstsend": {
          "$ref": "#/definitions/Field-dtEzsigndocumentFirstsend"
        },
        "dtEzsigndocumentLastsend": {
          "$ref": "#/definitions/Field-dtEzsigndocumentLastsend"
        },
        "dtEzsignformCompleted": {
          "$ref": "#/definitions/Field-dtEzsignformCompleted"
        },
        "eEzsigndocumentStep": {
          "$ref": "#/definitions/Field-eEzsigndocumentStep"
        },
        "fkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "fkiEzsignfoldersignerassociationIDDeclinedtosign": {
          "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
        },
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "iEzsigndocumentOrder": {
          "$ref": "#/definitions/Field-iEzsigndocumentOrder"
        },
        "iEzsigndocumentPagetotal": {
          "$ref": "#/definitions/Field-iEzsigndocumentPagetotal"
        },
        "iEzsigndocumentSignaturesigned": {
          "$ref": "#/definitions/Field-iEzsigndocumentSignaturesigned"
        },
        "iEzsigndocumentSignaturetotal": {
          "$ref": "#/definitions/Field-iEzsigndocumentSignaturetotal"
        },
        "objAudit": {
          "$ref": "#/definitions/Common-Audit"
        },
        "pkiEzsigndocumentID": {
          "$ref": "#/definitions/Field-pkiEzsigndocumentID"
        },
        "sEzsigndocumentExternalid": {
          "$ref": "#/definitions/Common-Format-ExternalID"
        },
        "sEzsigndocumentMD5initial": {
          "$ref": "#/definitions/Computed-sEzsigndocumentMD5initial"
        },
        "sEzsigndocumentMD5signed": {
          "$ref": "#/definitions/Computed-sEzsigndocumentMD5signed"
        },
        "sEzsigndocumentName": {
          "$ref": "#/definitions/Field-sEzsigndocumentName"
        },
        "tEzsigndocumentDeclinedtosignreason": {
          "$ref": "#/definitions/Field-tEzsigndocumentDeclinedtosignreason"
        }
      },
      "required": [
        "pkiEzsigndocumentID",
        "fkiEzsignfolderID",
        "dtEzsigndocumentDuedate",
        "sEzsigndocumentName",
        "eEzsigndocumentStep",
        "iEzsigndocumentOrder",
        "iEzsigndocumentPagetotal",
        "iEzsigndocumentSignaturesigned",
        "iEzsigndocumentSignaturetotal"
      ],
      "type": "object"
    },
    "ezsignfolder-Request": {
      "description": "An Ezsignfolder Object",
      "properties": {
        "eEzsignfolderSendreminderfrequency": {
          "$ref": "#/definitions/Field-eEzsignfolderSendreminderfrequency"
        },
        "fkiEzsignfoldertypeID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
        },
        "fkiEzsigntsarequirementID": {
          "$ref": "#/definitions/Field-pkiEzsigntsarequirementID"
        },
        "pkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "sEzsignfolderDescription": {
          "$ref": "#/definitions/Field-sEzsignfolderDescription"
        },
        "sEzsignfolderExternalid": {
          "$ref": "#/definitions/Common-Format-ExternalID"
        },
        "tEzsignfolderNote": {
          "$ref": "#/definitions/Field-tEzsignfolderNote"
        }
      },
      "required": [
        "fkiEzsignfoldertypeID",
        "sEzsignfolderDescription",
        "tEzsignfolderNote",
        "eEzsignfolderSendreminderfrequency"
      ],
      "type": "object"
    },
    "ezsignfolder-RequestCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/ezsignfolder-Request"
        }
      ],
      "description": "An Ezsignfolder Object and children to create a complete structure",
      "type": "object"
    },
    "ezsignfolder-Response": {
      "description": "An Ezsignfolder Object",
      "properties": {
        "bEzsignfolderIsdisposable": {
          "$ref": "#/definitions/Computed-bEzsignfolderIsdisposable"
        },
        "dtEzsignfolderClose": {
          "$ref": "#/definitions/Field-dtEzsignfolderClose"
        },
        "dtEzsignfolderDelayedsenddate": {
          "$ref": "#/definitions/Field-dtEzsignfolderDelayedsenddate"
        },
        "dtEzsignfolderDuedate": {
          "$ref": "#/definitions/Computed-dtEzsignfolderDuedate"
        },
        "dtEzsignfolderScheduledarchive": {
          "$ref": "#/definitions/Computed-dtEzsignfolderScheduledarchive"
        },
        "dtEzsignfolderScheduleddispose": {
          "$ref": "#/definitions/Computed-dtEzsignfolderScheduleddispose"
        },
        "dtEzsignfolderSentdate": {
          "$ref": "#/definitions/Field-dtEzsignfolderSentdate"
        },
        "eEzsignfolderSendreminderfrequency": {
          "$ref": "#/definitions/Field-eEzsignfolderSendreminderfrequency"
        },
        "eEzsignfolderStep": {
          "$ref": "#/definitions/Field-eEzsignfolderStep"
        },
        "fkiBillingentityinternalID": {
          "$ref": "#/definitions/Field-pkiBillingentityinternalID"
        },
        "fkiEzsignfoldertypeID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
        },
        "fkiEzsigntsarequirementID": {
          "$ref": "#/definitions/Field-pkiEzsigntsarequirementID"
        },
        "objAudit": {
          "$ref": "#/definitions/Common-Audit"
        },
        "objEzsignfoldertype": {
          "$ref": "#/definitions/Custom-Ezsignfoldertype-Response"
        },
        "pkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "sBillingentityinternalDescriptionX": {
          "$ref": "#/definitions/Field-sBillingentityinternalDescriptionX"
        },
        "sEzsignfolderDescription": {
          "$ref": "#/definitions/Field-sEzsignfolderDescription"
        },
        "sEzsignfolderExternalid": {
          "$ref": "#/definitions/Common-Format-ExternalID"
        },
        "sEzsignfoldertypeNameX": {
          "type": "string",
          "x-deprecated": true
        },
        "sEzsigntsarequirementDescriptionX": {
          "$ref": "#/definitions/Field-sEzsigntsarequirementDescriptionX"
        },
        "tEzsignfolderMessage": {
          "$ref": "#/definitions/Field-tEzsignfolderMessage"
        },
        "tEzsignfolderNote": {
          "$ref": "#/definitions/Field-tEzsignfolderNote"
        }
      },
      "required": [
        "pkiEzsignfolderID",
        "sEzsignfolderDescription"
      ],
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Request": {
      "description": "Request for POST /2/object/ezsignfolder",
      "properties": {
        "a_objEzsignfolder": {
          "items": {
            "$ref": "#/definitions/ezsignfolder-RequestCompound"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_objEzsignfolder"
      ],
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Response": {
      "allOf": [
        {
          "properties": {
            "mPayload": {
              "$ref": "#/definitions/ezsignfolder-createObject-v2-Response-mPayload"
            }
          },
          "required": [
            "mPayload"
          ],
          "type": "object"
        },
        {
          "$ref": "#/definitions/Common-Response"
        }
      ],
      "description": "Response for POST /2/object/ezsignfolder",
      "type": "object"
    },
    "ezsignfolder-createObject-v2-Response-mPayload": {
      "description": "Payload for POST /2/object/ezsignfolder",
      "properties": {
        "a_pkiEzsignfolderID": {
          "description": "An array of unique IDs representing the object that were requested to be created.\n\nThey are returned in the same order as the array containing the objects to be created that was sent in the request.",
          "items": {
            "$ref": "#/definitions/Field-pkiEzsignfolderID"
          },
          "minItems": 1,
          "type": "array"
        }
      },
      "required": [
        "a_pkiEzsignfolderID"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-Response": {
      "description": "An Ezsignfoldersignerassociation Object",
      "properties": {
        "bEzsignfoldersignerassociationDelayedsend": {
          "$ref": "#/definitions/Field-bEzsignfoldersignerassociationDelayedsend"
        },
        "bEzsignfoldersignerassociationReceivecopy": {
          "$ref": "#/definitions/Field-bEzsignfoldersignerassociationReceivecopy"
        },
        "fkiEzsignfolderID": {
          "$ref": "#/definitions/Field-pkiEzsignfolderID"
        },
        "pkiEzsignfoldersignerassociationID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldersignerassociationID"
        },
        "tEzsignfoldersignerassociationMessage": {
          "$ref": "#/definitions/Field-tEzsignfoldersignerassociationMessage"
        }
      },
      "required": [
        "pkiEzsignfoldersignerassociationID",
        "fkiEzsignfolderID",
        "bEzsignfoldersignerassociationDelayedsend",
        "bEzsignfoldersignerassociationReceivecopy",
        "tEzsignfoldersignerassociationMessage"
      ],
      "type": "object"
    },
    "ezsignfoldersignerassociation-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/ezsignfoldersignerassociation-Response"
        },
        {
          "properties": {
            "objEzsignsigner": {
              "$ref": "#/definitions/ezsignsigner-ResponseCompound"
            },
            "objEzsignsignergroup": {
              "$ref": "#/definitions/ezsignsignergroup-ResponseCompound"
            },
            "objUser": {
              "$ref": "#/definitions/ezsignfoldersignerassociation-ResponseCompound-User"
            }
          },
          "type": "object"
        }
      ],
      "description": "An Ezsignfoldersignerassociation Object",
      "type": "object"
    },
    "ezsignfoldersignerassociation-ResponseCompound-User": {
      "description": "A Ezsignfoldersignerassociation->User Object and children to create a complete structure",
      "properties": {
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "pkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        },
        "sUserFirstname": {
          "$ref": "#/definitions/Field-sUserFirstname"
        },
        "sUserLastname": {
          "$ref": "#/definitions/Field-sUserLastname"
        }
      },
      "required": [
        "pkiUserID",
        "fkiLanguageID",
        "sUserFirstname",
        "sUserLastname",
        "sEmailAddress"
      ],
      "type": "object"
    },
    "ezsignsigner-Response": {
      "description": "An Ezsignsigner Object",
      "properties": {
        "fkiSecretquestionID": {
          "$ref": "#/definitions/Field-pkiSecretquestionID"
        },
        "fkiTaxassignmentID": {
          "$ref": "#/definitions/Field-pkiTaxassignmentID"
        },
        "fkiUserlogintypeID": {
          "$ref": "#/definitions/Field-pkiUserlogintypeID"
        },
        "pkiEzsignsignerID": {
          "$ref": "#/definitions/Field-pkiEzsignsignerID"
        },
        "sUserlogintypeDescriptionX": {
          "$ref": "#/definitions/Field-sUserlogintypeDescriptionX"
        }
      },
      "required": [
        "pkiEzsignsignerID",
        "fkiTaxassignmentID",
        "fkiUserlogintypeID",
        "sUserlogintypeDescriptionX"
      ],
      "type": "object"
    },
    "ezsignsigner-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/ezsignsigner-Response"
        },
        {
          "properties": {
            "objContact": {
              "$ref": "#/definitions/ezsignsigner-ResponseCompound-Contact"
            }
          },
          "required": [
            "objContact"
          ],
          "type": "object"
        }
      ],
      "description": "An Ezsignsigner Object and children to create a complete structure",
      "type": "object"
    },
    "ezsignsigner-ResponseCompound-Contact": {
      "description": "A Ezsignsigner->Contact Object and children to create a complete structure",
      "properties": {
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "pkiContactID": {
          "$ref": "#/definitions/Field-pkiContactID"
        },
        "sContactFirstname": {
          "$ref": "#/definitions/Field-sContactFirstname"
        },
        "sContactLastname": {
          "$ref": "#/definitions/Field-sContactLastname"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        },
        "sPhoneE164": {
          "$ref": "#/definitions/Field-sPhoneE164"
        },
        "sPhoneE164Cell": {
          "$ref": "#/definitions/Field-sPhoneE164"
        },
        "sPhoneExtension": {
          "$ref": "#/definitions/Field-sPhoneExtension"
        }
      },
      "required": [
        "pkiContactID",
        "sContactFirstname",
        "sContactLastname",
        "fkiLanguageID"
      ],
      "type": "object"
    },
    "ezsignsignergroup-Response": {
      "description": "An Ezsignsignergroup Object",
      "properties": {
        "objEzsignsignergroupDescription": {
          "$ref": "#/definitions/Multilingual-EzsignsignergroupDescription"
        },
        "pkiEzsignsignergroupID": {
          "$ref": "#/definitions/Field-pkiEzsignsignergroupID"
        },
        "sEzsignsignergroupDescriptionX": {
          "$ref": "#/definitions/Field-sEzsignsignergroupDescriptionX"
        }
      },
      "required": [
        "pkiEzsignsignergroupID",
        "objEzsignsignergroupDescription"
      ],
      "type": "object"
    },
    "ezsignsignergroup-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/ezsignsignergroup-Response"
        },
        {
          "type": "object"
        }
      ],
      "description": "An Ezsignsignergroup Object",
      "type": "object"
    },
    "phone-Response": {
      "description": "A Phone Object",
      "properties": {
        "ePhoneType": {
          "$ref": "#/definitions/Field-ePhoneType"
        },
        "fkiPhonetypeID": {
          "$ref": "#/definitions/Field-pkiPhonetypeID"
        },
        "pkiPhoneID": {
          "$ref": "#/definitions/Field-pkiPhoneID"
        },
        "sPhoneE164": {
          "$ref": "#/definitions/Field-sPhoneE164"
        },
        "sPhoneExtension": {
          "$ref": "#/definitions/Field-sPhoneExtension"
        }
      },
      "required": [
        "pkiPhoneID",
        "fkiPhonetypeID"
      ],
      "type": "object"
    },
    "phone-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/phone-Response"
        }
      ],
      "description": "A Phone Object and children to create a complete structure",
      "type": "object"
    },
    "user-Response": {
      "description": "A User Object",
      "properties": {
        "bUserAttachmentautoverified": {
          "$ref": "#/definitions/Field-bUserAttachmentautoverified"
        },
        "bUserChangepassword": {
          "$ref": "#/definitions/Field-bUserChangepassword"
        },
        "bUserIsactive": {
          "$ref": "#/definitions/Field-bUserIsactive"
        },
        "bUserValidatebyadministration": {
          "$ref": "#/definitions/Field-bUserValidatebyadministration"
        },
        "bUserValidatebydirector": {
          "$ref": "#/definitions/Field-bUserValidatebydirector"
        },
        "dtUserEzsignprepaidexpiration": {
          "$ref": "#/definitions/Field-dtUserEzsignprepaidexpiration"
        },
        "dtUserLastlogondate": {
          "$ref": "#/definitions/Field-dtUserLastlogondate"
        },
        "dtUserPasswordchanged": {
          "$ref": "#/definitions/Field-dtUserPasswordchanged"
        },
        "eUserEzsignaccess": {
          "$ref": "#/definitions/Field-eUserEzsignaccess"
        },
        "eUserLogintype": {
          "$ref": "#/definitions/Field-eUserLogintype"
        },
        "eUserOrigin": {
          "$ref": "#/definitions/Field-eUserOrigin"
        },
        "eUserType": {
          "$ref": "#/definitions/Field-eUserType"
        },
        "fkiAgentID": {
          "$ref": "#/definitions/Field-pkiAgentID"
        },
        "fkiAssistantID": {
          "$ref": "#/definitions/Field-pkiAssistantID"
        },
        "fkiBillingentityinternalID": {
          "$ref": "#/definitions/Field-pkiBillingentityinternalID"
        },
        "fkiBrokerID": {
          "$ref": "#/definitions/Field-pkiBrokerID"
        },
        "fkiCompanyIDDefault": {
          "$ref": "#/definitions/Field-pkiCompanyID"
        },
        "fkiDepartmentIDDefault": {
          "$ref": "#/definitions/Field-pkiDepartmentID"
        },
        "fkiEmployeeID": {
          "$ref": "#/definitions/Field-pkiEmployeeID"
        },
        "fkiLanguageID": {
          "$ref": "#/definitions/Field-pkiLanguageID"
        },
        "fkiModuleIDForm": {
          "$ref": "#/definitions/Field-pkiModuleID"
        },
        "fkiSecretquestionID": {
          "$ref": "#/definitions/Field-pkiSecretquestionID"
        },
        "fkiTimezoneID": {
          "$ref": "#/definitions/Field-pkiTimezoneID"
        },
        "objAudit": {
          "$ref": "#/definitions/Common-Audit"
        },
        "objEmail": {
          "$ref": "#/definitions/email-ResponseCompound"
        },
        "objPhoneHome": {
          "$ref": "#/definitions/phone-ResponseCompound"
        },
        "objPhoneSMS": {
          "$ref": "#/definitions/phone-ResponseCompound"
        },
        "pkiUserID": {
          "$ref": "#/definitions/Field-pkiUserID"
        },
        "sBillingentityinternalDescriptionX": {
          "$ref": "#/definitions/Field-sBillingentityinternalDescriptionX"
        },
        "sCompanyNameX": {
          "$ref": "#/definitions/Field-sCompanyNameX"
        },
        "sDepartmentNameX": {
          "$ref": "#/definitions/Field-sDepartmentNameX"
        },
        "sLanguageNameX": {
          "$ref": "#/definitions/Field-sLanguageNameX"
        },
        "sModuleNameX": {
          "$ref": "#/definitions/Field-sModuleNameX"
        },
        "sTimezoneName": {
          "$ref": "#/definitions/Field-sTimezoneName"
        },
        "sUserFirstname": {
          "$ref": "#/definitions/Field-sUserFirstname"
        },
        "sUserLastname": {
          "$ref": "#/definitions/Field-sUserLastname"
        },
        "sUserLoginname": {
          "$ref": "#/definitions/Field-sUserLoginname"
        }
      },
      "required": [
        "pkiUserID",
        "fkiCompanyIDDefault",
        "sCompanyNameX",
        "fkiDepartmentIDDefault",
        "sDepartmentNameX",
        "fkiTimezoneID",
        "sTimezoneName",
        "fkiLanguageID",
        "sLanguageNameX",
        "objEmail",
        "fkiBillingentityinternalID",
        "sBillingentityinternalDescriptionX",
        "sUserFirstname",
        "sUserLastname",
        "eUserOrigin",
        "eUserType",
        "eUserLogintype",
        "sUserLoginname",
        "eUserEzsignaccess",
        "bUserIsactive",
        "bUserChangepassword",
        "objAudit"
      ],
      "type": "object"
    },
    "user-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/user-Response"
        }
      ],
      "description": "A User Object and children to create a complete structure",
      "type": "object"
    },
    "userstaged-Response": {
      "description": "A Userstaged Object",
      "properties": {
        "fkiEmailID": {
          "$ref": "#/definitions/Field-pkiEmailID"
        },
        "pkiUserstagedID": {
          "$ref": "#/definitions/Field-pkiUserstagedID"
        },
        "sEmailAddress": {
          "$ref": "#/definitions/Field-sEmailAddress"
        },
        "sUserstagedExternalid": {
          "$ref": "#/definitions/Field-sUserstagedExternalid"
        },
        "sUserstagedFirstname": {
          "$ref": "#/definitions/Field-sUserstagedFirstname"
        },
        "sUserstagedLastname": {
          "$ref": "#/definitions/Field-sUserstagedLastname"
        }
      },
      "required": [
        "pkiUserstagedID",
        "fkiEmailID",
        "sEmailAddress",
        "sUserstagedFirstname",
        "sUserstagedLastname",
        "sUserstagedExternalid"
      ],
      "type": "object"
    },
    "userstaged-ResponseCompound": {
      "allOf": [
        {
          "$ref": "#/definitions/userstaged-Response"
        }
      ],
      "description": "A Userstaged Object",
      "type": "object"
    },
    "webhook-Response": {
      "description": "A webhook object",
      "properties": {
        "bWebhookIsactive": {
          "$ref": "#/definitions/Field-bWebhookIsactive"
        },
        "bWebhookSkipsslvalidation": {
          "$ref": "#/definitions/Field-bWebhookSkipsslvalidation"
        },
        "eWebhookEzsignevent": {
          "$ref": "#/definitions/Field-eWebhookEzsignevent"
        },
        "eWebhookManagementevent": {
          "$ref": "#/definitions/Field-eWebhookManagementevent"
        },
        "eWebhookModule": {
          "$ref": "#/definitions/Field-eWebhookModule"
        },
        "fkiEzsignfoldertypeID": {
          "$ref": "#/definitions/Field-pkiEzsignfoldertypeID"
        },
        "pkiWebhookID": {
          "$ref": "#/definitions/Field-pkiWebhookID"
        },
        "sEzsignfoldertypeNameX": {
          "$ref": "#/definitions/Field-sEzsignfoldertypeNameX"
        },
        "sWebhookDescription": {
          "$ref": "#/definitions/Field-sWebhookDescription"
        },
        "sWebhookEmailfailed": {
          "$ref": "#/definitions/Field-sWebhookEmailfailed"
        },
        "sWebhookUrl": {
          "$ref": "#/definitions/Field-sWebhookUrl"
        }
      },
      "required": [
        "pkiWebhookID",
        "sWebhookDescription",
        "eWebhookModule",
        "sWebhookUrl",
        "bWebhookTest",
        "bWebhookSkipsslvalidation",
        "sWebhookEmailfailed"
      ],
      "type": "object"
    }
  },
  "securityDefinitions": {
    "Authorization": {
      "description": "This is the normal Authorization scheme where the apiKey is sent in the Authorization http header",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "Bearer": {
      "description": "This is the Bearer scheme where the apiKey is sent in the Authorization http header prefixed with \"Bearer \"",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    },
    "Presigned": {
      "description": "This is a special Authorization scheme where the apiKey is sent in a url parameter.\n\nThat kind of Authorization can only generated by the server since it's used only for presigned Urls.",
      "in": "query",
      "name": "sAuthorization",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "All notable changes to this project will be documented in this section.\r\n\r\nVersion numbers are using **MAJOR**.**MINOR**.**PATCH** numbering format for example 1.2.23\r\n\r\n**MAJOR** will be incremented only if there is an incompatible breaking change. New distinct documentation and specification files will be published.\r\n\r\n**MINOR** will be incremented only if a function becomes deprecated or deleted (after being deprecated in a previous version)\r\n\r\n**PATCH** will be incremented everytime changes and additions are released.\r\n\r\nFor each version, there will be the list of changes:\r\n* **Added** for new features.\r\n* **Changed** for changes in existing functionality.\r\n* **Deprecated** for soon-to-be removed features.\r\n* **Removed** for now removed features.\r\n* **Fixed** for any bug fixes.\r\n* **Security** in case of vulnerabilities.\r\n\r\n**Removal lifecycle**<br>\r\nOnce a function becomes **Deprecated**, we monitor its usage to track how many users are still using it.\r\nAfter a long period of time, if a minority of users are still using the function, we might ask users to update to the newer version of the function and give them ample time to do so.\r\nOnly after that delay expires (or no more users are still using it), we will have the function **Removed**.\r\n\r\n## 1.2.X Releases\r\n\r\n### [1.2.0] - 2023-09-24\r\n\r\n#### Added\r\n- DELETE /1/object/usergroupdelegation/{pkiUsergroupdelegationID}\r\n- GET /1/object/activesession/getDocumentationUrl\r\n- GET /1/object/user/{pkiUserID}/getApikeys\r\n- GET /1/object/usergroup/{pkiUsergroupID}/getUsergroupdelegations\r\n- GET /2/object/usergroupdelegation/{pkiUsergroupdelegationID}\r\n- POST /1/object/user/{pkiUserID}/sendPasswordReset\r\n- POST /1/object/usergroup/{pkiUsergroupID}/editUsergroupdelegations\r\n- POST /1/object/usergroupdelegation\r\n- PUT /1/object/usergroupdelegation/{pkiUsergroupdelegationID}\r\n- Added avanced search filters sContactFirstname, sContactLastname and sEzsigndocumentName to Ezsignfolder list\r\n- Added property bVersionDeprecated in Common-Response-objDebugPayload\r\n- Added property eEzsigndocumentSteptype in ezsigndocument-ResponseCompound\r\n- Added property iEzsigntemplatesignatureWidth and iEzsigntemplatesignatureHeight in object ezsigntemplatesignature-Request and ezsigntemplatesignature-Response\r\n- Added property eEzsignformfieldgroupTextvalidation in ezsignformfieldgroup-Response\r\n- Added property eEzsigntemplateformfieldgroupTextvalidation in ezsigntemplateformfieldgroup-Request and ezsigntemplateformfieldgroup-Response\r\n- Added property iEzsignsignatureMaxlength in ezsignsignature-Request and ezsignsignature-Response\r\n- Added properties iEzsigntemplatesignatureMaxlength, sEzsigntemplatesignatureRegexp and eEzsigntemplatesignatureTextvalidation in ezsigntemplatesignature-Request and ezsigntemplatesignature-Response\r\n- Added property objContactNameDelegation in ezsignsignature-Response\r\n- Added property objEzsignfoldertype in ezsignfolder-Response\r\n- Added property bEzsignformfieldAutocomplete in ezsignformfield-Request and ezsignformfield-Responce\r\n- Added property bEzsigntemplateformfieldAutocomplete in ezsigntemplateformfield-Request and ezsigntemplateformfield-Responce\r\n- Added properties bEzsignfoldertypeDelegate and bEzsignfoldertypeReassign in Custom-Ezsignfoldertype-Response, ezsignfoldertype-Request and ezsignfoldertype-Response\r\n- Added value AgentBrokerEzsignUserNormal for sSelector in GET /2/object/user/getAutocomplete/{sSelector}\r\n- Added value AllButEveryone for sSelector in GET /2/object/usergroup/getAutocomplete/{sSelector}\r\n- New 401 error code UNAUTHORIZED_REQUEST_APIKEY\r\n- New 401 error code UNAUTHORIZED_REQUEST_PRESIGNED \r\n\r\n## Older Releases\r\nDocumentation and changelog for older releases can be found here\r\n- [1.1.x Releases Documentation (Full)](https://ezmaxinc.github.io/eZmax-API/docs/full/ezmax.v1.1.html)\r\n- [1.0.x Releases Documentation (Full)](https://ezmaxinc.github.io/eZmax-API/docs/full/ezmax.v1.0.html)",
      "name": "General_Changelog",
      "x-displayName": "Changelog"
    },
    {
      "description": "## Variables\n\nWe use a custom type base naming convention for variables.\n\nEach variable name is composed of up to 6 indicators\n1. **Array** (Optional) *a_* when we are dealing with an array.\n2. **Key** (Optional) *pk* when we are dealing with a primary key or *fk* for foreign key.\n3. **Type** Will always be in lowercase and represent the type of the variable.\n4. **Table** The first letter in uppercase and the rest in lowercase and represents the table name from where the variable was retrieved.\n5. **Field** (Optional) The first letter is uppercase and the rest is lowercase and represents the field name.\n6. **Discriminator** (Optional) Will be present only when two identical fields are stored in the same table to differenciate one from the other. \n\nHere is a summary table explaining the convention.\n\n|  | Array | Key | Type | Table | Field | Discriminator |\n|---|---|---|---|---|---|---|\n| **Optional** | Yes | Yes | No | No | Yes | Yes |\n| **Naming** | Fixed | Fixed | Lowercase | First letter is uppercase and the rest is lowercase | First letter is uppercase and the rest is lowercase except for the Field *ID* wich is always uppercase | First letter is uppercase and the rest is lowercase |\n| **Values** | a_ | pk<br>fk<br>efk | s (string)<br>t (text)<br>c (char)<br>sha (sha-1 string)<br>md5 (md5 string)<br>bin (binary string)<br>i (integer)<br>f (float)<br>d (decimal)<br>e (enum)<br>dt (date or datetime)<br>b (boolean)<br>obj (object)<br>m (mixed) | Any | Any | Any |\n\nHere are examples of typical variables' names\n\n| Variable name | Array | key | Type | Table | Field | Discriminator | Explanation | Example |\n|---|---|---|---|---|---|---|---|---|\n| pkiContactID |  | pk | i | Contact | ID |  | Primary key of type integer for the field name *ID* in table *Contact* | 133 |\n| fkiContactID |  | fk | i | Contact | ID |  | Foreign key of type integer pointing to the field *pkiContactID* in table *Contact* | 133 |\n| efkiContactID |  | efk | i | Contact | ID |  | External foreign key of type integer pointing to the field *pkiContactID* in table *Contact* | 133 |\n| fkiContactIDOwner |  | fk | i | Contact | ID | Owner | Foreign key of type integer pointing to the field *pkiContactID* in table *Contact* with a discriminator of *Owner* | 266 |\n| sContactFirstname |  |  | s | Contact | Firstname |  | String for the Field *Firstname* in table *Contact* | John |\n| bPurchaseIspaid |  |  | b | Purchase | Ispaid |  | Boolean for the field Ispaid in table *Purchase* | true |\n| dPurchaseTotal |  |  | d | Purchase | Total |  | Decimal number for the field *Total* in table *Purchase* | 2199.78 |\n| objEzsignfolder |  |  | obj | Esignfolder |  |  | Object of type *Ezsignfolder* | {\"pkiEzsignfolderID\": 122, \"sEzsignfolderName\": \"Test\"} |\n| a_objEzsignfolder | a_ |  | obj | Ezsignfolder |  |  | Array of objects of type *Ezsignfolder* | [{\"pkiEzsignfolderID\": 122, \"sEzsignfolderName\": \"Test\"}, {\"pkiEzsignfolderID\": 234, \"sEzsignfolderName\": \"Test 2\"}] |\n| a_sContactFirstname | a_ |  | s | Contact | Firstname |  | An array of string for the field *Firstname* in table *Contact* | ['John', 'Mary', 'Jane'] |\n| a_pkiContactIDOwner | a_ | pk | i | Contact | ID | Owner | An array of foreign keys of type integer pointing to the field *pkiContactID* in table *Contact* with a discriminator of *Owner* | [266, 277, 288] |\n\n## List filter\n\nEvery GetList Endpoint has a *sFilter* query parameter that can be used to filter the returned elements.\n\nThe sFilter parameter's syntax is not documented at the endpoint's level since it would be redundant. This section documents the syntax.\n\n* Every property returned by the endpoint can be used to build the *sFilter* string. Except for rare exceptions.\n* Each filter can be joined by the *and* operator\n* Not every property supports every operator. The list of valid operators is based on the variable type. For example, only strings support the *like* operator. You can refer to the *Variables* article in the *Conventions* section of the documentation to learn about variable types.\n* Variables of type *Enum* have predetermined list of filters which will be documented at the endpoint's level.\n* *sFilter*'s value must be url encoded.\n* String values need to be enclosed in single quotes\n\nValid operators for boolean values:\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | bEzsigndocumentEzsignclause eq true<br>bEzsigndocumentEzsignclause eq false |\n\nValid operators for integer values:\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | iEzsigndocumentPagetotal eq 10 |\n| gt | Greater than | iEzsigndocumentPagetotal gt 10 |\n| gte | Greater than or equal to | iEzsigndocumentPagetotal gte 10 |\n| lt | Less than | iEzsigndocumentPagetotal lt 100 |\n| lte | Less than or equal to | iEzsigndocumentPagetotal lte 100 |\n| in | in list | fkiEzsignfoldertypeID in '1,2,3' |\n\nValid operators for date and datetime values:\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | dtEzsigndocumentDuedate eq '2005-07-01 18:15:59'<br>dtEzsigndocumentDuedate eq '2005-07-01' |\n| gt | Greater than | dtEzsigndocumentDuedate gt '2001-01-01 00:00:00'<br>dtEzsigndocumentDuedate gt '2001-01-01' |\n| gte | Greater than or equal to | dtEzsigndocumentDuedate gte '2001-01-01 00:00:00'<br>dtEzsigndocumentDuedate gte '2001-01-01' |\n| lt | Less than | dtEzsigndocumentDuedate lt '2025-12-31 23:59:59'<br>dtEzsigndocumentDuedate lt '2025-12-31' |\n| lte | Less than or equal to | dtEzsigndocumentDuedate lte '2025-12-31 23:59:59'<br>dtEzsigndocumentDuedate lte '2025-12-31' |\n| rg | In the range of<br>*see range documentation*| dtEzsigndocumentDuedate rg '=m,=m+7d' |\n\nValid operators for string values:\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | sEzsigndocumentName  eq 'Test contract' |\n| like | Search for a partial string with *%* wildcard | sEzsigndocumentName  like 'Test contra%'<br>sEzsigndocumentName  like '%contract'<br>sEzsigndocumentName  like '%con%' |\n\nValid operators for enum values (valid values are documented at the endpoint's level):\n\n| Operator | Description | Examples |\n|---|---|---|\n| eq | Equals | eEzsigndocumentStep eq 'PartiallySigned' |\n| in | in list | eEzsigndocumentStep in 'PartiallySigned,Archived' |\n\nExample of combining multiple filter together:\n\n`sFilter=bEzsigndocumentEzsignclause eq true and iEzsigndocumentPagetotal gt 10 and iEzsigndocumentPagetotal lte 100 and dtEzsigndocumentDuedate gt '2001-01-01 00:00:00' and dtEzsigndocumentDuedate lte '2025-12-31 23:59:59' and sEzsigndocumentName  like '%con%' and eEzsigndocumentStep eq 'PartiallySigned' and fkiEzsignfoldertypeID in '1,2,3' and dtEzsigndocumentDuedate rg '=m,=m+7d'`\n\nSame example, but properly url encoded:\n\n`sFilter=bEzsigndocumentEzsignclause%20eq%20true%20and%20iEzsigndocumentPagetotal%20gt%2010%20and%20iEzsigndocumentPagetotal%20lte%20100%20and%20dtEzsigndocumentDuedate%20gt%20%272001-01-01%2000%3A00%3A00%27%20and%20dtEzsigndocumentDuedate%20lte%20%272025-12-31%2023%3A59%3A59%27%20and%20sEzsigndocumentName%20%20like%20%27%25con%25%27%20and%20eEzsigndocumentStep%20eq%20%27PartiallySigned%27%20and%20fkiEzsignfoldertypeID%20in%20%271%2C2%2C3%27%20and%20dtEzsigndocumentDuedate%20rg%20%27%3Dm%2C%3Dm%2B7d%27`\n\n## Range operator\n\nDates in list filter can use a \"rg\" operator for ranges. This allows to filter data based on relative dates. The range operator is just another way to compute filters dates.\n\nFor the rest of this section, let's assume today's date is February 25th 2019 and the time is 10:15:37. Let's assume that we want to filter on dtInvoiceDate.\n\nIf we wanted to get all the invoices that were generated in the previous month, we could do (not url encoded for readability purposes):\nsFilter=dtInvoiceDate gte '2019-01-01 00:00:00' and dtInvoiceDate lte '2019-01-31 23:59:59'\n\nRange operator is useful to transfer the complexity of date computation to the api instead of the calling application.\n\nThe general format of the range operator is:\ndtInvoiceDate rg '**[STARTDATE]**,**[ENDDATE]**'\n\nBoth **[STARTDATE]** and **[ENDDATE]** use the same format which is a sequence of 1 or more **[SUBSECTION]** so for example, we could have:\ndtInvoiceDate rg '**[SUBSECTION]**,**[SUBSECTION][SUBSECTION][SUBSECTION][SUBSECTION]**'\n\nBoth **[STARTDATE]** and **[ENDDATE]** have a starting time equal to current time (so in this example 2019-02-25 10:15:37)\n\n**[SUBSECTION]** start with an operator which can be either **=** to reset the pointer, **+** to move forward in time or **-** to move backward in time. \n\nThe **=** operator can be directly followed by a letter representing the **[PERIOD]** (ex: **=m**) to initialize the date to the start or end of the period or by a number and a letter representing the **[PERIOD]** (ex: **=7m**) to set the **[PERIOD]** to a specific value.\n\nThe **+** and **-** operators are followed by a number then by a letter representing the **[PERIOD]** (ex: **+7d** or **-1m**)\n\nHere is a list of valid **[PERIOD]**\n\n| [Period] | Description |\n|---|---|\n| y | year |\n| m | month |\n| w | week |\n| d | day |\n| h | hour |\n| i | minute |\n| s | second |\n\n**=** operator without a number resets the pointer to either the beginning or the end of the **[Period]** depending if it's being used in the **[STARTDATE]** or **[ENDDATE]**. This table shows the time when the pointer is reset\n\n| Syntax | Description | [STARTDATE] | [ENDDATE] |\n|---|---|---|---|\n| =y | year | 2019-01-01 00:00:00 | 2019-12-31 23:59:59 |\n| =m | month | 2019-02-01 00:00:00 | 2019-02-28 23:59:59 |\n| =w | week\\* | 2019-02-24 00:00:00 | 2019-03-02 23:59:59 |\n| =d | day | 2019-02-25 00:00:00 | 2019-02-25 23:59:59 |\n| =h | hour | 2019-02-25 10:00:00 | 2019-02-25 10:59:59 |\n| =i | minute | 2019-02-25 10:15:00 | 2019-02-25 10:15:59 |\n| =s | second | 2019-02-25 10:15:37 | 2019-02-25 10:15:37 |\n\n\\* Week start day is configurable per user\n\n**=** operator with a number resets the **[PERIOD]** to a specific value and works the same for both **[STARTDATE]** or **[ENDDATE]**. Here are some example. Please note it's not possible to reset the week like this (ex: **=7w**)\n\n| Syntax | Description | New Date |\n|---|---|---|\n| =2025y | year | **2025**-02-25 10:15:37 |\n| =11m | month | 2019-**11**-25 10:15:37 |\n| =7d | day | 2019-02-**07** 10:15:37 |\n| =17h | hour | 2019-02-25 **17**:15:37 |\n| =1i | minute | 2019-02-25 10:**01**:37 |\n| =18s | second | 2019-02-25 10:15:**18** |\n\n### Combining [SUBSECTION]\n\nYou can combine multiple [SUBSECTION] under the same operator. For example:\n- Instead of using \"=m=7d=8h=6m=32s\" you can simplify as \"=m7d8h6m32s\"\n- Instead of using \"+7d+7h+7m+7s\" you can simplify as \"+7d7h7m7s\"\n- Instead of using \"=3m=m\" you can simplify as \"=3mm\"\n\n### Order of precedence\n\n**[STARTDATE]** and **[ENDDATE]** are evaluated from left to right. The order is important. For example, these values would give different results in **[ENDDATE]**:\n- \"=m-1m\" would give \"2019-01-28 23:59:59\"\n- \"-1m=m\" would give \"2019-01-31 23:59:59\"\n\n### Examples of use\n\n| Syntax | Explanation | Date From | Date To |\n|---|---|---|---|\n|sFilter=dtInvoice rg '-7d,=s'|Invoices in the last 7 days up to now|2019-02-18 10:15:37|2019-02-25 10:15:37|\n|sFilter=dtInvoice rg '=d-7d,=s'|Invoices in the last 7 days starting at 00:00:00 up to now|2019-02-18 00:00:00|2019-02-25 10:15:37|\n|sFilter=dtInvoice rg '=m-1m,=m-1m'|Invoices in the last month|2019-01-01 00:00:00|2019-01-31 23:59:59|\n|sFilter=dtInvoice rg '=m,=m'|Invoices in this month|2019-02-01 00:00:00|2019-02-28 23:59:59|\n|sFilter=dtInvoice rg '=m-1m+10d,=s'|Invoices since the 10th of last month up to now|2019-01-10 00:00:00|2019-02-25 10:15:37|\n|sFilter=dtInvoice rg '-10h,=d8h+1d1s'|Invoices in the last 10 hours up to 9h00 tomorrow morning|2019-02-25 00:15:37|2019-02-26 09:00:00|\n|sFilter=dtInvoice rg '-1y=4mm,=3mm'|Invoices from last year second semester up to this year first quarter|2018-04-01 00:00:00|2019-03-31 23:59:59|\n|sFilter=dtInvoice rg '=w-3w,=w'|Invoices in the last 3 weeks (calendar week start day = Sunday) up to the end of the week|2019-02-03 00:00:00|2019-03-02 23:59:59|\n|sFilter=dtInvoice rg '=y,=3mm'|Invoices in the first semester|2019-01-01 00:00:00|2019-03-31 23:59:59|\n|sFilter=dtInvoice rg '=4mm,=6mm'|Invoices in the second semester|2019-04-01 00:00:00|2019-06-30 23:59:59|\n|sFilter=dtInvoice rg '=7mm,=9mm'|Invoices in the third semester|2019-07-01 00:00:00|2019-09-30 23:59:59|\n|sFilter=dtInvoice rg '=10mm,=y'|Invoices in the last semester|2019-10-01 00:00:00|2019-12-31 23:59:59|\n",
      "name": "General_Conventions",
      "x-displayName": "Conventions"
    },
    {
      "description": "When the API returns an HTTP status code in the range 400-599, a JSON object will be returned with 2 properties:\r\n- eErrorCode\r\n- sErrorMessage\r\n\r\nWe highly suggest you use **eErrorCode** to do any error validation logic in your code or to create your own error message for your users. **sErrorMessage** has more detail for a human to read, but is intended for the developper and is always returned in English.\r\n\r\nHere is the complete list of **eErrorCode** you could receive for each HTTP status code and examples of situations where they could be returned.\r\n\r\n### HTTP 400 (Bad Request)\r\n| eErrorCode           | Examples                                                                       |\r\n| -------------------- | ------------------------------------------------------------------------------ |\r\n| BADREQUEST           | Unserializable JSON, invalid parameter, invalid signature, invalid fingerprint |\r\n| BADREQUEST_CLOCKSKEW | The time on the client computer is wrong                                       |\r\n\r\n### HTTP 401 (Unauthorized)\r\n| eErrorCode           | Examples                                                           |\r\n| -------------------- | ------------------------------------------------------------------ |\r\n| UNAUTHORIZED_BADAUTH | Invalid credentials during Authentication                          |\r\n| UNAUTHORIZED_BADMFA  | Invalid response to the MFA challenge                              |\r\n| UNAUTHORIZED_EXPIRED | Credentials have expired                                           |\r\n| UNAUTHORIZED_REQUEST | The request is invalid (bad ip source, fingerprint, signature, etc)|\r\n| UNAUTHORIZED_REQUEST_APIKEY | The API Key is invalid                                      |\r\n| UNAUTHORIZED_REQUEST_PRESIGNED | The presigned URL is invalid                             |\r\n\r\n### HTTP 403 (Forbidden)\r\n| eErrorCode                     | Examples                                            |\r\n| ------------------------------ | --------------------------------------------------- |\r\n| FORBIDDEN                      | Generic Forbidden                                   |\r\n| FORBIDDEN_CONFIGURATION        | A configured setting prevent access to the element  |\r\n| FORBIDDEN_MODULE               | Module is not activated                             |\r\n| FORBIDDEN_NOACCESS             | Not allowed to access the element                   |\r\n| FORBIDDEN_PERMISSION           | Missing a permission to access the route            |\r\n| FORBIDDEN_SUBSCRIPTION         | No subscription, for example to eZsign              |\r\n| FORBIDDEN_USERTYPE             | This type of User is forbidden for the route        |\r\n| FORBIDDEN_USER_ORIGIN_EXTERNAL | Can't modify user informations.                     |\r\n\r\n### HTTP 404 (Not Found)\r\n| eErrorCode      | Examples                                    |\r\n| --------------- | ------------------------------------------- |\r\n| NOTFOUND        | Generic not found                           |\r\n| NOTFOUND_OBJECT | Object does not exist in database           |\r\n| NOTFOUND_ROUTE  | The route does not exist (url, API version) |\r\n\r\n### HTTP 405 (Method Not Allowed)\r\n| eErrorCode       | Examples                                                                      |\r\n| ---------------- | ----------------------------------------------------------------------------- |\r\n| METHODNOTALLOWED | The route is valid but the method is not allowed ex: POST on a GET only route |\r\n\r\n### HTTP 406 (Not Acceptable)\r\n| eErrorCode             | Examples                                                                                      |\r\n| ---------------------- | --------------------------------------------------------------------------------------------- |\r\n| NOTACCEPTABLE_CONTENT  | The route is valid but the Accept header is not allowed ex: \"application/json\" vs \"image/png\" |\r\n| NOTACCEPTABLE_LANGUAGE | The route is valid but the Accept-Language header is not allowed ex: \"en\" vs \"es\"             |\r\n\r\n### HTTP 422 (Unprocessable entity)\r\n| eErrorCode                             | Examples                                                               |\r\n| -------------------------------------- | ---------------------------------------------------------------------- |\r\n| UNPROCESSABLEENTITY_ACTIVESESSION_ALREADY_CLONING | The user is already cloning another user                    |\r\n| UNPROCESSABLEENTITY_CANNOTDELETE       | The element cannot be deleted                                          |\r\n| UNPROCESSABLEENTITY_CANNOTMODIFY       | The element cannot be modified                                         |\r\n| UNPROCESSABLEENTITY_CHANGEPASSWORD_INVALID_CURRENT   | The old password supplied does not match the user's current password |\r\n| UNPROCESSABLEENTITY_CHANGEPASSWORD_SAME    | The new password is the same as the old password |\r\n| UNPROCESSABLEENTITY_DATA_MISSING       | Some data is missing                                                   |\r\n| UNPROCESSABLEENTITY_DATA_UNIQUE        | The data fails unique check : value exist in other element             |\r\n| UNPROCESSABLEENTITY_DATA_VALIDATION    | The data fails some validation                                         |\r\n| UNPROCESSABLEENTITY_DATA_OUTOFBOUND    | The data contains a value that is out of bound                         |\r\n| UNPROCESSABLEENTITY_DOWNLOAD_ERROR     | We cannot retrieve ressource at supplied url                           |\r\n| UNPROCESSABLEENTITY_EZSIGNFORM_VALIDATION     | The validation of the Ezsignform returned some errors                           |\r\n| UNPROCESSABLEENTITY_EZSIGNSIGNERCONNECTED    | The Ezsignsigner is connected                                    |\r\n| UNPROCESSABLEENTITY_NOTHINGTODO        | The request was valid, but no action was necessary                     |\r\n| UNPROCESSABLEENTITY_NOTREADY           | The element is not in a state that allows the action (Sending a document without signature, downloading an unsigned document) |\r\n| UNPROCESSABLEENTITY_PDF_FORM           | The pdf document contains a form                                       |\r\n| UNPROCESSABLEENTITY_PDF_SIGNATURE      | The pdf document contains a signature(s)                               |\r\n| UNPROCESSABLEENTITY_PDF_FORM_AND_SIGNATURE | The pdf document contains a form and signature(s)                  |\r\n| UNPROCESSABLEENTITY_PDF_INCOMPATIBLE   | The pdf document cannot be signed                                      |\r\n| UNPROCESSABLEENTITY_PDF_PASSWORD       | The pdf document contains a password and cannot be signed              |\r\n| UNPROCESSABLEENTITY_PDF_WRONG_PASSWORD | The password cannot open the pdf document since it's incorrect         |\r\n| UNPROCESSABLEENTITY_PDF_REPAIRABLE     | The pdf document contains errors and can be repaired                   |\r\n| UNPROCESSABLEENTITY_PDF_XFA            | The pdf document contains XFA form and cannot be signed                |\r\n| UNPROCESSABLEENTITY_TEMPLATE_MISMATCH  | The number of pages between the document and the template do not match |\r\n| UNPROCESSABLEENTITY_UNMODIFIABLE_FIELD | The field is not modifiable in the current state                       |\r\n| UNPROCESSABLEENTITY_USER_STAGED        | The user can't connect since it's currently staged                      |\r\n\r\n### HTTP 429 (Too Many Requests)\r\n| eErrorCode                             | Examples                                                               |\r\n| -------------------------------------- | ---------------------------------------------------------------------- |\r\n| TOOMANYREQUESTS                        | The client reached the maximum number of requests allowed in the specific time |\r\n| TOOMANYREQUESTS_THIRDPARTY             | Our server encountered a 'Too Many Requests' error from a third party |\r\n\r\n### HTTP 500 (Internal Server Error)\r\n| eErrorCode     | Examples                  |\r\n| -------------- | ------------------------- |\r\n| ERROR_INTERNAL | Unhandled error on server |\r\n| ERROR_CONFIGURATION | A parameter on the server is not configured properly |\r\n\r\n### HTTP 501 (Not Implemented)\r\n| eErrorCode           | Examples                                                 |\r\n| -------------------- | -------------------------------------------------------- |\r\n| ERROR_NOTIMPLEMENTED | Endpoint not yet available in your region or environment |",
      "name": "General_ErrorCodes",
      "x-displayName": "Error Codes"
    },
    {
      "description": "We publish everything related to our API on github at this location: <a href=\"https://github.com/eZmaxinc\" target=\"_blank\">https://github.com/eZmaxinc</a>. You'll find git repos for the specification, documentation, SDKs and samples.\n\nDocumentation, SDKs and samples are provided in English only for easier maintenance, but we also have French speaking integrators that can help you out.\n\nMost of our SDKs provide language specific documentation, but you'll find more details on this page about the general use of the API. Both the SDK's specific document (if you choose to use a SDK) and this documentation can be used in complementarity.\n\nIf you find any mistake or omission in the documentation, please notify us. We'll quickly fix the issue.\n\n## Onboarding\nWe highly recommend to schedule an online meeting with your technical team and an eZmax integrator. During this meeting, we go through requirements, business logic, configuration, api key generation, and we go through the list of functions you might need to implement to achieve your goals. Make sure you take this opportunity to speed up your integration project.\n\nIf you need help understanding how to use this API, don't waste too much time searching in it. Contact support-api@ezmax.ca, we're here to help. We are developpers so we know programmers don't like to waste time in documentation. If you don't find what you need in the documentation, let us know, we'll improve it and put you rapidly up on track.\n\n## Open API\nWe highly believe in open standards and open source. We have adopted the Open API vision where all of the functionnalities of our applications are accessible with open source definition files. We use our own public API's to build our interfaces so you can do pretty much everything we can do. Open API has a rich toolset from editor, generators, mock servers, validators, etc. Learn more at <a href=\"https://www.openapis.org/\" target=\"_blank\">OpenAPI Initiative</a>\n\nIf you need  our Open API Spec file to use in your toolset, here is a direct link to it: <a href=\"https://raw.githubusercontent.com/eZmaxinc/eZmax-API/master/specs/ezmax.v1.1.json\" target=\"_blank\">ezmax.v1.1.json</a>\n\n## SDK\nWe provide SDKs for customers. They are generated using <a href=\"https://openapi-generator.tech/\" target=\"_blank\">OpenAPI Generator</a>, we encourage customers to use them as we also provide samples for them. You can choose to build your own implementation manually or can use any compatible OpenAPI 3.0 generator like <a href=\"https://openapi-generator.tech/\" target=\"_blank\">OpenAPI Generator</a>, <a href=\"https://swagger.io/tools/swagger-codegen/\" target=\"_blank\">Swagger Codegen</a> or any commercial generators.\n\nWe try to make it as easy as possible for you to use our SDKs so we publish packages on NPM and Composer. If you don't find your favorite language supported or it we could make your life easier by automating package distribution, let us know !",
      "name": "General_Introduction",
      "x-displayName": "Introduction"
    },
    {
      "description": "## Authorization\n\nExcept for a few functions that do not require authorization, most of the functions require an API key that is sent in the request headers. The header name is \"Authorization\". \n\nThere are 5 types of API Key that can be used to make requests to the API.\n\n1. **API type key** which is static and not session based. It can be generated from the admin console. This is the most common type of authentication for \"server to server\" kind of integration. Never use this in a web based (client) application as the key could be leaked. This type of key begins with the letter **A**.\n\n2. **Delegated type key** which has an expiration time. It is commonly used in mobile or web application where you cannot use an **API type key** that could be leaked. The application would query a server part that will generate a **Delegated type key** using an **API type key**. The **Delegated type key** could now be used by the mobile or web page application without leaking the **API type key**. This type of key begins with the letter **D**.\n\n3. **User type key** which are session based and can be retrieved after a successful authentication. This type of key is reserved to specific situations where the other types of key are not desirable. This type of key begins with the letter **U**.\n\n4. **Presigned type key** which are used to presign a url. These keys have an expiration date configured at signing time. This type of key begins with the letter **P**.\n\n5. **Special type key** which are for special cases where other types of keys cannot be used. This type of key is reserved to specific situations. This type of key begins with the letter **S**.\n\n## IP restriction\n\nEach API key can be restricted to specific IP addresse(s). This is an optional but recommended security feature you should put in place if all your requests will be coming from a specific range. You can configure the allowed ranges from the eZmax administration console.\n\n## Permissions\n\nEach API Key can be configured to have specific permission(s) so we highly recommend to use the \"Least privileges\" principle. For example, instead of allowing all permissions to an API Key, you should perhaps create an API Keys each for each of your application having just the specific permissions needed. You can configure the API Key's permission in eZmax's administration console.\n\n## Request Signing\n\nRequest Signing is a process of signing the request with a **Secret** that is not transmitted over the Wire. The signing process improves security in case your API Key is leaked or during a MITM attack (Man in the Middle). It will also prevent request manipulation or replay attack. Since all requests must use **https** these kinds of attacks are hard to conduct but sometimes customers might not be aware their underlying library does not verify SSL Certs validity or that their application can disclose their API key if it's not well secured. It takes a bit of effort to sign requests but it's highly recommended to do so.\n\nMandatory requirements of signing varies by used key type. For **API** type keys (most common type), you can configure if signing is mandatory or not in eZmax's administration console. **Delegated**, **User** and **Special** type keys must sign requests otherwise requests will fail.\n\n### How to sign a request\n\nTo apply a signature to your request you will need to send 3 or 4 additional HTTP Headers to the request:\n- Ezmax-Date\n- Ezmax-Expiration (Optional)\n- Ezmax-Fingerprint\n- Ezmax-Signature\n\n### Ezmax-Date\n\n**Ezmax-Date** Is the date/time when you send the request. It needs to be a <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\">ISO 8601</a> formatted date/time. It's a format that supports timezones so you can either use your local timezone of GMT. Be aware certain implementation adds milliseconds to the formatted date which won't be accepted by the API (ex: Javascript's toISOString function).\n\nThere is a tolerance of ±5 minutes clock skew between the date/time you specify and the server's time so make sure your time is correct. Usage of a NTP server is recommended. Compute the date/time as close as possible to the actual sending of the request. For example, don't set the current time at the beginning of a long running script that sends 50 requests to the server with the same time/date as you might receive errors related to clock skew.\n\nExamples:\n- 2000-12-31T23:59:59Z\n- 2000-12-31T23:59:59-05:00\n \n### Ezmax-Expiration\n\n**Ezmax-Expiration** Is optional. It must be a positive integer representing the number of minutes (starting from Ezmax-Date) after which the signed request will be considered expired.\n\n### Ezmax-Fingerprint\n\n**Ezmax-Fingerprint** Is a fingerprint (aka hash) representing the request you are sending. Any alteration in any part of the request would produce a different fingerprint. The hash is computed using <a href=\"https://en.wikipedia.org/wiki/SHA-2\" target=\"_blank\">SHA256</a>. Most programming languages offer an implementation of SHA256. To make sure your implementation is producing expected values, try to hash the value \"foo\", it should produce the value \"2c26b46b68ffc68ff99b453c1d30413413422d706483bfa0f98a5e886266e7ae\".\n\nTo compute the Fingerprint, you'll need to concatenate the **Method**, the **URL**, the **Body**, the **API Key**, the **Date** and the **Expiration** (**Expiration** must be appended only if defined). All these values will need to be separated by a line Feed caracter (\\n). Make sure your **Method** is Uppercase (Shoud be \"GET\", not \"Get\" or \"get\"). Make sure your URL Scheme and Host or the **URL** are lowercase (Should be \"https://www.example.com\", not \"HTTPS://WWW.EXAMPLE.COM\"). Also make sure the the URI part of the **URL** is properly URL encoded (Should be \"/Path%20with%20Spaces/?Key=Value%20with%20Spaces\", not \"/Path with Spaces/?Key=Value with Spaces\". If the **Body** is empty (ex: GET request don't have a body), use an empty string.\n\nOnce the SHA256 hash is computed, prefix it with \"v1=\" which is future proofing version identifier.\n\nHere is an example implementation in PHP:\n\n    public static function getFingerprintV1 ($sAuthorization, $dtDate, $sMethod, $sURL, $sBody = '', $iExpiration = null) {\n        $sContentToHash = \"$sMethod\\n$sURL\\n$sBody\\n$sAuthorization\\n$dtDate\" . (is_null($iExpiration) ? '' : \"\\n$iExpiration\");\n        return 'v1='.hash('sha256', $sContentToHash);\n    }\n\nHere are two examples of what a GET and POST requests Fingerprints could look like. You can validate if your algorithm work by using these sample values and comparing them to the expected values. In the example below the litteral \"\\n\" should be replaced with a linefeed character.\n\n    GET\\n\n    https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent\\n\n    \\n\n    ThisIsMyAuthorizationKey\\n\n    2000-12-31T23:59:59Z\nExpected result for **Ezmax-Fingerprint** (GET): v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n\n    POST\\n\n    https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames\\n\n    {\"pksCustomerCode\": \"demo\",\"fkiLanguageID\": \"2\",\"eUserTypeSSPR\": \"Native\",\"sEmailAddress\": \"email@example.com\"}\\n\n    ThisIsMyAuthorizationKey\\n\n    2000-12-31T23:59:59Z\nExpected result for **Ezmax-Fingerprint** (POST): v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n\n### Ezmax-Signature\n\n**Ezmax-Signature** Is the actual signature proving the request was generated by the key owner using its secret. The signature is computed using <a href=\"https://en.wikipedia.org/wiki/HMAC\" target=\"_blank\">HMAC</a> and <a href=\"https://en.wikipedia.org/wiki/SHA-2\" target=\"_blank\">SHA256</a>. Don't confuse **SHA256 (aka SHA2-256)** and **SHA3-256**, these are 2 distinct algorithms. Most programming languages offer an implementation of HMAC with SHA256. To make sure your implementation is producing expected values, try to hash the value \"foo\" with the key \"bar\", it should produce the value \"147933218aaabc0b8b10a2b3a5c34684c8d94341bcf10a4736dc7270f7741851\".\n\nTo compute the Signature, you'll need to concatenate the **Ezmax-Fingerprint**, the **API Key** and the **Ezmax-Date**. The 3 values are concatenated WITHOUT separators. Then calculate the HMAC using SHA256 using your **Secret** as the key.\n\nOnce the HMAC-SHA256 hash is computed, prefix it with \"v1=\" which is future proofing version identifier.\n\nHere is an example implementation in PHP:\n\n    public static function getSignatureV1 ($sAuthorization, $dtDate, $sFingerprint, $sSecret) {\n        $sContentToSign = \"$sFingerprint$sAuthorization$dtDate\";\n        return 'v1='.hash_hmac('sha256', $sContentToSign, $sSecret);\n    }\n\nHere are two examples of what the GET and POST requests Signature would be. You can validate if your algorithm work by using these sample values and comparing them to the expected values. For the below examples, we have used the same **API Key**, **Fingerprint** and **Date** as in the Fingerprint section above. The only new variable is the **Secret** which is \"ThisIsTheSecretAssociatedToTheAuthorizationKey\" for this example.\n\n    v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354aThisIsMyAuthorizationKey2000-12-31T23:59:59Z\nExpected result for **Ezmax-Signature** (GET): v1=3a95fde64d27527745bcb0dd91be8caf7917c6778197e22d1d56c87245f979f5\n\n    v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702dedThisIsMyAuthorizationKey2000-12-31T23:59:59Z\nExpected result for **Ezmax-Signature** (POST): v1=71e05f01eaab704ec76a078a9a5c49abe9d5a490786e43b86156d281acda7cba\n\n### Wrapping up the examples\n\nThe whole process was detailed above but here is summary of what your http headers should look like to sign these example requests considering the following common variables:\n\n| Variable      | Example value                                  |\n| ------------- | ---------------------------------------------- |\n| Date          | 2000-12-31T23:59:59Z                           |\n| Authorization | ThisIsMyAuthorizationKey                       |\n| Secret        | ThisIsTheSecretAssociatedToTheAuthorizationKey |\n\nFor a GET request to https://prod.api.appcluster01.ca-central-1.ezmax.com/rest/1/object/activesession/getCurrent:\n\n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n    Ezmax-Fingerprint: v1=8f6f3ed75edb6e2cbe777b4fda5cab1a6adaebadc758780eb82c3d49934f354a\n    Ezmax-Signature: v1=3a95fde64d27527745bcb0dd91be8caf7917c6778197e22d1d56c87245f979f5\n\nFor a POST request to https://prod.api.global.ezmax.com/1/module/sspr/sendUsernames with this body content = '{\"pksCustomerCode\": \"demo\",\"fkiLanguageID\": \"2\",\"eUserTypeSSPR\": \"Native\",\"sEmailAddress\": \"emain@example.com\"}' :\n\n    Authorization: ThisIsMyAuthorizationKey\n    Ezmax-Date: 2000-12-31T23:59:59Z\n    Ezmax-Fingerprint: v1=6dbdbc26437f1216f9cd0068a4fc35c272a062b1f638c7557d497ebbf3702ded\n    Ezmax-Signature: v1=71e05f01eaab704ec76a078a9a5c49abe9d5a490786e43b86156d281acda7cba",
      "name": "General_Security",
      "x-displayName": "Security"
    },
    {
      "description": "## Regional requests\nWhen you send your API requests, you'll need to send them in the proper region and proper environment where your customer data are stored. Based on your requirements (proximity and legislation), we will create your environment in one of our supported region's.\n\nThe general format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.appcluster01.**{sInfrastructureregionCode}**.ezmax.com/rest/\n\nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" and \"**{sInfrastructureregionCode}**\" need to be replaced with one of the values in the table below.\n\n## Global requests\nSome of the functions needs to be called on the global infrastructure instead of the regional servers. These functions are all located in the **Global** section of the documentation.\n\nThe general format of the URL where to send requests is:\nhttps://**{sInfrastructureenvironmenttypeDescription}**.api.global.ezmax.com/\n\nWhere \"**{sInfrastructureenvironmenttypeDescription}**\" needs to be replaced with one of the values in the tables below.\n\n## Websocket requests\nWhen you send your Websocket requests, you'll need to send them in the proper region and proper environment where your customer data are stored. Based on your requirements (proximity and legislation), we will create your environment in one of our supported region's.\n\nThe general format of the URL where to send requests is:\nwss://ws.**{sInfrastructureregionCode}**.ezmax.com/**{sInfrastructureenvironmenttypeDescription}**/\n\nWhere \"**{sInfrastructureregionCode}**\" and \"**{sInfrastructureenvironmenttypeDescription}**\" need to be replaced with one of the values in the tables below.\n\n## Environments\n\n| sInfrastructureenvironmenttypeDescription | Description       |\n| ----------------------------------------- | ----------------- |\n| prod                                      | Production        |\n| stg                                       | Staging           |\n| qa                                        | Quality Assurance |\n| dev                                       | Development       |\n\nNote: You should always use \"prod\" for the environment unless otherwise instructed by eZmax's support.\n\n## Regions\n\n| sInfrastructureregionCode | Description                |\n| ------------------------- | -------------------------- |\n| af-south-1\t            | Africa (Cape Town)         |\n| ap-east-1\t                | Asia Pacific (Hong Kong)   |\n| ap-northeast-1\t        | Asia Pacific (Tokyo)       |\n| ap-northeast-2\t        | Asia Pacific (Seoul)       |\n| ap-northeast-3\t        | Asia Pacific (Osaka-Local) |\n| ap-south-1\t            | Asia Pacific (Mumbai)      |\n| ap-southeast-1\t        | Asia Pacific (Singapore)   |\n| ap-southeast-2\t        | Asia Pacific (Sydney)      |\n| ca-central-1\t            | Canada (Central)           |\n| eu-central-1\t            | Europe (Frankfurt)         |\n| eu-north-1\t            | Europe (Stockholm)         |\n| eu-south-1\t            | Europe (Milan)             |\n| eu-west-1\t                | Europe (Ireland)           |\n| eu-west-2\t                | Europe (London)            |\n| eu-west-3\t                | Europe (Paris)             |\n| sa-east-1\t                | South America (São Paulo)  |\n| us-east-1\t                | US East (N. Virginia)      |\n| us-east-2\t                | US East (Ohio)             |\n| us-west-1\t                | US West (N. California)    |\n| us-west-2\t                | US West (Oregon)           |\n\nNote Our SDKs have a default value of \"ca-central-1\". You will need to call \"setHost\" to change the default value if needed.",
      "name": "General_Servers",
      "x-displayName": "Servers"
    },
    {
      "description": "We use standard HTTP Status Codes to return details about completed function calls.\r\n\r\nYou should always validate the HTTP response's status code before trying to read the content of the body. Our SDKs do this automatically. In each of the documented function, we document only the function's specific return code to facilitate the reading of the documentation. Even if a generic return code is not documented at the function's level, it could be returned by the API.\r\n\r\n### Generic return codes (Documented at the function's level)\r\n| HTTP Status Code | Meaning              | Detail |\r\n| ---------------- | -------------------- | ------ |\r\n| 200              | OK                   | The request completed successfully and valid data was returned in the body |\r\n| 201              | Created              | The request completed successfully. Some elements were created and details about the created items was returned in the body |\r\n| 204              | No Content           | The request completed successfully. There was no need to return any data in the body |\r\n| 403              | Forbidden            | The request is not allowed to be executed. Look for detail about the error in the body |\r\n| 404              | Not Found            | The request failed. The element on which you were trying to work does not exists. Look for detail about the error in the body |\r\n| 406              | Not Acceptable       | The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\" |\r\n| 422              | Unprocessable entity | The request was syntactically valid but failed because of an interdependance condition. Look for detail about the error in the body |\r\n\r\n### Generic return codes (Undocumented at the function's level)\r\n| HTTP Status Code | Meaning               | Detail |\r\n| ---------------- | --------------------- | ------ |\r\n| 400              | Bad Request           | The request does not meet specifications. For example: an invalid type for a variable, a value that does not pass validation or a protocol violation. Look for details about the error in the response's body |\r\n| 401              | Unauthorized          | The API Key is either not present, expired, invalid or inactive. It could also mean you are calling the API from an unauthorized IP address |\r\n| 403              | Forbidden             | The Provided API Key is valid, but it is not allowed to execute the request. Verify the Key's permissions |\r\n| 404              | Not Found             | Your request was sent to a URL that does not exist. Make sure you are calling the proper version number of the function and look for typos in the URL |\r\n| 405              | Method Not Allowed    | The URL is valid, but the Method is not allowed. For example, have you call a GET while the function expects a POST ? |\r\n| 406              | Not Acceptable       | The URL is valid, but one of the Accept header is not defined or invalid. For example, you set the header \"Accept: application/json\" but the function can only return \"Content-type: image/png\" |\r\n| 429              | Too Many Requests     | Too many requests were received from your API Key/IP address. Make sure to optimize your requests or ask for a limit increase. For example, make a single request to create 100 objects instead of calling 100 requests each creating a single objet |\r\n| 500              | Internal Server Error | This should never happen. There is either a temporary problem that should resolve quickly or an error you should report to technical support. |\r\n| 501              | Not Implemented       | Endpoint not yet available in your region or environment |\r\n| 503              | Service Unavailable   | This should never happen. There is either a temporary problem that should resolve quickly or an error you should report to technical support |\r\n\r\n### Custom return codes (Undocumented at the function's level)\r\nThese codes can only be generated for **User** type API Key. The **API**, **Delegated** and **Special** types keys will never return such codes. (See Authorization section for more information). Most users should not be concerned with these status codes.\r\n\r\nThese codes are documented in the Activesession getCurrent endpoint only to simplify the documentation but they can be returned in any of the endpoints.\r\n\r\n| HTTP Status Code | Meaning                          | Detail                                                               |\r\n| ---------------- | -------------------------------- | -------------------------------------------------------------------- |\r\n| 350              | Authentication required          | User must authenticate because session is invalid                    |\r\n| 351              | Phone Validation required        | (2FA) User needs to complete a Voice Call or SMS challenge           |\r\n| 352              | Question Validation required     | (2FA) User needs to complete a question/answer challenge             |\r\n| 353              | Clause Acceptance required       | User need to accept electronic signature terms and conditions        |\r\n| 354              | Computer Validation required     | User's computer is not authorized                                    |\r\n| 355              | Password Change required         | User must change it's password                                       |\r\n| 356              | Native Application Version Check | The user is not running the latest version of the native application |\r\n\r\n### Webhook delivery successful code\r\nThese codes will be considered as a succesful delivery when they are returned by your webpage during a Webhook delivery.\r\n\r\n| HTTP Status Code | Meaning              | Detail |\r\n| ---------------- | -------------------- | ------ |\r\n| 202              | Accepted             | The request has been received but not yet acted upon. It is intended for cases where another process or server handles the request, or for batch processing. |\r\n| 204              | No Content           | The request completed successfully. There was no need to return any data in the body |\r\n",
      "name": "General_StatusCodes",
      "x-displayName": "Status Codes"
    },
    {
      "description": "When the API returns an HTTP status code in the range 200-299, a property could be returned indicating one or more warnings occured. The array contain objects with 2 properties:\r\n- eWarningCode\r\n- sWarningMessage\r\n\r\nWe highly suggest you use **eWarningCode** to do any warning validation logic in your code or to create your own warning message for your users. **sWarningMessage** has more detail for a human to read, but is intended for the developper and is always returned in English.\r\n\r\nHere is the complete list of **eWarningCode** you could receive.\r\n\r\n| eWarningCode         | Examples                                                 |\r\n| -------------------- | -------------------------------------------------------- |\r\n| MUSTVERIFY           | An object was changed and a verification is recommended  |",
      "name": "General_WarningCodes",
      "x-displayName": "Warning Codes"
    },
    {
      "description": "## Concept\nA Webhook (also called a web callback or HTTP push API) is a way for your application to be notified of an event in real time.\n\nFor example, if you send a contract for signing and need to be notified as soon as it get signed.\n\nYou could program a loop to query the document status every 5 minutes for many days until you receive a response saying the document is signed. This is a bad approach as it will waste a lot of resources everytime you make a call to the API for no reason.\n\nA better approach would be to configure a webhook in the eZmax's administration console to watch for a specific event. In this exemple, the event to monitor is \"DocumentCompleted\" from the module \"Ezsign\". This way, as soon as the document gets signed, a request will be made to YOUR server to let you know about the event that just happened.\n\nWhen you configure eZmax to notify you of events, you must provide your server's URL and a fallback email address. The URL provided must use HTTPS for security reasons.\n\n### Types of Webhook:\nLook for red indicators with the word \"EVENT\" throughout the documentation to see currently available Webhooks events you can subscribe to. If you have a need for an event that is not available, please send a feature request to technical support.\n\n### Important:\n- The event will be delivered using a POST request.\n- Your server will need to reply with a HTTP Status Code 202 or 204 to let eZmax know you've accepted the message and we shall not try to deliver the message again. If the server does not respond with a 202 or 204 Code, the message will be sent over and over until all tries are exhausted.\n- The 202 or 204 response must be returned in less than 30 seconds otherwise a timeout will occur and the event will be retried following the retry schedule.\n- Make sure to secure your Webhook receiving URL to make sure someone does not send forged messages to your application. You can do this by providing a secure token in your URL, for example \"?token=mysecuretoken1234\", or by validating the webhook message's signature.\n\n### Testing\nIn eZmax's administration module, you'll find a \"Test\" button that you can use as many time as you need to test your server code easily with a sample event.\n\n## Retries\neZmax will attempt to deliver the event to your server instantly but will retry many times if your server does not respond successfully for some reason (see schedule below). After all attempts are exhausted, the event will be forwarded to the configured fallback email in the same format as the webhook. The email body will contain the JSON request in the same format as the webhook. This way, you'll be able to send the request to your server using <a href=\"https://www.postman.com/\" target=\"_blank\">Postman</a>, <a href=\"https://curl.se/\" target=\"_blank\">Curl</a> or similar tool.\n\n### Retry Delivery schedule\nThis is the approximate retry schedule. Since there is a 30 seconds timeout on each try, there could be a cumulative overhead up to 3½ minutes.\n\n| Minutes after previous step | Minutes after event | Method |\n| :-------------------------: | :-----------------: | ------ |\n| N/A                         | 0                   | HTTPS  |\n| 1                           | 1                   | HTTPS  |\n| 5                           | 6                   | HTTPS  |\n| 15                          | 21                  | HTTPS  |\n| 15                          | 36                  | HTTPS  |\n| 15                          | 51                  | HTTPS  |\n| 15                          | 66                  | HTTPS  |\n| 0                           | 66                  | Email  |\n\n### Failed attempt reporting\nIf you don't receive the event on the first attempt, there will be debugging information about each previous attempt in the body of the event. You'll be able to see the timestamp of each previous attempt and the return code returned by your server or a timeout indication if your server hasn't replied.\n",
      "name": "General_Webhooks",
      "x-displayName": "Webhooks"
    },
    {
      "description": "Ezsigndocument contains detail about a document to sign",
      "name": "Object_Ezsigndocument",
      "x-displayName": "Ezsigndocument"
    },
    {
      "description": "Ezsignfolder contains detail about the container containing signers, documents to sign, etc. Sometimes referred as \"Envelopes\" in competitor products",
      "name": "Object_Ezsignfolder",
      "x-displayName": "Ezsignfolder"
    },
    {
      "description": "Ezsignfoldersignerassociation contains detail about the signers that will be invited to sign the documents. Signers can be users from the system or persons outside of the system.",
      "name": "Object_Ezsignfoldersignerassociation",
      "x-displayName": "Ezsignfoldersignerassociation"
    },
    {
      "description": "User contains detail about the users in the system",
      "name": "Object_User",
      "x-displayName": "User"
    },
    {
      "description": "Userstaged contains details about Userstageds",
      "name": "Object_Userstaged",
      "x-displayName": "Userstaged"
    },
    {
      "description": "Websocket Request Server contains detail about commands that can be sent to the Websocket Server by clients",
      "name": "Websocket_RequestServer",
      "x-displayName": "Request (Server)"
    },
    {
      "description": "Websocket Reponse contains detail about the responses that are transmitted over the websocket connection",
      "name": "Websocket_Response",
      "x-displayName": "Response"
    }
  ],
  "x-components": {
    "parameters": {},
    "responses": {
      "Response-Webhook-202": {
        "description": "The Webhook event notification was successfully received by the receiving web server."
      },
      "Response-Webhook-204": {
        "description": "The Webhook event notification was successfully received and processed by the receiving web server."
      },
      "Response-Websocket": {
        "description": "Fake response to normalize documentation as websocket doesn't return a code"
      }
    },
    "examples": {
      "PdfAsBase64": {
        "summary": "A BASE64 encoded PDF",
        "value": "JVBERi0xLjENCiXCpcKxw6sNCg0KMSAwIG9iag0KICA8PCAvVHlwZSAvQ2F0YWxvZw0KICAgICAvUGFnZXMgMiAwIFINCiAgPj4NCmVuZG9iag0KDQoyIDAgb2JqDQogIDw8IC9UeXBlIC9QYWdlcw0KICAgICAvS2lkcyBbMyAwIFJdDQogICAgIC9Db3VudCAxDQogICAgIC9NZWRpYUJveCBbMCAwIDMwMCAxNDRdDQogID4+DQplbmRvYmoNCg0KMyAwIG9iag0KICA8PCAgL1R5cGUgL1BhZ2UNCiAgICAgIC9QYXJlbnQgMiAwIFINCiAgICAgIC9SZXNvdXJjZXMNCiAgICAgICA8PCAvRm9udA0KICAgICAgICAgICA8PCAvRjENCiAgICAgICAgICAgICAgIDw8IC9UeXBlIC9Gb250DQogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTENCiAgICAgICAgICAgICAgICAgIC9CYXNlRm9udCAvVGltZXMtUm9tYW4NCiAgICAgICAgICAgICAgID4+DQogICAgICAgICAgID4+DQogICAgICAgPj4NCiAgICAgIC9Db250ZW50cyA0IDAgUg0KICA+Pg0KZW5kb2JqDQoNCjQgMCBvYmoNCiAgPDwgL0xlbmd0aCA1NSA+Pg0Kc3RyZWFtDQogIEJUDQogICAgL0YxIDE4IFRmDQogICAgMCAwIFRkDQogICAgKEhlbGxvIFdvcmxkKSBUag0KICBFVA0KZW5kc3RyZWFtDQplbmRvYmoNCg0KeHJlZg0KMCA1DQowMDAwMDAwMDAwIDY1NTM1IGYgDQowMDAwMDAwMDE4IDAwMDAwIG4gDQowMDAwMDAwMDc3IDAwMDAwIG4gDQowMDAwMDAwMTc4IDAwMDAwIG4gDQowMDAwMDAwNDU3IDAwMDAwIG4gDQp0cmFpbGVyDQogIDw8ICAvUm9vdCAxIDAgUg0KICAgICAgL1NpemUgNQ0KICA+Pg0Kc3RhcnR4cmVmDQo1NjUNCiUlRU9G"
      },
      "PngAsBase64": {
        "summary": "A BASE64 encoded PNG",
        "value": "iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAAY0lEQVR42u3QAREAAAQEMJKL/nI4W4R1JVOPtQABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIECBAgAABAgQIEHDfArMdn4FHyLy9AAAAAElFTkSuQmCC"
      },
      "Svg": {
        "summary": "A Svg file",
        "value": "<svg version=\"1.1\" id=\"Layer_2\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" \t viewBox=\"0 0 175 75\" enable-background=\"new 0 0 175 75\" xml:space=\"preserve\"> <path fill=\"#FFFFFF\" d=\"M51,47.4c-0.8,1.6-1.7,3.1-2.8,4.5H31.9l15-17.6H36.7c-1.2,0-2.2-1-2.2-2.2s1-2.2,2.2-2.2l0,0h15 \tc0.5,1.4,0.9,2.9,1.1,4.4L41.6,47.4H51z M32,48.6c-2.2,2.2-5.1,3.3-8,3.3s-5.8-1.1-8-3.3c-4.4-4.4-4.4-11.6,0-16s11.6-4.4,16,0 \tc2.1,2.1,3.3,5,3.3,8v2.3l-17.8-0.2c0.3,1,0.9,1.9,1.7,2.7c2.7,2.7,7,2.7,9.7,0c0.9-0.9,2.3-0.9,3.2,0C32.9,46.3,32.9,47.7,32,48.6z \t M17.6,38.2l12.9,0.1c-0.3-1-0.9-1.8-1.6-2.6c-2.7-2.7-7-2.7-9.7,0C18.5,36.5,18,37.3,17.6,38.2z\"/> <path fill=\"#D12A2F\" d=\"M46.9,34.3H36.7c-1.2,0-2.2-1-2.2-2.2s1-2.2,2.2-2.2l0,0h15C48.5,21,40,14.7,30.1,14.7 \tc-12.7,0-23,10.3-23,23s10.3,23,23,23c7.3,0,13.8-3.4,18-8.7H31.8L46.9,34.3z M24,51.9c-2.9,0-5.8-1.1-8-3.3c-4.4-4.4-4.4-11.6,0-16 \ts11.6-4.4,16,0c2.1,2.1,3.3,5,3.3,8v2.3l-17.8-0.2c0.3,1,0.9,1.9,1.7,2.7c2.7,2.7,7,2.7,9.7,0c0.9-0.9,2.3-0.9,3.2,0 \tc0.9,0.9,0.9,2.3,0,3.2C29.8,50.8,26.9,51.9,24,51.9z M30.5,38.3l-12.8-0.1c0.3-0.9,0.9-1.7,1.6-2.4c2.7-2.7,7-2.7,9.7,0 \tC29.6,36.5,30.1,37.4,30.5,38.3z M41.6,47.4l11.2-13.2c0.2,1.1,0.2,2.2,0.2,3.4c0,3.5-0.8,6.8-2.2,9.8H41.6z\"/> </svg>"
      }
    }
  },
  "x-presentations": [
    "Ezsign",
    "RemaxQC"
  ],
  "x-tagGroups": [
    {
      "tags": [
        "General_Introduction",
        "General_Servers",
        "General_Security",
        "General_Conventions",
        "General_StatusCodes",
        "General_WarningCodes",
        "General_ErrorCodes",
        "General_Webhooks",
        "General_Changelog"
      ],
      "name": "General"
    },
    {
      "tags": [
        "Object_Ezsigndocument",
        "Object_Ezsignfolder",
        "Object_Ezsignfoldersignerassociation",
        "Object_User",
        "Object_Userstaged"
      ],
      "name": "Object"
    },
    {
      "tags": [
        "Websocket_RequestServer",
        "Websocket_Response"
      ],
      "name": "Websocket"
    }
  ],
  "x-webhooks": {
    "Webhook-Ezsign-DocumentCompleted": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_Ezsigndocument"
        ],
        "description": "This Webhook will be called when the last signature on an Ezsigndocument is made.",
        "operationId": "Webhook_Ezsign_DocumentCompleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-Ezsign-DocumentCompleted"
              }
            }
          }
        },
        "summary": "Webhook Document Completed",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Webhook-Ezsign-EzsignsignerAcceptclause": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_Ezsignfoldersignerassociation"
        ],
        "description": "This Webhook will be called when an ezsignsigner accept the clauses.",
        "operationId": "Webhook_Ezsign_EzsignsignerAcceptclause",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-Ezsign-EzsignsignerAcceptclause"
              }
            }
          }
        },
        "summary": "Webhook Ezsignsigner Accept Clause",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Webhook-Ezsign-EzsignsignerConnect": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_Ezsignfoldersignerassociation"
        ],
        "description": "This Webhook will be called when an ezsignsigner log in.",
        "operationId": "Webhook_Ezsign_EzsignsignerConnect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-Ezsign-EzsignsignerConnect"
              }
            }
          }
        },
        "summary": "Webhook Ezsignsigner Connect",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Webhook-Ezsign-FolderCompleted": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_Ezsignfolder"
        ],
        "description": "This Webhook will be called when the last signature on the last Ezsigndocument from the folder is made.",
        "operationId": "Webhook_Ezsign_FolderCompleted",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-Ezsign-FolderCompleted"
              }
            }
          }
        },
        "summary": "Webhook Folder Completed",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Webhook-User-UserCreated": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_User"
        ],
        "description": "This Webhook will be called when a user is created in the system.",
        "operationId": "Webhook_User_UserCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-User-UserCreated"
              }
            }
          }
        },
        "summary": "Webhook User Created",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Webhook-Userstaged-UserstagedCreated": {
      "post": {
        "responses": {
          "202": {
            "$ref": "#/x-components/responses/Response-Webhook-202"
          },
          "204": {
            "$ref": "#/x-components/responses/Response-Webhook-204"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Object_Userstaged"
        ],
        "description": "This Webhook will be called when a Userstaged is created in the system.",
        "operationId": "Webhook_Userstaged_UserstagedCreated",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Webhook-Userstaged-UserstagedCreated"
              }
            }
          }
        },
        "summary": "Webhook Userstaged Created",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Websocket-RequestServer-GetWebsocketID-V1": {
      "post": {
        "responses": {
          "101": {
            "$ref": "#/x-components/responses/Response-Websocket"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Websocket_RequestServer"
        ],
        "description": "Request the Websocket ID of the current connection",
        "operationId": "Websocket_RequestServer_GetWebsocketID_V1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Websocket-RequestServer-GetWebsocketID-V1"
              }
            }
          }
        },
        "summary": "Retrieve Websocket ID",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Websocket-Response-Error-V1": {
      "post": {
        "responses": {
          "101": {
            "$ref": "#/x-components/responses/Response-Websocket"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Websocket_Response"
        ],
        "description": "A websocket error message",
        "operationId": "Websocket_Response_Error_V1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Websocket-Response-Error-V1"
              }
            }
          }
        },
        "summary": "Error message",
        "x-presentations": [],
        "x-superadmin": false
      }
    },
    "Websocket-Response-GetWebsocketID-V1": {
      "post": {
        "responses": {
          "101": {
            "$ref": "#/x-components/responses/Response-Websocket"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Websocket_Response"
        ],
        "description": "The Websocket ID of the current connection",
        "operationId": "Websocket_Response_GetWebsocketID_V1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Websocket-Response-GetWebsocketID-V1"
              }
            }
          }
        },
        "summary": "Websocket ID",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    },
    "Websocket-Response-Information-V1": {
      "post": {
        "responses": {
          "101": {
            "$ref": "#/x-components/responses/Response-Websocket"
          }
        },
        "security": [
          {}
        ],
        "tags": [
          "Websocket_Response"
        ],
        "description": "A websocket information message",
        "operationId": "Websocket_Response_Information_V1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Websocket-Response-Information-V1"
              }
            }
          }
        },
        "summary": "Information message",
        "x-presentations": [
          "Ezsign"
        ],
        "x-superadmin": false
      }
    }
  }
}
